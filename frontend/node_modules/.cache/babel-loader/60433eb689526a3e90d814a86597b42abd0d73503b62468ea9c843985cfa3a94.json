{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      orderId: null,\n      // ID de la commande brouillon\n      products: [] // Ajout d'une variable pour stocker les produits\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n      console.log(\"Total mis à jour:\", this.totalPrice);\n    },\n    async updateCart(product) {\n      console.log(\"Tentative de mise à jour du panier pour le produit:\", product);\n      if (!this.orderId) {\n        console.error(\"Aucune commande brouillon disponible.\");\n        return;\n      }\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n        const updateUrl = `${apiLink}/orders/${this.orderId}/lines/${product.lineId}`;\n        console.log(\"URL de mise à jour:\", updateUrl);\n        const response = await fetch(updateUrl, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            qty: product.quantity\n          })\n        });\n        if (!response.ok) {\n          console.error(\"Erreur lors de la mise à jour de la ligne produit\", await response.json());\n        } else {\n          console.log(\"Ligne mise à jour pour\", product.name);\n        }\n      } catch (error) {\n        console.error(\"Erreur updateCart:\", error);\n      }\n      this.updateTotal();\n    },\n    validateOrder() {\n      alert(\"Commande validée !\");\n    },\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        const clientId = localStorage.getItem(\"clientId\");\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        console.log(\"URL de recherche de commandes:\", searchUrl);\n        const searchRes = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const existingOrders = await searchRes.json();\n        console.log(\"Commandes existantes:\", existingOrders);\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          this.orderId = existingOrderId;\n          return existingOrderId;\n        }\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        console.log(\"URL de création de commande:\", createUrl);\n        const createRes = await fetch(createUrl, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        console.log(\"Commande créée:\", newOrder);\n        if (newOrder.id) {\n          this.orderId = newOrder.id;\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la création de la commande brouillon\", newOrder);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur dans getOrCreateDraftOrder :\", error);\n        return null;\n      }\n    },\n    async fetchProducts() {\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n        const url = `${apiLink}/products`;\n        console.log(\"URL pour récupérer les produits:\", url);\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const products = await response.json();\n        console.log(\"Produits récupérés:\", products);\n        this.products = products; // Stockage des produits récupérés\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async fetchCartFromDolibarr() {\n      try {\n        await this.fetchProducts(); // Récupère les produits de l'API Dolibarr\n\n        if (!this.products || this.products.length === 0) {\n          console.error(\"Aucun produit disponible dans 'this.products'\");\n          return;\n        }\n        if (!this.orderId) {\n          console.error(\"Aucune commande brouillon disponible pour récupérer le panier\");\n          return;\n        }\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n        const url = `${apiLink}/orders/${this.orderId}/lines`;\n        console.log(\"URL pour récupérer les lignes de commande:\", url);\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const lines = await response.json();\n        console.log(\"Lignes de commande récupérées:\", lines);\n        this.cartItems = lines.map(line => {\n          const productData = this.products.find(p => p.id === line.fk_product) || {};\n          const tvaRate = productData.tva_tx / 100; // Utiliser la TVA du produit\n          const priceTtc = line.subprice * (1 + tvaRate); // Calcul du prix TTC pour cette ligne\n\n          return {\n            lineId: line.id,\n            id: line.fk_product,\n            name: productData.name || \"Produit inconnu\",\n            description: productData.description || \"\",\n            image: productData.image || \"\",\n            price: line.subprice,\n            // Prix HT de la ligne\n            priceTtc: priceTtc.toFixed(2),\n            // Prix TTC\n            quantity: line.qty\n          };\n        });\n        this.updateTotal();\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du panier depuis Dolibarr:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.getOrCreateDraftOrder().then(orderId => {\n      if (orderId) {\n        this.fetchCartFromDolibarr();\n      }\n    });\n  }\n};","map":{"version":3,"names":["name","data","cartItems","totalPrice","orderId","products","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","updateTotal","reduce","sum","product","price","quantity","console","log","updateCart","error","apiKey","localStorage","getItem","apiLink","Error","updateUrl","lineId","response","fetch","method","headers","body","JSON","stringify","qty","ok","json","validateOrder","alert","getOrCreateDraftOrder","clientId","searchUrl","searchRes","existingOrders","Array","isArray","length","existingOrderId","id","createUrl","today","Date","toISOString","split","createRes","socid","date","status","newOrder","fetchProducts","url","fetchCartFromDolibarr","lines","map","line","productData","find","p","fk_product","tvaRate","tva_tx","priceTtc","subprice","description","image","toFixed","mounted","then"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"cart-page\">\n    <h1>Votre Panier</h1>\n\n    <!-- Affichage des produits dans le panier, si le panier n'est pas vide -->\n    <div class=\"cart-items\" v-if=\"cartItems.length\">\n      <div v-for=\"(product, index) in cartItems\" :key=\"index\" class=\"cart-item\">\n        <div class=\"cart-item-info\">\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"cart-item-image\" />\n          <div class=\"cart-item-details\">\n            <h3 class=\"cart-item-name\">{{ product.name }}</h3>\n            <p class=\"cart-item-description\">{{ product.description }}</p>\n          </div>\n        </div>\n        \n        <div class=\"cart-item-quantity\">\n          <input\n            type=\"number\"\n            v-model.number=\"product.quantity\"\n            min=\"1\"\n            @change=\"updateCart(product)\"\n            class=\"quantity-input\"\n          />\n        </div>\n\n        <div class=\"cart-item-price\">\n          <span class=\"product-unit-price\">{{ formatCurrency(product.price) }}</span>\n          <span class=\"product-total-price\">{{ formatCurrency(product.price * product.quantity) }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Message si le panier est vide -->\n    <p v-else class=\"empty-message\">Votre panier est vide.</p>\n\n    <!-- Résumé du panier et bouton de commande -->\n    <div class=\"cart-summary\" v-if=\"cartItems.length\">\n      <div class=\"total\">\n        <p>Total : <span>{{ formatCurrency(totalPrice) }}</span></p>\n      </div>\n      <button class=\"checkout-button\" @click=\"validateOrder\">\n        Valider la commande\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      orderId: null, // ID de la commande brouillon\n      products: [] // Ajout d'une variable pour stocker les produits\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n      console.log(\"Total mis à jour:\", this.totalPrice);\n    },\n    async updateCart(product) {\n      console.log(\"Tentative de mise à jour du panier pour le produit:\", product);\n      if (!this.orderId) {\n        console.error(\"Aucune commande brouillon disponible.\");\n        return;\n      }\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n\n        const updateUrl = `${apiLink}/orders/${this.orderId}/lines/${product.lineId}`;\n        console.log(\"URL de mise à jour:\", updateUrl);\n\n        const response = await fetch(updateUrl, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            qty: product.quantity,\n          }),\n        });\n\n        if (!response.ok) {\n          console.error(\"Erreur lors de la mise à jour de la ligne produit\", await response.json());\n        } else {\n          console.log(\"Ligne mise à jour pour\", product.name);\n        }\n      } catch (error) {\n        console.error(\"Erreur updateCart:\", error);\n      }\n      this.updateTotal();\n    },\n    validateOrder() {\n      alert(\"Commande validée !\");\n    },\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        const clientId = localStorage.getItem(\"clientId\");\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        console.log(\"URL de recherche de commandes:\", searchUrl);\n\n        const searchRes = await fetch(searchUrl, {\n          headers: { \"DOLAPIKEY\": apiKey },\n        });\n        const existingOrders = await searchRes.json();\n        console.log(\"Commandes existantes:\", existingOrders);\n        \n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          this.orderId = existingOrderId;\n          return existingOrderId;\n        }\n\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        console.log(\"URL de création de commande:\", createUrl);\n\n        const createRes = await fetch(createUrl, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0, // Brouillon\n          }),\n        });\n        const newOrder = await createRes.json();\n        console.log(\"Commande créée:\", newOrder);\n        \n        if (newOrder.id) {\n          this.orderId = newOrder.id;\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la création de la commande brouillon\", newOrder);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur dans getOrCreateDraftOrder :\", error);\n        return null;\n      }\n    },\n    async fetchProducts() {\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n        const url = `${apiLink}/products`;\n        console.log(\"URL pour récupérer les produits:\", url);\n        \n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n        const products = await response.json();\n        console.log(\"Produits récupérés:\", products);\n        \n        this.products = products; // Stockage des produits récupérés\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async fetchCartFromDolibarr() {\n      try {\n        await this.fetchProducts(); // Récupère les produits de l'API Dolibarr\n\n        if (!this.products || this.products.length === 0) {\n          console.error(\"Aucun produit disponible dans 'this.products'\");\n          return;\n        }\n\n        if (!this.orderId) {\n          console.error(\"Aucune commande brouillon disponible pour récupérer le panier\");\n          return;\n        }\n\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n        const url = `${apiLink}/orders/${this.orderId}/lines`;\n        console.log(\"URL pour récupérer les lignes de commande:\", url);\n\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n        const lines = await response.json();\n        console.log(\"Lignes de commande récupérées:\", lines);\n\n        this.cartItems = lines.map(line => {\n          const productData = this.products.find(p => p.id === line.fk_product) || {};\n          const tvaRate = productData.tva_tx / 100; // Utiliser la TVA du produit\n          const priceTtc = line.subprice * (1 + tvaRate); // Calcul du prix TTC pour cette ligne\n\n          return {\n            lineId: line.id,\n            id: line.fk_product,\n            name: productData.name || \"Produit inconnu\",\n            description: productData.description || \"\",\n            image: productData.image || \"\",\n            price: line.subprice, // Prix HT de la ligne\n            priceTtc: priceTtc.toFixed(2), // Prix TTC\n            quantity: line.qty,\n          };\n        });\n        this.updateTotal();\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du panier depuis Dolibarr:\", error);\n      }\n    },\n  },\n  mounted() {\n    this.getOrCreateDraftOrder().then(orderId => {\n      if (orderId) {\n        this.fetchCartFromDolibarr();\n      }\n    });\n  },\n};\n</script>\n\n\n\n<style scoped>\n/* Conteneur de la page du panier */\n.cart-page {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Titre */\nh1 {\n  font-size: 32px;\n  color: #0e100e;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n/* Liste des produits dans le panier */\n.cart-items {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n/* Chaque produit du panier */\n.cart-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  background-color: #f7f7f7;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* Détails du produit */\n.cart-item-info {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n/* Image du produit */\n.cart-item-image {\n  width: 80px;\n  height: auto;\n  border-radius: 5px;\n}\n\n/* Nom et description du produit */\n.cart-item-details {\n  max-width: 400px;\n}\n\n/* Quantité */\n.cart-item-quantity input {\n  width: 50px;\n  padding: 5px;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* Prix unitaire et prix total */\n.cart-item-price {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.product-unit-price,\n.product-total-price {\n  font-size: 18px;\n  color: #0e100e;\n}\n\n.product-total-price {\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n/* Résumé du panier et bouton de commande */\n.cart-summary {\n  margin-top: 30px;\n  text-align: right;\n}\n\n.total {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.checkout-button {\n  padding: 10px 30px;\n  background-color: #5aaad8;\n  color: white;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.checkout-button:hover {\n  background-color: #0e100e;\n}\n\n/* Message quand le panier est vide */\n.empty-message {\n  text-align: center;\n  font-size: 20px;\n  color: #888;\n  margin-top: 50px;\n}\n</style>\n"],"mappings":";;;;AAgDA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,CAAC;MACbC,OAAO,EAAE,IAAI;MAAE;MACfC,QAAQ,EAAE,EAAC,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QACpCC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;IAClB,CAAC;IACDM,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACX,UAAS,GAAI,IAAI,CAACD,SAAS,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACxD,OAAOD,GAAE,GAAIC,OAAO,CAACC,KAAI,GAAID,OAAO,CAACE,QAAQ;MAC/C,CAAC,EAAE,CAAC,CAAC;MACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAClB,UAAU,CAAC;IACnD,CAAC;IACD,MAAMmB,UAAUA,CAACL,OAAO,EAAE;MACxBG,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEJ,OAAO,CAAC;MAC3E,IAAI,CAAC,IAAI,CAACb,OAAO,EAAE;QACjBgB,OAAO,CAACG,KAAK,CAAC,uCAAuC,CAAC;QACtD;MACF;MACA,IAAI;QACF,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,MAAMC,OAAM,GAAIF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAC/C,IAAI,CAACF,MAAK,IAAK,CAACG,OAAO,EAAE;UACvB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QAEA,MAAMC,SAAQ,GAAI,GAAGF,OAAO,WAAW,IAAI,CAACvB,OAAO,UAAUa,OAAO,CAACa,MAAM,EAAE;QAC7EV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEQ,SAAS,CAAC;QAE7C,MAAME,QAAO,GAAI,MAAMC,KAAK,CAACH,SAAS,EAAE;UACtCI,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,WAAW,EAAEV;UACf,CAAC;UACDW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,GAAG,EAAErB,OAAO,CAACE;UACf,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACY,QAAQ,CAACQ,EAAE,EAAE;UAChBnB,OAAO,CAACG,KAAK,CAAC,mDAAmD,EAAE,MAAMQ,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;QAC3F,OAAO;UACLpB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,OAAO,CAACjB,IAAI,CAAC;QACrD;MACF,EAAE,OAAOuB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;MACA,IAAI,CAACT,WAAW,CAAC,CAAC;IACpB,CAAC;IACD2B,aAAaA,CAAA,EAAG;MACdC,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC;IACD,MAAMC,qBAAqBA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAMnB,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,MAAMC,OAAM,GAAIF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAC/C,MAAMkB,QAAO,GAAInB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACjD,IAAI,CAACF,MAAK,IAAK,CAACG,OAAM,IAAK,CAACiB,QAAQ,EAAE;UACpC,MAAM,IAAIhB,KAAK,CAAC,oDAAoD,CAAC;QACvE;QAEA,MAAMiB,SAAQ,GAAI,GAAGlB,OAAO,kBAAkBiB,QAAQ,WAAW;QACjExB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEwB,SAAS,CAAC;QAExD,MAAMC,SAAQ,GAAI,MAAMd,KAAK,CAACa,SAAS,EAAE;UACvCX,OAAO,EAAE;YAAE,WAAW,EAAEV;UAAO;QACjC,CAAC,CAAC;QACF,MAAMuB,cAAa,GAAI,MAAMD,SAAS,CAACN,IAAI,CAAC,CAAC;QAC7CpB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE0B,cAAc,CAAC;QAEpD,IAAIC,KAAK,CAACC,OAAO,CAACF,cAAc,KAAKA,cAAc,CAACG,MAAK,GAAI,CAAC,EAAE;UAC9D,MAAMC,eAAc,GAAIJ,cAAc,CAAC,CAAC,CAAC,CAACK,EAAE;UAC5C,IAAI,CAAChD,OAAM,GAAI+C,eAAe;UAC9B,OAAOA,eAAe;QACxB;QAEA,MAAME,SAAQ,GAAI,GAAG1B,OAAO,SAAS;QACrC,MAAM2B,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpDrC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEgC,SAAS,CAAC;QAEtD,MAAMK,SAAQ,GAAI,MAAM1B,KAAK,CAACqB,SAAS,EAAE;UACvCpB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,WAAW,EAAEV;UACf,CAAC;UACDW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBsB,KAAK,EAAEf,QAAQ;YACfgB,IAAI,EAAEN,KAAK;YACXO,MAAM,EAAE,CAAC,CAAE;UACb,CAAC;QACH,CAAC,CAAC;QACF,MAAMC,QAAO,GAAI,MAAMJ,SAAS,CAAClB,IAAI,CAAC,CAAC;QACvCpB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEyC,QAAQ,CAAC;QAExC,IAAIA,QAAQ,CAACV,EAAE,EAAE;UACf,IAAI,CAAChD,OAAM,GAAI0D,QAAQ,CAACV,EAAE;UAC1B,OAAOU,QAAQ,CAACV,EAAE;QACpB,OAAO;UACLhC,OAAO,CAACG,KAAK,CAAC,qDAAqD,EAAEuC,QAAQ,CAAC;UAC9E,OAAO,IAAI;QACb;MACF,EAAE,OAAOvC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3D,OAAO,IAAI;MACb;IACF,CAAC;IACD,MAAMwC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMvC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,MAAMC,OAAM,GAAIF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAC/C,IAAI,CAACF,MAAK,IAAK,CAACG,OAAO,EAAE;UACvB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,MAAMoC,GAAE,GAAI,GAAGrC,OAAO,WAAW;QACjCP,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE2C,GAAG,CAAC;QAEpD,MAAMjC,QAAO,GAAI,MAAMC,KAAK,CAACgC,GAAG,EAAE;UAChC9B,OAAO,EAAE;YACP,WAAW,EAAEV;UACf;QACF,CAAC,CAAC;QACF,MAAMnB,QAAO,GAAI,MAAM0B,QAAQ,CAACS,IAAI,CAAC,CAAC;QACtCpB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEhB,QAAQ,CAAC;QAE5C,IAAI,CAACA,QAAO,GAAIA,QAAQ,EAAE;MAC5B,EAAE,OAAOkB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;IACF,CAAC;IACD,MAAM0C,qBAAqBA,CAAA,EAAG;MAC5B,IAAI;QACF,MAAM,IAAI,CAACF,aAAa,CAAC,CAAC,EAAE;;QAE5B,IAAI,CAAC,IAAI,CAAC1D,QAAO,IAAK,IAAI,CAACA,QAAQ,CAAC6C,MAAK,KAAM,CAAC,EAAE;UAChD9B,OAAO,CAACG,KAAK,CAAC,+CAA+C,CAAC;UAC9D;QACF;QAEA,IAAI,CAAC,IAAI,CAACnB,OAAO,EAAE;UACjBgB,OAAO,CAACG,KAAK,CAAC,+DAA+D,CAAC;UAC9E;QACF;QAEA,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,MAAMC,OAAM,GAAIF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAC/C,IAAI,CAACF,MAAK,IAAK,CAACG,OAAO,EAAE;UACvB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,MAAMoC,GAAE,GAAI,GAAGrC,OAAO,WAAW,IAAI,CAACvB,OAAO,QAAQ;QACrDgB,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAE2C,GAAG,CAAC;QAE9D,MAAMjC,QAAO,GAAI,MAAMC,KAAK,CAACgC,GAAG,EAAE;UAChC9B,OAAO,EAAE;YACP,WAAW,EAAEV;UACf;QACF,CAAC,CAAC;QACF,MAAM0C,KAAI,GAAI,MAAMnC,QAAQ,CAACS,IAAI,CAAC,CAAC;QACnCpB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE6C,KAAK,CAAC;QAEpD,IAAI,CAAChE,SAAQ,GAAIgE,KAAK,CAACC,GAAG,CAACC,IAAG,IAAK;UACjC,MAAMC,WAAU,GAAI,IAAI,CAAChE,QAAQ,CAACiE,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACnB,EAAC,KAAMgB,IAAI,CAACI,UAAU,KAAK,CAAC,CAAC;UAC3E,MAAMC,OAAM,GAAIJ,WAAW,CAACK,MAAK,GAAI,GAAG,EAAE;UAC1C,MAAMC,QAAO,GAAIP,IAAI,CAACQ,QAAO,IAAK,IAAIH,OAAO,CAAC,EAAE;;UAEhD,OAAO;YACL3C,MAAM,EAAEsC,IAAI,CAAChB,EAAE;YACfA,EAAE,EAAEgB,IAAI,CAACI,UAAU;YACnBxE,IAAI,EAAEqE,WAAW,CAACrE,IAAG,IAAK,iBAAiB;YAC3C6E,WAAW,EAAER,WAAW,CAACQ,WAAU,IAAK,EAAE;YAC1CC,KAAK,EAAET,WAAW,CAACS,KAAI,IAAK,EAAE;YAC9B5D,KAAK,EAAEkD,IAAI,CAACQ,QAAQ;YAAE;YACtBD,QAAQ,EAAEA,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC;YAAE;YAC/B5D,QAAQ,EAAEiD,IAAI,CAAC9B;UACjB,CAAC;QACH,CAAC,CAAC;QACF,IAAI,CAACxB,WAAW,CAAC,CAAC;MACpB,EAAE,OAAOS,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;MACnF;IACF;EACF,CAAC;EACDyD,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrC,qBAAqB,CAAC,CAAC,CAACsC,IAAI,CAAC7E,OAAM,IAAK;MAC3C,IAAIA,OAAO,EAAE;QACX,IAAI,CAAC6D,qBAAqB,CAAC,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}