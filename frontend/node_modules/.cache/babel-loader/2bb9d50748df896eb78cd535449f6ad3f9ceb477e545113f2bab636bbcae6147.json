{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport SalesSummary from \"@/components/SalesSummary.vue\";\nimport ProductSalesList from \"@/components/ProductSalesList.vue\";\nexport default {\n  name: \"SalesDashboard\",\n  components: {\n    NavBar,\n    SalesSummary,\n    ProductSalesList\n  },\n  data() {\n    return {\n      summary: {\n        total_sales: 0,\n        product_sales: []\n      },\n      authToken: localStorage.getItem('authToken'),\n      apiLink: localStorage.getItem('apiLink') || 'http://localhost:8080/api/v1'\n    };\n  },\n  async mounted() {\n    await this.fetchSales();\n  },\n  methods: {\n    async fetchSales() {\n      try {\n        const filter = encodeURIComponent(\"DocStatus eq 'CO' AND IsSOTrx eq true\");\n        const select = \"C_Order_ID,DocumentNo,DateOrdered\";\n        const expand = encodeURIComponent(\"C_OrderLine($select=M_Product_ID,QtyOrdered,LineNetAmt;$expand=M_Product_ID($select=Name))\");\n        const url = `${this.apiLink}/models/C_Order?$filter=${filter}&$select=${select}&$expand=${expand}`;\n        const headers = this.authToken ? {\n          'Authorization': `Bearer ${this.authToken}`\n        } : {};\n        const response = await fetch(url, {\n          headers\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const data = await response.json();\n        const orders = Array.isArray(data.records) ? data.records : [];\n\n        // 1. Aplatir toutes les lignes de commande\n        const lines = orders.flatMap(order => order.C_OrderLine || []);\n\n        // 2. Calcul du chiffre d'affaires total\n        const totalSales = lines.reduce((sum, line) => sum + (parseFloat(line.LineNetAmt) || 0), 0);\n\n        // 3. Regroupement par produit\n        const salesMap = {};\n        lines.forEach(line => {\n          const prod = line.M_Product_ID || {};\n          const pid = prod.id;\n          if (!salesMap[pid]) {\n            salesMap[pid] = {\n              name: prod.Name || '',\n              sales: 0,\n              quantity: 0\n            };\n          }\n          salesMap[pid].sales += parseFloat(line.LineNetAmt) || 0;\n          salesMap[pid].quantity += parseFloat(line.QtyOrdered) || 0;\n        });\n\n        // 4. Format pour ProductSalesList\n        const productSales = Object.values(salesMap).map(p => ({\n          label: p.name,\n          qty_sold: p.quantity,\n          total_ttc: p.sales\n        }));\n\n        // Mise à jour du state\n        this.summary.total_sales = totalSales;\n        this.summary.product_sales = productSales;\n      } catch (error) {\n        console.error(\"Erreur de chargement des ventes :\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","SalesSummary","ProductSalesList","name","components","data","summary","total_sales","product_sales","authToken","localStorage","getItem","apiLink","mounted","fetchSales","methods","filter","encodeURIComponent","select","expand","url","headers","response","fetch","ok","Error","statusText","json","orders","Array","isArray","records","lines","flatMap","order","C_OrderLine","totalSales","reduce","sum","line","parseFloat","LineNetAmt","salesMap","forEach","prod","M_Product_ID","pid","id","Name","sales","quantity","QtyOrdered","productSales","Object","values","map","p","label","qty_sold","total_ttc","error","console"],"sources":["/Users/macbookpro/Sham/S6/Eval2-1/frontend/src/views/SalesDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"sales-dashboard\">\n    <NavBar />\n    <h1 class=\"title\">Tableau de bord des ventes</h1>\n\n    <SalesSummary :total-sales=\"summary.total_sales\" />\n\n    <ProductSalesList :products=\"summary.product_sales\" />\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nimport SalesSummary from \"@/components/SalesSummary.vue\";\nimport ProductSalesList from \"@/components/ProductSalesList.vue\";\n\nexport default {\n  name: \"SalesDashboard\",\n  components: {\n    NavBar,\n    SalesSummary,\n    ProductSalesList,\n  },\n  data() {\n    return {\n      summary: {\n        total_sales: 0,\n        product_sales: [],\n      },\n      authToken: localStorage.getItem('authToken'),\n      apiLink: localStorage.getItem('apiLink') || 'http://localhost:8080/api/v1'\n    };\n  },\n  async mounted() {\n    await this.fetchSales();\n  },\n  methods: {\n    async fetchSales() {\n      try {\n        const filter = encodeURIComponent(\"DocStatus eq 'CO' AND IsSOTrx eq true\");\n        const select = \"C_Order_ID,DocumentNo,DateOrdered\";\n        const expand = encodeURIComponent(\"C_OrderLine($select=M_Product_ID,QtyOrdered,LineNetAmt;$expand=M_Product_ID($select=Name))\");\n        const url = `${this.apiLink}/models/C_Order?$filter=${filter}&$select=${select}&$expand=${expand}`;\n\n        const headers = this.authToken ? { 'Authorization': `Bearer ${this.authToken}` } : {};\n        const response = await fetch(url, { headers });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n\n        const data = await response.json();\n        const orders = Array.isArray(data.records) ? data.records : [];\n\n        // 1. Aplatir toutes les lignes de commande\n        const lines = orders.flatMap(order => order.C_OrderLine || []);\n\n        // 2. Calcul du chiffre d'affaires total\n        const totalSales = lines.reduce((sum, line) => sum + (parseFloat(line.LineNetAmt) || 0), 0);\n\n        // 3. Regroupement par produit\n        const salesMap = {};\n        lines.forEach(line => {\n          const prod = line.M_Product_ID || {};\n          const pid = prod.id;\n          if (!salesMap[pid]) {\n            salesMap[pid] = { name: prod.Name || '', sales: 0, quantity: 0 };\n          }\n          salesMap[pid].sales += parseFloat(line.LineNetAmt) || 0;\n          salesMap[pid].quantity += parseFloat(line.QtyOrdered) || 0;\n        });\n\n        // 4. Format pour ProductSalesList\n        const productSales = Object.values(salesMap).map(p => ({\n          label: p.name,\n          qty_sold: p.quantity,\n          total_ttc: p.sales\n        }));\n\n        // Mise à jour du state\n        this.summary.total_sales = totalSales;\n        this.summary.product_sales = productSales;\n      } catch (error) {\n        console.error(\"Erreur de chargement des ventes :\", error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.sales-dashboard {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n}\n.title {\n  font-size: 2rem;\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}