{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orders-page\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _createElementVNode(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Mes Commandes\", -1 /* HOISTED */)), $data.orders.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Référence\"), _createElementVNode(\"th\", null, \"Date\"), _createElementVNode(\"th\", null, \"Total TTC\"), _createElementVNode(\"th\", null, \"Statut\"), _createElementVNode(\"th\", null, \"Payée\"), _createElementVNode(\"th\", null, \"Facture\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.ref || order.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(order.date_creation)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatCurrency(order.total_ttc)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getStatusText(order)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.isPaid ? 'Oui' : 'Non'), 1 /* TEXT */), _createElementVNode(\"td\", null, [order.invoice ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"product-button\",\n      onClick: $event => $options.showInvoice(order.invoice.id)\n    }, \"Facture\", 8 /* PROPS */, _hoisted_3)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Aucune\"))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Aucune commande trouvée.\"))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createVNode","_component_NavBar","_createElementVNode","_hoisted_1","$data","orders","length","_hoisted_2","_renderList","order","id","_toDisplayString","ref","$options","formatDate","date_creation","formatCurrency","total_ttc","getStatusText","isPaid","invoice","onClick","$event","showInvoice","_hoisted_3","_hoisted_4","_hoisted_5"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/OrdersPage.vue"],"sourcesContent":["<template>\n  <NavBar/>\n  <div class=\"orders-page\">\n    <h1>Mes Commandes</h1>\n    <table v-if=\"orders.length\">\n      <thead>\n        <tr>\n          <th>Référence</th>\n          <th>Date</th>\n          <th>Total TTC</th>\n          <th>Statut</th>\n          <th>Payée</th>\n          <th>Facture</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order.id\">\n          <td>{{ order.ref || order.id }}</td>\n          <td>{{ formatDate(order.date_creation) }}</td>\n          <td>{{ formatCurrency(order.total_ttc) }}</td>\n          <td>{{ getStatusText(order) }}</td>\n          <td>{{ order.isPaid ? 'Oui' : 'Non' }}</td>\n          <td>\n            <button v-if=\"order.invoice\" \n            class=\"product-button\" @click=\"showInvoice(order.invoice.id)\">Facture</button> \n            <span v-else>Aucune</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>Aucune commande trouvée.</p>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nexport default {\n  name: \"MesCommandes\",\n  data() {\n    return {\n      orders: [],\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\"),\n    };\n  },\n  props: {\n    URLdlbr: {\n      type: String,\n      default: 'http://localhost/dolibarr-21.0.0/htdocs',\n    },\n  },\n  \n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async showInvoice(orderId)\n    {\n        if (!this.apiKey || !this.apiLink || !this.clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        const url = `${this.apiLink}/orders/${orderId}/invoices)`;\n        const response = await fetch(url, \n          {\n      method: 'GET',\n      headers: {\n        'DOLAPIKEY': this.apiKey,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(noteData)\n    });\n\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n        var objinvoiceId = await response.json();\n        \n\n      var invoice_ref=objinvoiceId.id;\n\n        localStorage.setItem(\"invoideId\",invoice_ref);\n        this.$router.push(\"/invoice\");\n    },\n    async fetchOrders() {\n      try {\n        if (!this.apiKey || !this.apiLink || !this.clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        const url = `${this.apiLink}/orders?sqlfilters=(fk_soc:=:${this.clientId})`;\n        const response = await fetch(url, {\n          headers: { DOLAPIKEY: this.apiKey },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n\n        const rawOrders = await response.json();\n\n        const ordersWithInvoices = await Promise.all(\n          rawOrders.map(async (order) => {\n            const invoice = await this.fetchInvoiceForOrder(order.id);\n            return {\n              ...order,\n              invoice,\n              isPaid: invoice ? invoice.paye === \"1\" || invoice.paye === 1 : false,\n            };\n          })\n        );\n\n        this.orders = ordersWithInvoices;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des commandes:\", error);\n      }\n    },\n\n    async fetchInvoiceForOrder(orderId) {\n      try {\n        const url = `${this.apiLink}/orders/${orderId}/invoices`;\n        const response = await fetch(url, {\n          headers: { DOLAPIKEY: this.apiKey },\n        });\n\n        if (!response.ok) {\n          console.warn(`Pas de facture pour la commande ${orderId}`);\n          return null;\n        }\n\n        const invoices = await response.json();\n        return invoices.length > 0 ? invoices[0] : null;\n      } catch (error) {\n        console.error(\"Erreur de récupération de facture pour commande\", orderId, error);\n        return null;\n      }\n    },\n\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n\n    formatDate(timestamp) {\n      if (!timestamp) return \"Inconnue\";\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n\n    getStatusText(order) {\n  switch (order.status) {\n    case \"0\":\n      return \"Commande créée\";\n    case \"1\":\n      if (order.billed && (order.billed === true || order.billed === \"1\")) {\n        return \"Validé-Facturé\";\n      } else if (order.invoice) {\n        return \"Validé-Facture créée\";\n      } else {\n        return \"Validé\";\n      }\n    case \"2\":\n      return \"Facturée\";\n    case \"3\":\n      return \"Livrée\";\n    case \"4\":\n      return \"Traitée\";\n    case \"-1\":\n      return \"Annulée\";\n    default:\n      return \"Statut inconnu\";\n  }\n},\n  },\n  components: {\n    NavBar,\n  },\n};\n</script>\n  \n  <style scoped>\n  .orders-page {\n    padding: 40px 20px;\n    background-color: #0e100e;\n    color: #f7f7f7;\n    font-family: 'PP Formula', sans-serif;\n  }\n  \n  h1 {\n    font-family: 'DAWBE';\n    font-size: 48px;\n    margin-bottom: 30px;\n    text-align: center;\n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    color: #1e1e1e;\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  th, td {\n    padding: 12px 15px;\n    border: 1px solid #ddd;\n  }\n  \n  th {\n    background-color: #5aaad8;\n    color: white;\n    text-align: left;\n  }\n  \n  tbody tr:nth-child(even) {\n    background-color: #f3f3f3;\n  }\n  </style>\n  "],"mappings":";;EAEOA,KAAK,EAAC;AAAa;;EAF1BC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAASC,iBAAA,GACTC,mBAAA,CA6BM,OA7BNC,UA6BM,G,0BA5BJD,mBAAA,CAAsB,YAAlB,eAAa,sBACJE,KAAA,CAAAC,MAAM,CAACC,MAAM,I,cAA1BR,mBAAA,CAyBQ,SA7BZS,UAAA,G,0BAKML,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAaQ,iB,kBAZNJ,mBAAA,CAWKC,SAAA,QA3BbS,WAAA,CAgB4BJ,KAAA,CAAAC,MAAM,EAAfI,KAAK;yBAAhBX,mBAAA,CAWK;MAXwBD,GAAG,EAAEY,KAAK,CAACC;QACtCR,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BF,KAAK,CAACG,GAAG,IAAIH,KAAK,CAACC,EAAE,kBAC5BR,mBAAA,CAA8C,YAAAS,gBAAA,CAAvCE,QAAA,CAAAC,UAAU,CAACL,KAAK,CAACM,aAAa,mBACrCb,mBAAA,CAA8C,YAAAS,gBAAA,CAAvCE,QAAA,CAAAG,cAAc,CAACP,KAAK,CAACQ,SAAS,mBACrCf,mBAAA,CAAmC,YAAAS,gBAAA,CAA5BE,QAAA,CAAAK,aAAa,CAACT,KAAK,mBAC1BP,mBAAA,CAA2C,YAAAS,gBAAA,CAApCF,KAAK,CAACU,MAAM,kCACnBjB,mBAAA,CAIK,aAHWO,KAAK,CAACW,OAAO,I,cAA3BtB,mBAAA,CAC8E;MAxB1FD,GAAA;MAwBYD,KAAK,EAAC,gBAAgB;MAAEyB,OAAK,EAAAC,MAAA,IAAET,QAAA,CAAAU,WAAW,CAACd,KAAK,CAACW,OAAO,CAACV,EAAE;OAAG,SAAO,iBAxBjFc,UAAA,M,cAyBY1B,mBAAA,CAA0B,QAzBtC2B,UAAA,EAyByB,QAAM,G;uDAK3B3B,mBAAA,CAAsC,KA9B1C4B,UAAA,EA8Bc,0BAAwB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}