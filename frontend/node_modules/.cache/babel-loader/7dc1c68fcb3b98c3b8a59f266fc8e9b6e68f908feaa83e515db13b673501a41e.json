{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    updateCart() {\n      // Met à jour le total et sauvegarde le panier dans localStorage\n      this.updateTotal();\n      localStorage.setItem(\"cart\", JSON.stringify(this.cartItems));\n    },\n    validateOrder() {\n      alert(\"Commande validée !\");\n      // Ajoute ici la logique d'envoi ou de validation côté Dolibarr\n    },\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink'); // Exemple : \"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php\"\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const existingOrders = await searchRes.json();\n        console.log(\"Réponse recherche commande:\", existingOrders);\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          localStorage.setItem(\"orderId\", existingOrderId);\n          console.log(\"Commande existante trouvée :\", existingOrderId);\n          return existingOrderId;\n        }\n\n        // Sinon, créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        console.log(\"Réponse création commande:\", newOrder);\n        if (newOrder.id) {\n          localStorage.setItem(\"orderId\", newOrder.id);\n          console.log(\"Nouvelle commande créée :\", newOrder.id);\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la création de la commande brouillon\", newOrder);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur dans getOrCreateDraftOrder :\", error);\n        return null;\n      }\n    }\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    // Charger le panier depuis localStorage s'il existe\n    const storedCart = JSON.parse(localStorage.getItem(\"cart\"));\n    if (storedCart && Array.isArray(storedCart)) {\n      this.cartItems = storedCart;\n    }\n    this.updateTotal();\n    this.getOrCreateDraftOrder(); // Récupération ou création de la commande brouillon\n  }\n};","map":{"version":3,"names":["name","data","cartItems","totalPrice","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","updateTotal","reduce","sum","product","price","quantity","updateCart","localStorage","setItem","JSON","stringify","validateOrder","alert","getOrCreateDraftOrder","apiKey","getItem","apiLink","clientId","Error","searchUrl","searchRes","fetch","headers","existingOrders","json","console","log","Array","isArray","length","existingOrderId","id","createUrl","today","Date","toISOString","split","createRes","method","body","socid","date","status","newOrder","error","watch","handler","deep","mounted","storedCart","parse"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <div class=\"cart-page\">\n    <h1>Votre Panier</h1>\n\n    <!-- Affichage des produits dans le panier, si le panier n'est pas vide -->\n    <div class=\"cart-items\" v-if=\"cartItems.length\">\n      <div v-for=\"(product, index) in cartItems\" :key=\"index\" class=\"cart-item\">\n        <div class=\"cart-item-info\">\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"cart-item-image\" />\n          <div class=\"cart-item-details\">\n            <h3 class=\"cart-item-name\">{{ product.name }}</h3>\n            <p class=\"cart-item-description\">{{ product.description }}</p>\n          </div>\n        </div>\n        \n        <div class=\"cart-item-quantity\">\n          <input\n            type=\"number\"\n            v-model.number=\"product.quantity\"\n            min=\"1\"\n            @change=\"updateCart\"\n            class=\"quantity-input\"\n          />\n        </div>\n\n        <div class=\"cart-item-price\">\n          <span class=\"product-unit-price\">{{ formatCurrency(product.price) }}</span>\n          <span class=\"product-total-price\">{{ formatCurrency(product.price * product.quantity) }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Message si le panier est vide -->\n    <p v-else class=\"empty-message\">Votre panier est vide.</p>\n\n    <!-- Résumé du panier et bouton de commande -->\n    <div class=\"cart-summary\" v-if=\"cartItems.length\">\n      <div class=\"total\">\n        <p>Total : <span>{{ formatCurrency(totalPrice) }}</span></p>\n      </div>\n      <button class=\"checkout-button\" @click=\"validateOrder\">\n        Valider la commande\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    updateCart() {\n      // Met à jour le total et sauvegarde le panier dans localStorage\n      this.updateTotal();\n      localStorage.setItem(\"cart\", JSON.stringify(this.cartItems));\n    },\n    validateOrder() {\n      alert(\"Commande validée !\");\n      // Ajoute ici la logique d'envoi ou de validation côté Dolibarr\n    },\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink'); // Exemple : \"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php\"\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: { \"DOLAPIKEY\": apiKey }\n        });\n        const existingOrders = await searchRes.json();\n        console.log(\"Réponse recherche commande:\", existingOrders);\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          localStorage.setItem(\"orderId\", existingOrderId);\n          console.log(\"Commande existante trouvée :\", existingOrderId);\n          return existingOrderId;\n        }\n\n        // Sinon, créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        console.log(\"Réponse création commande:\", newOrder);\n        if (newOrder.id) {\n          localStorage.setItem(\"orderId\", newOrder.id);\n          console.log(\"Nouvelle commande créée :\", newOrder.id);\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la création de la commande brouillon\", newOrder);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur dans getOrCreateDraftOrder :\", error);\n        return null;\n      }\n    },\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    // Charger le panier depuis localStorage s'il existe\n    const storedCart = JSON.parse(localStorage.getItem(\"cart\"));\n    if (storedCart && Array.isArray(storedCart)) {\n      this.cartItems = storedCart;\n    }\n    this.updateTotal();\n    this.getOrCreateDraftOrder(); // Récupération ou création de la commande brouillon\n  },\n};\n</script>\n\n<style scoped>\n/* Conteneur de la page du panier */\n.cart-page {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Titre */\nh1 {\n  font-size: 32px;\n  color: #0e100e;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n/* Liste des produits dans le panier */\n.cart-items {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n/* Chaque produit du panier */\n.cart-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  background-color: #f7f7f7;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* Détails du produit */\n.cart-item-info {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n/* Image du produit */\n.cart-item-image {\n  width: 80px;\n  height: auto;\n  border-radius: 5px;\n}\n\n/* Nom et description du produit */\n.cart-item-details {\n  max-width: 400px;\n}\n\n/* Quantité */\n.cart-item-quantity input {\n  width: 50px;\n  padding: 5px;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* Prix unitaire et prix total */\n.cart-item-price {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.product-unit-price,\n.product-total-price {\n  font-size: 18px;\n  color: #0e100e;\n}\n\n.product-total-price {\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n/* Résumé du panier et bouton de commande */\n.cart-summary {\n  margin-top: 30px;\n  text-align: right;\n}\n\n.total {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.checkout-button {\n  padding: 10px 30px;\n  background-color: #5aaad8;\n  color: white;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.checkout-button:hover {\n  background-color: #0e100e;\n}\n\n/* Message quand le panier est vide */\n.empty-message {\n  text-align: center;\n  font-size: 20px;\n  color: #888;\n  margin-top: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}