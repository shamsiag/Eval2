{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      orderId: null,\n      products: []\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.priceTtc * product.quantity;\n      }, 0);\n    },\n    async updateCart(product) {\n      if (!this.orderId) return console.error(\"Aucune commande brouillon.\");\n      if (product.quantity < 1) {\n        product.quantity = 1;\n      }\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const updateUrl = `${apiLink}/orders/${this.orderId}/lines/${product.lineId}`;\n        const response = await fetch(updateUrl, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            qty: parseFloat(product.quantity)\n          })\n        });\n        if (!response.ok) {\n          const err = await response.json();\n          return console.error(\"Erreur API:\", err);\n        }\n        this.updateTotal();\n      } catch (error) {\n        console.error(\"Erreur updateCart:\", error);\n      }\n    },\n    async validateOrder() {\n      console.log('Order ID:', this.orderId);\n      if (!this.orderId) {\n        console.error(\"Aucune commande brouillon disponible.\");\n        return;\n      }\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const updateStatusUrl = `${apiLink}/orders/${this.orderId}/validate`;\n        const response = await fetch(updateStatusUrl, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            status: 5\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          console.error(\"Erreur lors de la validation de la commande\", error);\n          return;\n        }\n        alert(\"Commande validée et payée !\");\n        this.$router.push('/confirmation');\n      } catch (error) {\n        console.error(\"Erreur lors de la validation de la commande:\", error);\n      }\n    },\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\" + searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n    async createDraftOrder(clientId) {\n      const payload = {\n        socid: clientId,\n        date: new Date().toISOString().split('T')[0],\n        status: 0,\n        lines: []\n      };\n      const response = await fetch(`${this.apiLink}/orders`, {\n        method: 'POST',\n        headers: {\n          \"DOLAPIKEY\": this.apiKey,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const message = await response.text();\n        throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n      }\n      const newOrder = await response.json();\n      console.log(\"Commande brouillon créée:\", newOrder);\n      return newOrder.id;\n    },\n    async fetchProducts() {\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const url = `${apiLink}/products`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const products = await response.json();\n        this.products = products;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async fetchCartFromDolibarr() {\n      try {\n        await this.fetchProducts();\n        if (!this.products || this.products.length === 0) {\n          console.error(\"Aucun produit disponible dans 'this.products'\");\n          return;\n        }\n        if (!this.orderId) {\n          console.error(\"Aucune commande brouillon disponible pour récupérer le panier\");\n          return;\n        }\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        const url = `${apiLink}/orders/${this.orderId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const lines = await response.json();\n        console.log(\"Lignes du panier récupérées:\", lines);\n        const filteredLines = lines.filter(line => parseFloat(line.qty) > 0);\n        const mergedCartItems = this.mergeCartItems(filteredLines);\n        this.cartItems = mergedCartItems;\n        this.updateTotal();\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du panier depuis Dolibarr:\", error);\n      }\n    },\n    mergeCartItems(lines) {\n      const mergedItems = [];\n      lines.forEach(line => {\n        const productData = this.products.find(p => p.id === line.fk_product) || {};\n        const tvaRate = parseFloat(productData.tva_tx || 0) / 100;\n        const priceHt = parseFloat(line.subprice);\n        const priceTtc = +(priceHt * (1 + tvaRate)).toFixed(2);\n        const existingProduct = mergedItems.find(item => item.id === line.fk_product);\n        if (existingProduct) {\n          existingProduct.quantity += parseFloat(line.qty);\n        } else {\n          mergedItems.push({\n            lineId: line.id,\n            id: line.fk_product,\n            name: productData.label || productData.name || \"Produit inconnu\",\n            description: productData.description || \"\",\n            image: productData.photo || productData.image || \"\",\n            priceHt: priceHt,\n            priceTtc: priceTtc,\n            quantity: Math.max(1, parseFloat(line.qty) || 1)\n          });\n        }\n      });\n      return mergedItems;\n    },\n    async deleteCartItem(product) {\n      if (!this.orderId) {\n        console.error(\"Aucune commande brouillon disponible.\");\n        return;\n      }\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const deleteUrl = `${apiLink}/orders/${this.orderId}/lines/${product.lineId}`;\n        const response = await fetch(deleteUrl, {\n          method: \"DELETE\",\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        if (!response.ok) {\n          console.error(\"Erreur lors de la suppression\", await response.json());\n        } else {\n          this.cartItems = this.cartItems.filter(item => item.lineId !== product.lineId);\n          this.updateTotal();\n        }\n      } catch (error) {\n        console.error(\"Erreur deleteCartItem:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.getOrCreateDraftOrder().then(orderId => {\n      if (orderId) this.fetchCartFromDolibarr();\n    });\n  }\n};","map":{"version":3,"names":["name","data","cartItems","totalPrice","orderId","products","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","updateTotal","reduce","sum","product","priceTtc","quantity","updateCart","console","error","apiKey","localStorage","getItem","apiLink","Error","updateUrl","lineId","response","fetch","method","headers","body","JSON","stringify","qty","parseFloat","ok","err","json","validateOrder","log","updateStatusUrl","status","alert","$router","push","initCart","clientId","searchUrl","statusText","orders","Array","isArray","length","cartId","id","fetchCartItems","newOrderId","createDraftOrder","payload","socid","date","Date","toISOString","split","lines","message","text","newOrder","fetchProducts","url","fetchCartFromDolibarr","filteredLines","filter","line","mergedCartItems","mergeCartItems","mergedItems","forEach","productData","find","p","fk_product","tvaRate","tva_tx","priceHt","subprice","toFixed","existingProduct","item","label","description","image","photo","Math","max","deleteCartItem","deleteUrl","mounted","getOrCreateDraftOrder","then"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"cart-page\">\n    <h1>Votre Panier</h1>\n\n    <!-- Affichage des produits dans le panier, si le panier n'est pas vide -->\n    <div class=\"cart-items\" v-if=\"cartItems.length\">\n      <div v-for=\"(product, index) in cartItems\" :key=\"index\" class=\"cart-item\">\n        <div class=\"cart-item-info\">\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"cart-item-image\" />\n          <div class=\"cart-item-details\">\n            <h3 class=\"cart-item-name\">{{ product.name }}</h3>\n            <p class=\"cart-item-description\">{{ product.description }}</p>\n          </div>\n        </div>\n\n        <div class=\"cart-item-quantity\">\n          <span class=\"quantity-display\">{{ product.quantity }}</span>\n        </div>\n\n        <div class=\"cart-item-price\">\n          <span class=\"product-unit-price\">{{ formatCurrency(product.priceTtc) }} TTC</span>\n          <span class=\"product-total-price\">{{ formatCurrency(product.priceTtc * product.quantity) }}</span>\n        </div>\n\n        <button class=\"remove-button\" @click=\"deleteCartItem(product)\">\n          Supprimer\n        </button>\n      </div>\n    </div>\n\n    <!-- Message si le panier est vide -->\n    <p v-else class=\"empty-message\">Votre panier est vide.</p>\n\n    <!-- Résumé du panier et bouton de commande -->\n    <div class=\"cart-summary\" v-if=\"cartItems.length\">\n      <div class=\"total\">\n        <p>Total : <span>{{ formatCurrency(totalPrice) }}</span></p>\n      </div>\n      <button class=\"checkout-button\" @click=\"validateOrder\">\n        Valider la commande\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      orderId: null,\n      products: []\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + (product.priceTtc * product.quantity);\n      }, 0);\n    },\n    async updateCart(product) {\n      if (!this.orderId) return console.error(\"Aucune commande brouillon.\");\n\n      if (product.quantity < 1) {\n        product.quantity = 1;\n      }\n\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n        const updateUrl = `${apiLink}/orders/${this.orderId}/lines/${product.lineId}`;\n        const response = await fetch(updateUrl, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({ qty: parseFloat(product.quantity) }),\n        });\n\n        if (!response.ok) {\n          const err = await response.json();\n          return console.error(\"Erreur API:\", err);\n        }\n\n        this.updateTotal();\n      } catch (error) {\n        console.error(\"Erreur updateCart:\", error);\n      }\n    },\n    async validateOrder() {\n      console.log('Order ID:', this.orderId);\n      if (!this.orderId) {\n        console.error(\"Aucune commande brouillon disponible.\");\n        return;\n      }\n\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n        const updateStatusUrl = `${apiLink}/orders/${this.orderId}/validate`;\n        const response = await fetch(updateStatusUrl, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({ status: 5 }),\n        });\n\n        if (!response.ok) {\n          const error = await response.json();\n          console.error(\"Erreur lors de la validation de la commande\", error);\n          return;\n        }\n\n        alert(\"Commande validée et payée !\");\n        this.$router.push('/confirmation');\n\n      } catch (error) {\n        console.error(\"Erreur lors de la validation de la commande:\", error);\n      }\n    },\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\"+searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n\n    async createDraftOrder(clientId) {\n      const payload = {\n        socid: clientId,\n        date: new Date().toISOString().split('T')[0],\n        status: 0,\n        lines: []\n      };\n\n      const response = await fetch(`${this.apiLink}/orders`, {\n        method: 'POST',\n        headers: {\n          \"DOLAPIKEY\": this.apiKey,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        const message = await response.text();\n        throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n      }\n\n      const newOrder = await response.json();\n      console.log(\"Commande brouillon créée:\", newOrder);\n      return newOrder.id;\n    },\n    async fetchProducts() {\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n        const url = `${apiLink}/products`;\n        const response = await fetch(url, {\n          headers: { \"DOLAPIKEY\": apiKey },\n        });\n        const products = await response.json();\n        this.products = products;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async fetchCartFromDolibarr() {\n      try {\n        await this.fetchProducts();\n        if (!this.products || this.products.length === 0) {\n          console.error(\"Aucun produit disponible dans 'this.products'\");\n          return;\n        }\n\n        if (!this.orderId) {\n          console.error(\"Aucune commande brouillon disponible pour récupérer le panier\");\n          return;\n        }\n\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        const url = `${apiLink}/orders/${this.orderId}/lines`;\n\n        const response = await fetch(url, {\n          headers: { \"DOLAPIKEY\": apiKey },\n        });\n        const lines = await response.json();\n        console.log(\"Lignes du panier récupérées:\", lines);\n\n        const filteredLines = lines.filter(line => parseFloat(line.qty) > 0);\n        const mergedCartItems = this.mergeCartItems(filteredLines);\n\n        this.cartItems = mergedCartItems;\n        this.updateTotal();\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du panier depuis Dolibarr:\", error);\n      }\n    },\n    mergeCartItems(lines) {\n      const mergedItems = [];\n      lines.forEach(line => {\n        const productData = this.products.find(p => p.id === line.fk_product) || {};\n        const tvaRate = parseFloat(productData.tva_tx || 0) / 100;\n        const priceHt = parseFloat(line.subprice);\n        const priceTtc = +(priceHt * (1 + tvaRate)).toFixed(2);\n\n        const existingProduct = mergedItems.find(item => item.id === line.fk_product);\n        if (existingProduct) {\n          existingProduct.quantity += parseFloat(line.qty);\n        } else {\n          mergedItems.push({\n            lineId: line.id,\n            id: line.fk_product,\n            name: productData.label || productData.name || \"Produit inconnu\",\n            description: productData.description || \"\",\n            image: productData.photo || productData.image || \"\",\n            priceHt: priceHt,\n            priceTtc: priceTtc,\n            quantity: Math.max(1, parseFloat(line.qty) || 1),\n          });\n        }\n      });\n\n      return mergedItems;\n    },\n    async deleteCartItem(product) {\n      if (!this.orderId) {\n        console.error(\"Aucune commande brouillon disponible.\");\n        return;\n      }\n      try {\n        const apiKey = localStorage.getItem(\"apiKey\");\n        const apiLink = localStorage.getItem(\"apiLink\");\n        if (!apiKey || !apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n        const deleteUrl = `${apiLink}/orders/${this.orderId}/lines/${product.lineId}`;\n        const response = await fetch(deleteUrl, {\n          method: \"DELETE\",\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n\n        if (!response.ok) {\n          console.error(\"Erreur lors de la suppression\", await response.json());\n        } else {\n          this.cartItems = this.cartItems.filter(item => item.lineId !== product.lineId);\n          this.updateTotal();\n        }\n      } catch (error) {\n        console.error(\"Erreur deleteCartItem:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.getOrCreateDraftOrder().then(orderId => {\n      if (orderId) this.fetchCartFromDolibarr();\n    });\n  }\n};\n</script>\n\n\n<style scoped>\n/* Conteneur de la page du panier */\n.cart-page {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Titre */\nh1 {\n  font-size: 32px;\n  color: #0e100e;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n/* Liste des produits dans le panier */\n.cart-items {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n/* Chaque produit du panier */\n.cart-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  background-color: #f7f7f7;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* Détails du produit */\n.cart-item-info {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n/* Image du produit */\n.cart-item-image {\n  width: 80px;\n  height: auto;\n  border-radius: 5px;\n}\n\n/* Nom et description du produit */\n.cart-item-details {\n  max-width: 400px;\n}\n\n/* Quantité */\n.cart-item-quantity input {\n  width: 50px;\n  padding: 5px;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* Prix unitaire et prix total */\n.cart-item-price {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.product-unit-price,\n.product-total-price {\n  font-size: 18px;\n  color: #0e100e;\n}\n\n.product-total-price {\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n/* Résumé du panier et bouton de commande */\n.cart-summary {\n  margin-top: 30px;\n  text-align: right;\n}\n\n.total {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.checkout-button {\n  padding: 10px 30px;\n  background-color: #5aaad8;\n  color: white;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.checkout-button:hover {\n  background-color: #0e100e;\n}\n\n/* Message quand le panier est vide */\n.empty-message {\n  text-align: center;\n  font-size: 20px;\n  color: #888;\n  margin-top: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}