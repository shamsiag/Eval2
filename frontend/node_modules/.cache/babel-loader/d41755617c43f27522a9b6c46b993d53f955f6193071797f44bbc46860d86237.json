{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nimport NavBar from '@/components/NavBar.vue';\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [] // On commence avec un tableau vide\n    };\n  },\n  created() {\n    this.fetchProductsFromDolibarr(); // Récupérer les produits au moment de la création du composant\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n        const url = `${apiLink}/products`; // URL de l'API Dolibarr pour récupérer les produits\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const products = await response.json();\n        console.log(\"Réponse de l'API:\", products);\n        console.log(\"Produits récupérés de Dolibarr:\", products);\n        this.products = products.map(product => {\n          // Calcul du prix TTC\n          const tvaRate = product.tva_tx / 100; // Conversion de la TVA en pourcentage\n          const priceTtc = product.price * (1 + tvaRate); // Utilisation de product.price qui est le prix HT\n\n          console.log('Prix HT:', product.price); // Affichage du prix HT\n\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.fk_photo ? `${apiLink}/product/photos/${product.fk_photo}` : null,\n            // Vérification de l'image\n            price_ht: product.price,\n            price_ttc: priceTtc.toFixed(2) // Arrondir à 2 décimales\n          };\n        });\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    formatPrice(price) {\n      return `${price} MGA`; // Formatage du prix avec l'euro\n    },\n    async addToCart(product) {\n      // Vérification de la connexion\n      const isLoggedIn = localStorage.getItem('authToken'); // Vérifier un token ou état d'authentification\n\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({\n          name: 'login'\n        });\n        return;\n      }\n      const existingItem = this.cartItems.find(item => item.fk_product === product.id);\n      if (existingItem) {\n        // Produit déjà dans le panier → on incrémente la quantité\n        existingItem.quantity += 1;\n        const updateData = {\n          quantity: existingItem.quantity,\n          subprice: existingItem.price\n        };\n        try {\n          const response = await axios.put(`https://your-dolibarr-url/api/index.php/orders/${this.cartId}/lines/${existingItem.lineId}`, updateData, {\n            headers: {\n              \"DOLAPIKEY\": this.apiKey,\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          if (response.status === 200) {\n            this.fetchCart(); // Recharger les données du panier\n          } else {\n            console.error(\"Erreur lors de la mise à jour du panier :\", response);\n          }\n        } catch (error) {\n          console.error(\"Erreur axios (update):\", error);\n        }\n      } else {\n        // Produit pas encore dans le panier → on l’ajoute avec quantité 1\n        const itemData = {\n          fk_product: product.id,\n          qty: 1,\n          subprice: product.price,\n          tva_tx: product.tva_tx\n        };\n        try {\n          const response = await axios.post(`https://your-dolibarr-url/api/index.php/orders/${this.cartId}/lines`, itemData, {\n            headers: {\n              \"DOLAPIKEY\": this.apiKey,\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          if (response.status === 200 || response.status === 201) {\n            this.fetchCart(); // Recharger les données du panier\n          } else {\n            console.error(\"Erreur lors de l’ajout au panier :\", response);\n          }\n        } catch (error) {\n          console.error(\"Erreur axios (add):\", error);\n        }\n      }\n    },\n    // Méthodes pour gérer le panier et la commande dans Dolibarr\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const existingOrders = await searchRes.json();\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          return existingOrders[0].id;\n        }\n\n        // Créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        return newOrder.id || null;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération ou création de la commande:\", error);\n        return null;\n      }\n    },\n    async addProductToDolibarrCart(product, orderId) {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiLink || !apiKey) {\n          throw new Error('API Key ou API Link manquant');\n        }\n        const orderLine = {\n          fk_product: product.id,\n          qty: product.quantity,\n          subprice: product.price_ht\n        };\n        const response = await fetch(`${apiLink}/orders/${orderId}/lines`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'DOLAPIKEY': apiKey\n          },\n          body: JSON.stringify(orderLine)\n        });\n        if (response.ok) {\n          console.log('Produit ajouté à la commande Dolibarr');\n        } else {\n          const errorData = await response.json();\n          console.error('Erreur lors de l\\'ajout du produit à Dolibarr', errorData);\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit à Dolibarr:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","NavBar","name","components","data","products","created","fetchProductsFromDolibarr","methods","apiKey","localStorage","getItem","apiLink","Error","url","response","fetch","headers","json","console","log","map","product","tvaRate","tva_tx","priceTtc","price","id","label","description","image","fk_photo","price_ht","price_ttc","toFixed","error","formatPrice","addToCart","isLoggedIn","alert","$router","push","existingItem","cartItems","find","item","fk_product","quantity","updateData","subprice","put","cartId","lineId","status","fetchCart","itemData","qty","post","getOrCreateDraftOrder","clientId","searchUrl","searchRes","existingOrders","Array","isArray","length","createUrl","today","Date","toISOString","split","createRes","method","body","JSON","stringify","socid","date","newOrder","addProductToDolibarrCart","orderId","orderLine","ok","errorData"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <section class=\"shop-section\">\n    <h2 class=\"section-title\">NOS</h2>\n    <h2 class=\"section-title\">PRODUITS</h2>\n\n    <div class=\"cards-container\">\n      <div \n        v-for=\"(product, index) in products\" \n        :key=\"index\" \n        class=\"product-card\"\n      >\n        <img :src=\"product.image || require('@/assets/item/default-product.png')\" :alt=\"product.name\" class=\"product-image\" />\n        <h3 class=\"product-name\">{{ product.name }}</h3>\n        <p class=\"product-description\">{{ product.description }}</p>\n        <p class=\"product-price\">{{ formatPrice(product.price_ttc) }}</p>\n        <button class=\"product-button\" @click=\"addToCart(product)\">Ajouter au panier</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport axios from 'axios'; \nimport NavBar from '@/components/NavBar.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [] // On commence avec un tableau vide\n    };\n  },\n  created() {\n    this.fetchProductsFromDolibarr(); // Récupérer les produits au moment de la création du composant\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n\n        const url = `${apiLink}/products`; // URL de l'API Dolibarr pour récupérer les produits\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n\n        const products = await response.json();\n        console.log(\"Réponse de l'API:\", products); \n        console.log(\"Produits récupérés de Dolibarr:\", products);\n\n        this.products = products.map(product => {\n  // Calcul du prix TTC\n          const tvaRate = product.tva_tx / 100; // Conversion de la TVA en pourcentage\n          const priceTtc = product.price * (1 + tvaRate); // Utilisation de product.price qui est le prix HT\n\n          console.log('Prix HT:', product.price); // Affichage du prix HT\n\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.fk_photo ? `${apiLink}/product/photos/${product.fk_photo}` : null, // Vérification de l'image\n            price_ht: product.price,\n            price_ttc: priceTtc.toFixed(2), // Arrondir à 2 décimales\n          };\n        });\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n\n    formatPrice(price) {\n      return `${price} MGA`; // Formatage du prix avec l'euro\n    },\n\n    async addToCart(product) {\n      // Vérification de la connexion\n      const isLoggedIn = localStorage.getItem('authToken'); // Vérifier un token ou état d'authentification\n\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({ name: 'login' });\n        return;\n      }\n\n      const existingItem = this.cartItems.find(item => item.fk_product === product.id);\n\n  if (existingItem) {\n    // Produit déjà dans le panier → on incrémente la quantité\n    existingItem.quantity += 1;\n\n    const updateData = {\n      quantity: existingItem.quantity,\n      subprice: existingItem.price\n    };\n\n    try {\n      const response = await axios.put(\n        `https://your-dolibarr-url/api/index.php/orders/${this.cartId}/lines/${existingItem.lineId}`,\n        updateData,\n        {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      );\n\n      if (response.status === 200) {\n        this.fetchCart(); // Recharger les données du panier\n      } else {\n        console.error(\"Erreur lors de la mise à jour du panier :\", response);\n      }\n    } catch (error) {\n      console.error(\"Erreur axios (update):\", error);\n    }\n  } else {\n    // Produit pas encore dans le panier → on l’ajoute avec quantité 1\n    const itemData = {\n      fk_product: product.id,\n      qty: 1,\n      subprice: product.price,\n      tva_tx: product.tva_tx\n    };\n\n    try {\n      const response = await axios.post(\n        `https://your-dolibarr-url/api/index.php/orders/${this.cartId}/lines`,\n        itemData,\n        {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      );\n\n      if (response.status === 200 || response.status === 201) {\n        this.fetchCart(); // Recharger les données du panier\n      } else {\n        console.error(\"Erreur lors de l’ajout au panier :\", response);\n      }\n    } catch (error) {\n      console.error(\"Erreur axios (add):\", error);\n    }\n  }\n},\n\n    // Méthodes pour gérer le panier et la commande dans Dolibarr\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: { \"DOLAPIKEY\": apiKey }\n        });\n        const existingOrders = await searchRes.json();\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          return existingOrders[0].id;\n        }\n\n        // Créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        return newOrder.id || null;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération ou création de la commande:\", error);\n        return null;\n      }\n    },\n\n    async addProductToDolibarrCart(product, orderId) {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiLink || !apiKey) {\n          throw new Error('API Key ou API Link manquant');\n        }\n\n        const orderLine = {\n          fk_product: product.id,\n          qty: product.quantity,\n          subprice: product.price_ht\n        };\n\n        const response = await fetch(`${apiLink}/orders/${orderId}/lines`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'DOLAPIKEY': apiKey,\n          },\n          body: JSON.stringify(orderLine),\n        });\n\n        if (response.ok) {\n          console.log('Produit ajouté à la commande Dolibarr');\n        } else {\n          const errorData = await response.json();\n          console.error('Erreur lors de l\\'ajout du produit à Dolibarr', errorData);\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit à Dolibarr:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Optionnel : modifications spécifiques à la page Shop */\n.shop-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n.section-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  margin-left: 115px;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n/* Section globale */\n.products-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n/* Titre */\n.section-title {\n  font-size: 56px;\n  margin-left: 115px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  text-align: left;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n/* Conteneur des cartes */\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* 3 produits par ligne */\n  gap: 50px;\n  max-width: 75%; /* Ajuste à la largeur du parent */\n  overflow-x: hidden; /* Empêche le scroll horizontal */\n  overflow-y: auto; /* Défilement vertical */\n  padding-bottom: 10px;\n  margin-left: 25%;\n  height: 100vh; /* Ajuste la hauteur pour voir le scroll vertical */\n}\n\n/* Style des cartes */\n.product-card {\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, color 0.3s ease;\n  text-align: left;\n  width: 100%;\n  height: 499px;\n  flex-shrink: 0; \n  flex-grow: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  color: #5AAAD8;\n}\n\n/* Image */\n.product-image {\n  width: 221px;\n  height: auto;\n  border-radius: 8px;\n  margin-left: 100px;\n}\n\n/* Nom du produit */\n.product-name {\n  font-size: 1.5em;\n  margin: 10px 0;\n  font-family: 'DAWBE';\n  color: #1E1E1E;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 0;\n}\n\n/* Description */\n.product-description {\n  margin-top: 0;\n  font-size: 1em;\n  color: #1E1E1E;\n  font-family: 'PP Formula', sans-serif;\n  margin-bottom: 10px;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n}\n\n/* Bouton */\n.product-button {\n  padding: 10px 15px;\n  border: none;\n  background-color: #0E100E;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  font-family: 'PP Formula', sans-serif;\n  margin-top: auto;\n  align-self: flex-end;\n}\n\n.product-card:hover .product-name,\n.product-card:hover .product-description {\n  color: #5AAAD8;\n}\n\n.product-button:hover {\n  background-color: #5AAAD8;\n}\n.product-price {\n  font-size: 1.2em;\n  color: #1E1E1E;\n  margin-top: 10px;\n  font-family: 'PP Formula', sans-serif;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}