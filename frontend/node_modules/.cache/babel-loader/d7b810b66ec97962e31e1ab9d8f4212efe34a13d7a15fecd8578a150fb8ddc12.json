{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-sales-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductSalesItem = _resolveComponent(\"ProductSalesItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Détails par produit\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createBlock(_component_ProductSalesItem, {\n      key: product.label,\n      label: product.label,\n      qty: product.qty_sold,\n      total: product.total_ttc\n    }, null, 8 /* PROPS */, [\"label\", \"qty\", \"total\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","_ctx","products","product","_createBlock","_component_ProductSalesItem","key","label","qty","qty_sold","total","total_ttc"],"sources":["/Users/macbookpro/Sham/S6/Eval2-1/frontend/src/components/ProductSalesList.vue"],"sourcesContent":["<template>\n    <div class=\"product-sales-list\">\n      <h2>Détails par produit</h2>\n      <ProductSalesItem\n        v-for=\"product in products\"\n        :key=\"product.label\"\n        :label=\"product.label\"\n        :qty=\"product.qty_sold\"\n        :total=\"product.total_ttc\"\n      />\n    </div>\n  </template>\n  \n  <script>\n  import ProductSalesItem from \"@/components/ProductSalesItem.vue\";\n  \n  \n  export default {\n  name: \"SalesDashboard\",\n  components: {\n    NavBar,\n    SalesSummary,\n    ProductSalesList,\n  },\n  data() {\n    return {\n      summary: {\n        total_sales: 0,\n        product_sales: [],\n      },\n      authToken: localStorage.getItem('authToken'),\n      apiLink: localStorage.getItem('apiLink') || 'http://localhost:8080/api/v1'\n    };\n  },\n  methods: {\n    async fetchSales() {\n      try {\n        const url = `${this.apiLink}/models/C_Order?$filter=DocStatus eq 'IP' AND IsSOTrx eq true&$select=C_Order_ID,DocumentNo,DateOrdered&$expand=C_OrderLine($select=M_Product_ID,QtyOrdered,LineNetAmt;$expand=M_Product_ID($select=Name))`;\n        const headers = this.authToken\n          ? { 'Authorization': `Bearer ${this.authToken}` }\n          : {};\n        const response = await fetch(url, { headers });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n\n        const data = await response.json();\n        // Flatten all order lines\n        const lines = data.records.flatMap(order =>\n          order.C_OrderLine.map(line => ({\n            productId: line.M_Product_ID.id,\n            name: line.M_Product_ID.Name,\n            amount: parseFloat(line.LineNetAmt),\n            qty: parseFloat(line.QtyOrdered)\n          }))\n        );\n\n        // Total sales amount\n        const totalSales = lines.reduce((sum, l) => sum + l.amount, 0);\n\n        // Group by product\n        const map = {};\n        lines.forEach(l => {\n          if (!map[l.productId]) {\n            map[l.productId] = { productId: l.productId, name: l.name, total_sales: 0, total_qty: 0 };\n          }\n          map[l.productId].total_sales += l.amount;\n          map[l.productId].total_qty += l.qty;\n        });\n        const productSales = Object.values(map);\n\n        this.summary.total_sales = totalSales;\n        this.summary.product_sales = productSales;\n      } catch (error) {\n        console.error(\"Erreur de chargement des ventes :\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchSales();\n  }\n};\n</script>\n\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAoB;;;uBAA/BC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAA4B,YAAxB,qBAAmB,uB,kBACvBF,mBAAA,CAMEG,SAAA,QATRC,WAAA,CAI0BC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADhBC,YAAA,CAMEC,2BAAA;MAJCC,GAAG,EAAEH,OAAO,CAACI,KAAK;MAClBA,KAAK,EAAEJ,OAAO,CAACI,KAAK;MACpBC,GAAG,EAAEL,OAAO,CAACM,QAAQ;MACrBC,KAAK,EAAEP,OAAO,CAACQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}