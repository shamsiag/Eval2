{"ast":null,"code":"import html2pdf from \"html2pdf.js\";\nexport default {\n  name: \"InvoiceSection\",\n  data() {\n    return {\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\"),\n      invoiceId: localStorage.getItem(\"invoiceId\"),\n      invoice: null\n    };\n  },\n  created() {\n    this.getInvoice();\n  },\n  methods: {\n    exportToPDF() {\n      html2pdf(document.getElementById(\"element-to-convert\"), {\n        margin: 1,\n        filename: `facture-${this.invoice?.ref || 'sans-reference'}.pdf`\n      });\n    },\n    formatDate(timestamp) {\n      if (!timestamp) return 'N/A';\n\n      // Si c'est un timestamp Unix (en secondes)\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString('fr-FR');\n    },\n    formatPrice(price) {\n      if (!price) return '0,00';\n      return parseFloat(price).toLocaleString('fr-FR', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      });\n    },\n    async getInvoice() {\n      console.log(\"invoice Id:\", this.invoiceId);\n      try {\n        console.log('Tentative de récupération des factures depuis Dolibarr...');\n        if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const url = `${this.apiLink}/invoices/${this.invoiceId}`;\n        console.log(\"url\", url);\n        const response = await fetch(url, {\n          headers: {\n            \"Accept\": \"application/json\",\n            DOLAPIKEY: this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n\n        // Récupérer directement les données JSON\n        this.invoice = await response.json();\n        console.log(\"Facture récupérée:\", this.invoice);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération de la facture:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["html2pdf","name","data","apiKey","localStorage","getItem","apiLink","clientId","invoiceId","invoice","created","getInvoice","methods","exportToPDF","document","getElementById","margin","filename","ref","formatDate","timestamp","date","Date","toLocaleDateString","formatPrice","price","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","console","log","Error","url","response","fetch","headers","DOLAPIKEY","ok","statusText","json","error"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/InvoicePage.vue"],"sourcesContent":["<template>\n    <div id=\"app\" ref=\"document\">\n      <div id=\"element-to-convert\">\n        <div class=\"logo\">\n          <img src=\"/Property 1=Variant2.png\" alt=\"Logo de la marque\" />\n        </div>\n  \n        <div class=\"entete\" v-if=\"invoice\">\n          <h1>Facture {{ invoice.ref }}</h1>\n          <h3>Date facturation : {{ formatDate(invoice.date_creation) }}</h3>\n          <h3>Date échéance : {{ formatDate(invoice.date_lim_reglement) }}</h3>\n        </div>\n  \n        <div class=\"emetteur\">\n          <h3>VR 61 HF Ambohimiandra</h3>\n          <h3>101 Antananarivo</h3>\n          <h3>Madagascar</h3>\n          <h3>Tél.: +261349933136</h3>\n        </div>\n  \n        <div class=\"client\">\n          <b>VR 61 HF Ambohimiandra</b>\n        </div>\n  \n        <div class=\"ref-commande\" v-if=\"invoice\">\n          <h4>Commandes</h4>\n          <h4>{{ invoice.ref }}</h4>\n          <h4>Réf. commande : {{ invoice.linkedObjectsIds?.commande?.ref || 'N/A' }}</h4>\n          <h4>Date de commande : {{ formatDate(invoice.date) }}</h4>\n        </div>\n  \n        <table class=\"detail-commande\" v-if=\"invoice && invoice.lines\">\n          <tr>\n            <th class=\"detail-commande-designation\">Désignation</th>\n            <th>TVA</th>\n            <th>P.U. HT</th>\n            <th>Qté</th>\n            <th>Total HT</th>\n          </tr>\n          <tr v-for=\"(line, index) in invoice.lines\" :key=\"index\">\n            <td>{{ line.desc || line.libelle || 'Produit/Service' }}</td>\n            <td>{{ line.tva_tx }}%</td>\n            <td>{{ formatPrice(line.subprice) }}</td>\n            <td>{{ line.qty }}</td>\n            <td>{{ formatPrice(line.total_ht) }}</td>\n          </tr>\n        </table>\n  \n        <div class=\"bas-de-page\" v-if=\"invoice\">\n          <div><b>Total HT</b> {{ formatPrice(invoice.total_ht) }}</div>\n          <div><b>Total TVA</b> {{ formatPrice(invoice.total_tva) }}</div>\n          <div><b>Total TTC</b> {{ formatPrice(invoice.total_ttc) }}</div>\n        </div>\n  \n        <div class=\"details-paiement\">\n          <table class=\"small-table\">\n            <thead>\n              <tr>\n                <th colspan=\"3\">Versements déjà effectués</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Règlement</td>\n                <td>Montant</td>\n                <td>Type</td>\n              </tr>\n              <tr v-if=\"invoice && invoice.totalpaid === 0\">\n                <td colspan=\"3\">Aucun versement effectué</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    <button @click=\"exportToPDF\">Export to PDF</button>\n  </template>\n  \n  <script>\n  import html2pdf from \"html2pdf.js\";\n  \n  export default {\n    name: \"InvoiceSection\",\n    data() {\n      return {\n        apiKey: localStorage.getItem(\"apiKey\"),\n        apiLink: localStorage.getItem(\"apiLink\"),\n        clientId: localStorage.getItem(\"clientId\"),\n        invoiceId: localStorage.getItem(\"invoiceId\"),\n        invoice: null\n      };\n    },\n    created() {\n      this.getInvoice();\n    },\n    \n    methods: {\n      exportToPDF() {\n        html2pdf(document.getElementById(\"element-to-convert\"), {\n          margin: 1,\n          filename: `facture-${this.invoice?.ref || 'sans-reference'}.pdf`,\n        });\n      },\n  \n      formatDate(timestamp) {\n        if (!timestamp) return 'N/A';\n        \n        // Si c'est un timestamp Unix (en secondes)\n        const date = new Date(timestamp * 1000);\n        return date.toLocaleDateString('fr-FR');\n      },\n      \n      formatPrice(price) {\n        if (!price) return '0,00';\n        return parseFloat(price).toLocaleString('fr-FR', {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        });\n      },\n  \n      async getInvoice() {\n        console.log(\"invoice Id:\", this.invoiceId);\n        try {\n          console.log('Tentative de récupération des factures depuis Dolibarr...');\n          if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n  \n          const url = `${this.apiLink}/invoices/${this.invoiceId}`;\n          console.log(\"url\", url);\n          const response = await fetch(url, {\n            headers: { \"Accept\": \"application/json\", DOLAPIKEY: this.apiKey },\n          });\n      \n          if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n          \n          // Récupérer directement les données JSON\n          this.invoice = await response.json();\n          console.log(\"Facture récupérée:\", this.invoice);\n          \n        } catch (error) {\n          console.error(\"Erreur lors de la récupération de la facture:\", error);\n        }\n      }\n    }\n  };\n  </script>\n    \n  <style>\n  #app {\n    margin-top: 60px;\n    color:\n  }\n  \n  .entete, .emetteur, .client, .ref-commande, .bas-de-page {\n    margin-bottom: 20px;\n  }\n  \n  .detail-commande {\n    width: 100%;\n    border-collapse: collapse;\n    margin-bottom: 20px;\n  }\n  \n  .detail-commande th, .detail-commande td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n  }\n  \n  .detail-commande th {\n    background-color: #f2f2f2;\n  }\n  \n  .small-table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  \n  .small-table th, .small-table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n  }\n  \n  .bas-de-page {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n  </style>"],"mappings":"AA+EE,OAAOA,QAAO,MAAO,aAAa;AAElC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACtCC,OAAO,EAAEF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACxCE,QAAQ,EAAEH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1CG,SAAS,EAAEJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC5CI,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EAEDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZb,QAAQ,CAACc,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAAE;QACtDC,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE,WAAW,IAAI,CAACR,OAAO,EAAES,GAAE,IAAK,gBAAgB;MAC5D,CAAC,CAAC;IACJ,CAAC;IAEDC,UAAUA,CAACC,SAAS,EAAE;MACpB,IAAI,CAACA,SAAS,EAAE,OAAO,KAAK;;MAE5B;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,SAAQ,GAAI,IAAI,CAAC;MACvC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAC;IACzC,CAAC;IAEDC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACA,KAAK,EAAE,OAAO,MAAM;MACzB,OAAOC,UAAU,CAACD,KAAK,CAAC,CAACE,cAAc,CAAC,OAAO,EAAE;QAC/CC,qBAAqB,EAAE,CAAC;QACxBC,qBAAqB,EAAE;MACzB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMlB,UAAUA,CAAA,EAAG;MACjBmB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACvB,SAAS,CAAC;MAC1C,IAAI;QACFsB,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;QACxE,IAAI,CAAC,IAAI,CAAC5B,MAAK,IAAK,CAAC,IAAI,CAACG,OAAO,EAAE,MAAM,IAAI0B,KAAK,CAAC,8BAA8B,CAAC;QAElF,MAAMC,GAAE,GAAI,GAAG,IAAI,CAAC3B,OAAO,aAAa,IAAI,CAACE,SAAS,EAAE;QACxDsB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEE,GAAG,CAAC;QACvB,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACF,GAAG,EAAE;UAChCG,OAAO,EAAE;YAAE,QAAQ,EAAE,kBAAkB;YAAEC,SAAS,EAAE,IAAI,CAAClC;UAAO;QAClE,CAAC,CAAC;QAEF,IAAI,CAAC+B,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIN,KAAK,CAAC,kBAAkBE,QAAQ,CAACK,UAAU,EAAE,CAAC;;QAE1E;QACA,IAAI,CAAC9B,OAAM,GAAI,MAAMyB,QAAQ,CAACM,IAAI,CAAC,CAAC;QACpCV,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACtB,OAAO,CAAC;MAEjD,EAAE,OAAOgC,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}