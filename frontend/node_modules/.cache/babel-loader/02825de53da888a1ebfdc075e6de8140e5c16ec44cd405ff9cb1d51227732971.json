{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport NavBar from '@/components/NavBar.vue';\nimport ShopHeader from '@/components/ShopHeader.vue';\nimport ProductList from '@/components/ProductList.vue';\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar,\n    ShopHeader,\n    ProductList\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      authToken: localStorage.getItem('authToken'),\n      apiLink: localStorage.getItem('apiLink') || 'http://localhost:8080/api/v1',\n      priceListVersionId: 105\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n    this.loadCartFromStorage();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        console.log('Récupération des produits iDempiere...');\n        if (!this.authToken) throw new Error('Token d\\'authentification manquant');\n        const filter = `M_PriceList_Version_ID eq ${this.priceListVersionId}`;\n        const url = `${this.apiLink}/models/M_Product?$select=M_Product_ID,Name&$expand=M_ProductPrice($select=M_PriceList_Version_ID,PriceList,PriceStd,PriceLimit;$filter=${filter})`;\n        const response = await fetch(url, {\n          headers: {\n            'Authorization': `Bearer ${this.authToken}`\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const {\n          records\n        } = await response.json();\n        this.products = records.map(item => {\n          const priceInfo = item.M_ProductPrice && item.M_ProductPrice.length ? item.M_ProductPrice[0] : {\n            PriceStd: 0\n          };\n          return {\n            id: item.id || item.M_Product_ID,\n            name: item.Name,\n            description: 'Aucune description disponible.',\n            image: null,\n            price_ht: parseFloat(priceInfo.PriceStd),\n            price_ttc: parseFloat(priceInfo.PriceStd),\n            tva_tx: 0,\n            label: item.Name,\n            ref: null,\n            weight: null,\n            width: null,\n            length: null,\n            height: null,\n            note: 'Aucune note disponible.'\n          };\n        });\n        console.log('Produits chargés:', this.products);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des produits :', error);\n      }\n    },\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\" + searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n    async addNote(productId, noteInput, currentNote) {\n      try {\n        if (noteInput > 10 || noteInput < 0) {\n          alert(\"La note doit être comprise entre 0 et 10\");\n          return;\n        }\n        let newNote;\n        if (currentNote !== 'Aucune note disponible.') {\n          newNote = (parseFloat(currentNote) + parseFloat(noteInput)) / 2;\n        } else {\n          newNote = parseFloat(noteInput);\n        }\n        const noteData = {\n          array_options: {\n            options_note: newNote.toString()\n          }\n        };\n        const response = await fetch(`${this.apiLink}/products/${productId}`, {\n          method: 'PUT',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(noteData)\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la mise à jour de la note: ${response.status}`);\n        }\n        const productToUpdate = this.products.find(p => p.id === productId);\n        if (productToUpdate) {\n          productToUpdate.note = newNote;\n          productToUpdate.noteInput = '';\n        }\n        if (this.$toast) {\n          this.$toast.success(\"Note mise à jour avec succès!\");\n        } else {\n          alert(\"Note mise à jour avec succès!\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de la note:\", error);\n        if (this.$toast) {\n          this.$toast.error(\"Échec de la mise à jour de la note\");\n        } else {\n          alert(\"Échec de la mise à jour de la note\");\n        }\n      }\n    },\n    async addToCart(product) {\n      try {\n        console.log('Tentative d\\'ajout au panier pour le produit:', product);\n        const isLoggedIn = localStorage.getItem('authToken');\n        if (!isLoggedIn) {\n          alert('Vous devez être connecté pour ajouter des produits au panier.');\n          this.$router.push({\n            name: 'login'\n          });\n          return;\n        }\n\n        // S'assurer que le panier est initialisé\n        if (!this.cartId) {\n          await this.initCart();\n          if (!this.cartId) {\n            alert(\"Erreur : impossible d'initialiser le panier\");\n            return;\n          }\n        }\n\n        // Calculer le prix HT à partir du prix TTC si nécessaire\n        let priceHt = product.price_ht;\n        if (!priceHt && product.price_ttc) {\n          priceHt = product.price_ttc / (1 + product.tva_tx / 100);\n        }\n        const itemData = {\n          fk_product: product.id,\n          qty: 1,\n          subprice: priceHt,\n          tva_tx: product.tva_tx,\n          label: product.label,\n          product_desc: product.description || \"\",\n          product_ref: product.ref,\n          price: priceHt,\n          product_tobuy: 1,\n          product_tosell: 1,\n          weight: product.weight || 0,\n          width: product.width || 0,\n          length: product.length || 0,\n          height: product.height || 0,\n          localtax1_tx: \"0.0000\",\n          localtax2_tx: \"0.0000\",\n          total_ht: priceHt,\n          total_ttc: product.price_ttc\n        };\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          await this.fetchCartItems(this.cartId);\n          if (this.$toast) {\n            this.$toast.success('Produit ajouté au panier !');\n          } else {\n            alert('Produit ajouté au panier !');\n          }\n        } else {\n          console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n          alert(\"Erreur lors de l'ajout au panier\");\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n        alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","ShopHeader","ProductList","name","components","data","products","cartItems","cartId","authToken","localStorage","getItem","apiLink","priceListVersionId","created","fetchProducts","loadCartFromStorage","methods","console","log","Error","filter","url","response","fetch","headers","ok","statusText","records","json","map","item","priceInfo","M_ProductPrice","length","PriceStd","id","M_Product_ID","Name","description","image","price_ht","parseFloat","price_ttc","tva_tx","label","ref","weight","width","height","note","error","initCart","clientId","apiKey","searchUrl","orders","Array","isArray","fetchCartItems","newOrderId","createDraftOrder","payload","socid","date","Date","toISOString","split","status","lines","method","body","JSON","stringify","message","text","newOrder","addNote","productId","noteInput","currentNote","alert","newNote","noteData","array_options","options_note","toString","productToUpdate","find","p","$toast","success","addToCart","product","isLoggedIn","$router","push","priceHt","itemData","fk_product","qty","subprice","product_desc","product_ref","price","product_tobuy","product_tosell","localtax1_tx","localtax2_tx","total_ht","total_ttc"],"sources":["/Users/macbookpro/Sham/S6/Eval2-1/frontend/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <div class=\"shop-container\">\n    <NavBar />\n    <ShopHeader title=\"NOS\" subtitle=\"PRODUITS\" />\n    <ProductList \n      :products=\"products\" \n      @add-to-cart=\"addToCart\" \n      @add-note=\"addNote\" \n    />\n  </div>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\nimport ShopHeader from '@/components/ShopHeader.vue';\nimport ProductList from '@/components/ProductList.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar,\n    ShopHeader,\n    ProductList\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      authToken: localStorage.getItem('authToken'),\n      apiLink: localStorage.getItem('apiLink') || 'http://localhost:8080/api/v1',\n      priceListVersionId: 105\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n    this.loadCartFromStorage();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        console.log('Récupération des produits iDempiere...');\n        if (!this.authToken) throw new Error('Token d\\'authentification manquant');\n\n        const filter = `M_PriceList_Version_ID eq ${this.priceListVersionId}`;\n        const url = `${this.apiLink}/models/M_Product?$select=M_Product_ID,Name&$expand=M_ProductPrice($select=M_PriceList_Version_ID,PriceList,PriceStd,PriceLimit;$filter=${filter})`;\n\n        const response = await fetch(url, {\n          headers: { 'Authorization': `Bearer ${this.authToken}` }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const { records } = await response.json();\n\n        this.products = records.map(item => {\n          const priceInfo = (item.M_ProductPrice && item.M_ProductPrice.length)\n            ? item.M_ProductPrice[0]\n            : { PriceStd: 0 };\n\n          return {\n            id: item.id || item.M_Product_ID,\n            name: item.Name,\n            description: 'Aucune description disponible.',\n            image: null,\n            price_ht: parseFloat(priceInfo.PriceStd),\n            price_ttc: parseFloat(priceInfo.PriceStd),\n            tva_tx: 0,\n            label: item.Name,\n            ref: null,\n            weight: null,\n            width: null,\n            length: null,\n            height: null,\n            note: 'Aucune note disponible.'\n          };\n        });\n        console.log('Produits chargés:', this.products);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des produits :', error);\n      }\n    },\n\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\"+searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n\n    async addNote(productId, noteInput, currentNote) {\n      try {\n        if(noteInput > 10 || noteInput < 0) {\n          alert(\"La note doit être comprise entre 0 et 10\");\n          return;\n        }\n        \n        let newNote;\n        \n        if (currentNote !== 'Aucune note disponible.') {\n          newNote = (parseFloat(currentNote) + parseFloat(noteInput)) / 2;\n        } else {\n          newNote = parseFloat(noteInput);\n        }\n        \n        const noteData = {\n          array_options: {\n            options_note: newNote.toString()\n          }\n        };\n        \n        const response = await fetch(`${this.apiLink}/products/${productId}`, {\n          method: 'PUT',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(noteData)\n        });\n        \n        if (!response.ok) {\n          throw new Error(`Erreur lors de la mise à jour de la note: ${response.status}`);\n        }\n        \n        const productToUpdate = this.products.find(p => p.id === productId);\n        if (productToUpdate) {\n          productToUpdate.note = newNote;\n          productToUpdate.noteInput = ''; \n        }\n        \n        if (this.$toast) {\n          this.$toast.success(\"Note mise à jour avec succès!\");\n        } else {\n          alert(\"Note mise à jour avec succès!\");\n        }\n        \n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de la note:\", error);\n        if (this.$toast) {\n          this.$toast.error(\"Échec de la mise à jour de la note\");\n        } else {\n          alert(\"Échec de la mise à jour de la note\");\n        }\n      }\n    },\n\n    async addToCart(product) {\n      try {\n        console.log('Tentative d\\'ajout au panier pour le produit:', product);\n        const isLoggedIn = localStorage.getItem('authToken');\n        if (!isLoggedIn) {\n          alert('Vous devez être connecté pour ajouter des produits au panier.');\n          this.$router.push({ name: 'login' });\n          return;\n        }\n\n        // S'assurer que le panier est initialisé\n        if (!this.cartId) {\n          await this.initCart();\n          if (!this.cartId) {\n            alert(\"Erreur : impossible d'initialiser le panier\");\n            return;\n          }\n        }\n\n        // Calculer le prix HT à partir du prix TTC si nécessaire\n        let priceHt = product.price_ht;\n        if (!priceHt && product.price_ttc) {\n          priceHt = product.price_ttc / (1 + (product.tva_tx / 100));\n        }\n\n        const itemData = {\n          fk_product: product.id,\n          qty: 1,\n          subprice: priceHt,\n          tva_tx: product.tva_tx,\n          label: product.label,\n          product_desc: product.description || \"\",\n          product_ref: product.ref,\n          price: priceHt,\n          product_tobuy: 1,\n          product_tosell: 1,\n          weight: product.weight || 0,\n          width: product.width || 0,\n          length: product.length || 0,\n          height: product.height || 0,\n          localtax1_tx: \"0.0000\",\n          localtax2_tx: \"0.0000\",\n          total_ht: priceHt,\n          total_ttc: product.price_ttc\n        };\n\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          await this.fetchCartItems(this.cartId);\n          if (this.$toast) {\n            this.$toast.success('Produit ajouté au panier !');\n          } else {\n            alert('Produit ajouté au panier !');\n          }\n        } else {\n          console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n          alert(\"Erreur lors de l'ajout au panier\");\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n        alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.shop-container {\n  width: 100%;\n  min-height: 100vh;\n  background-color: #111;\n  overflow-x: hidden;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}