{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"shop-section\"\n};\nconst _hoisted_2 = {\n  class: \"cards-container\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  class: \"product-name\"\n};\nconst _hoisted_5 = {\n  class: \"product-name\"\n};\nconst _hoisted_6 = {\n  class: \"product-price\"\n};\nconst _hoisted_7 = {\n  class: \"input-group\"\n};\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _createElementVNode(\"section\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"section-title\"\n  }, \"NOS\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"section-title\"\n  }, \"PRODUITS\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.products, product => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: product.id,\n      class: \"product-card\"\n    }, [_createElementVNode(\"img\", {\n      src: product.image || require('@/assets/item/default-product.png'),\n      alt: product.name,\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"h3\", _hoisted_4, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"h6\", _hoisted_5, _toDisplayString(product.noty), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(_ctx.formatPrice(product.price_ht * (1 + product.tva_tx / 100))), 1 /* TEXT */), _createElementVNode(\"form\", {\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers($event => _ctx.addNote(), [\"prevent\"])),\n      class: \"form\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.note = $event),\n      placeholder: \"Note\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.note]]), _withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.produitid = $event),\n      value: product.id\n    }, null, 8 /* PROPS */, _hoisted_8), [[_vModelText, _ctx.produitid]])]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n      type: \"submit\",\n      class: \"product-button\"\n    }, \"Noter\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n      class: \"product-button\",\n      onClick: $event => _ctx.addToCart(product)\n    }, \"Ajouter au panier\", 8 /* PROPS */, _hoisted_9)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_NavBar","_createElementVNode","_hoisted_1","_hoisted_2","_renderList","_ctx","products","product","key","id","src","image","require","alt","name","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","noty","_hoisted_6","formatPrice","price_ht","tva_tx","onSubmit","_cache","_withModifiers","$event","addNote","_hoisted_7","type","note","placeholder","produitid","value","_hoisted_8","onClick","addToCart","_hoisted_9"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <section class=\"shop-section\">\n    <h2 class=\"section-title\">NOS</h2>\n    <h2 class=\"section-title\">PRODUITS</h2>\n\n    <div class=\"cards-container\">\n      <div \n        v-for=\"product in products\" \n        :key=\"product.id\" \n        class=\"product-card\"\n      >\n        <img :src=\"product.image || require('@/assets/item/default-product.png')\" :alt=\"product.name\" class=\"product-image\" />\n        <h3 class=\"product-name\">{{ product.name }}</h3>\n        <h6 class=\"product-name\">{{ product.noty }}</h6>\n        <p class=\"product-price\">{{ formatPrice((product.price_ht) * (1 + product.tva_tx/100)) }}</p>\n        <form @submit.prevent=\"addNote()\" class=\"form\">\n        <div class=\"input-group\">\n          <input\n            type=\"number\"\n            v-model=\"note\"\n            placeholder=\"Note\"\n          />\n          <input \n          type=\"hidden\"\n          v-model=\"produitid\"\n          :value=\"product.id\"\n          />\n        </div>\n          <button type=\"submit\" class=\"product-button\">Noter</button>\n        </form>\n\n\n        <button class=\"product-button\" @click=\"addToCart(product)\">Ajouter au panier</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink'),\n    };\n  },\n  async created() {\n    await this.fetchProductsFromDolibarr();\n    await this.initCart();\n  },\n  methods: {\n    // async addNote(){\n    //   console.error(this.produitid);\n    //   console.error(this.note);\n    //   try {\n    //       const payload = {\n    //         idProd: this.produitid,\n    //         note: this.note\n    //       };\n\n    //       if (!payload.idProd || !payload.note) {\n    //         console.log(\"id prod:\"+payload.idProd)\n    //         console.log(\"note\"+payload.note)\n    //         console.error(\"ID produit ou note manquant.\");\n    //         return;\n    //       }\n\n    //       const url = `${this.apiLink}/products/${payload.idProd}/notes/${payload.note}`;\n    //       console.log(\"URL:\", url);\n    //       const response = await fetch(url, {\n    //       method: 'PUT',\n    //       headers: {\n    //         \"DOLAPIKEY\": this.apiKey,\n    //         \"Content-Type\": \"application/json\"\n    //       },\n    //       body: JSON.stringify(payload) \n    //     });\n\n  \n    //       if (!response.ok) {\n    //         const error = await response.json();\n    //         this.errorMessage = error.error || \"Erreur lors de la notation.\";\n    //         return;\n    //       }\n  \n    //       this.$router.push(\"/shop\");\n    //     } catch (error) {\n    //       console.error(\"Erreur notation :\", error);\n    //       this.errorMessage = \"Erreur lors de la notation. Veuillez réessayer.\";\n    //     }\n    // },\n\n  async fetchProductsFromDolibarr() {\n  try {\n    console.log('Tentative de récupération des produits depuis Dolibarr...');\n    if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n    const url = `${this.apiLink}/products`;\n    const response = await fetch(url, {\n      headers: {\n        \"DOLAPIKEY\": this.apiKey\n      }\n    });\n\n    if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n    const products = await response.json();\n\n\n    \n\n    // Traiter chaque produit correctement\n    this.products = products.map(product => {\n      // Utiliser directement price_ttc s'il est disponible, sinon le calculer\n      //RESAKA TTC\n      // let priceTtc;\n      // if (product.price_ttc) {\n      //   priceTtc = parseFloat(product.price_ttc);\n      // } else if (product.price) {\n      //   const tvaRate = product.tva_tx / 100;\n      //   priceTtc = product.price * (1 + tvaRate);\n      // } else {\n      //   // Si ni price ni price_ttc n'est disponible, définir à 0\n      //   priceTtc = 0;\n      // }\n\n    if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n    const product = await response.json();\n      return {\n        id: product.id,\n        name: product.label,\n        description: product.description || 'Aucune description disponible.',\n        image: product.url_photo ? `${this.apiLink}${product.url_photo}` : null,\n        price_ht: parseFloat(product.price || 0),\n        price_ttc: parseFloat((product.price) * (1 + product.tva_tx/100)),\n        tva_tx: parseFloat(product.tva_tx || 0),\n        label: product.label,\n        ref: product.ref,\n        weight: product.weight,\n        width: product.width,\n        length: product.length,\n        height: product.height,\n        noty: note['notation']\n      };\n    });\n    \n    console.log('Produits récupérés et traités:', this.products);\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des produits:\", error);\n  }\n},\n\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\"+searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n\n    formatPrice(price) {\n      if (typeof price !== 'number') {\n        price = parseFloat(price) || 0;\n      }\n      return `${price.toFixed(2)} MGA`;\n    },\n\n    async addToCart(product) {\n  try {\n    console.log('Tentative d\\'ajout au panier pour le produit:', product);\n    const isLoggedIn = localStorage.getItem('authToken');\n    if (!isLoggedIn) {\n      alert('Vous devez être connecté pour ajouter des produits au panier.');\n      this.$router.push({ name: 'login' });\n      return;\n    }\n\n    // S'assurer que le panier est initialisé\n    if (!this.cartId) {\n      await this.initCart();\n      if (!this.cartId) {\n        alert(\"Erreur : impossible d'initialiser le panier\");\n        return;\n      }\n    }\n\n    // Calculer le prix HT à partir du prix TTC si nécessaire\n    let priceHt = product.price_ht;\n    if (!priceHt && product.price_ttc) {\n      // Si price_ht n'est pas disponible, le calculer à partir du price_ttc\n      priceHt = product.price_ttc / (1 + (product.tva_tx / 100));\n    }\n\n    const itemData = {\n      fk_product: product.id,\n      qty: 1,\n      subprice: priceHt,\n      tva_tx: product.tva_tx,\n      label: product.label,\n      product_desc: product.description || \"\",\n      product_ref: product.ref,\n      price: priceHt,\n      product_tobuy: 1,\n      product_tosell: 1,\n      weight: product.weight || 0,\n      width: product.width || 0,\n      length: product.length || 0,\n      height: product.height || 0,\n      localtax1_tx: \"0.0000\",\n      localtax2_tx: \"0.0000\",\n      total_ht: priceHt,\n      total_ttc: product.price_ttc\n    };\n\n    const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n      method: 'POST',\n      headers: {\n        \"DOLAPIKEY\": this.apiKey,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(itemData)\n    });\n\n    if (response.ok) {\n      console.log('Ajout au panier réussi');\n      await this.fetchCartItems(this.cartId);\n      alert('Produit ajouté au panier !');\n    } else {\n      console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n      alert(\"Erreur lors de l'ajout au panier\");\n    }\n  } catch (error) {\n    console.error(\"Erreur fetch (addToCart):\", error);\n    alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n  }\n},\n  }\n};\n</script>\n\n<style scoped>\n/* Styles unifiés pour la section produits */\n.shop-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n.section-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  margin-left: 115px;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n/* Conteneur des cartes */\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* 3 produits par ligne */\n  gap: 50px;\n  max-width: 75%; /* Ajuste à la largeur du parent */\n  overflow-x: hidden; /* Empêche le scroll horizontal */\n  overflow-y: auto; /* Défilement vertical */\n  padding-bottom: 10px;\n  margin-left: 25%;\n  height: 100vh; /* Ajuste la hauteur pour voir le scroll vertical */\n}\n\n/* Style des cartes */\n.product-card {\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, color 0.3s ease;\n  text-align: left;\n  width: 100%;\n  height: 499px;\n  flex-shrink: 0; \n  flex-grow: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  color: #5AAAD8;\n}\n\n/* Image */\n.product-image {\n  width: 221px;\n  height: auto;\n  border-radius: 8px;\n  margin-left: 100px;\n}\n\n/* Nom du produit */\n.product-name {\n  font-size: 1.5em;\n  margin: 10px 0;\n  font-family: 'DAWBE';\n  color: #1E1E1E;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 0;\n}\n\n/* Description */\n.product-description {\n  margin-top: 0;\n  font-size: 1em;\n  color: #1E1E1E;\n  font-family: 'PP Formula', sans-serif;\n  margin-bottom: 10px;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  max-height: 120px;\n  overflow-y: auto;\n}\n\n/* Prix */\n.product-price {\n  font-size: 1.2em;\n  color: #1E1E1E;\n  margin-top: 10px;\n  font-family: 'PP Formula', sans-serif;\n  font-weight: bold;\n}\n\n/* Bouton */\n.product-button {\n  padding: 10px 15px;\n  border: none;\n  background-color: #0E100E;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  font-family: 'PP Formula', sans-serif;\n  margin-top: auto;\n  align-self: flex-end;\n}\n\n.product-card:hover .product-name,\n.product-card:hover .product-description {\n  color: #5AAAD8;\n}\n\n.product-button:hover {\n  background-color: #5AAAD8;\n}\n</style>"],"mappings":";;EAEWA,KAAK,EAAC;AAAc;;EAItBA,KAAK,EAAC;AAAiB;mBANhC;;EAaYA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAc;;EACrBA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAa;mBAjBhC;mBAAA;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAkCU,WAlCVC,UAkCU,G,0BAjCRD,mBAAA,CAAkC;IAA9BL,KAAK,EAAC;EAAe,GAAC,KAAG,sB,0BAC7BK,mBAAA,CAAuC;IAAnCL,KAAK,EAAC;EAAe,GAAC,UAAQ,sBAElCK,mBAAA,CA6BM,OA7BNE,UA6BM,I,kBA5BJN,mBAAA,CA2BMC,SAAA,QAlCZM,WAAA,CAQ0BC,IAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADhBV,mBAAA,CA2BM;MAzBHW,GAAG,EAAED,OAAO,CAACE,EAAE;MAChBb,KAAK,EAAC;QAENK,mBAAA,CAAsH;MAAhHS,GAAG,EAAEH,OAAO,CAACI,KAAK,IAAIC,OAAO;MAAwCC,GAAG,EAAEN,OAAO,CAACO,IAAI;MAAElB,KAAK,EAAC;4BAZ5GmB,UAAA,GAaQd,mBAAA,CAAgD,MAAhDe,UAAgD,EAAAC,gBAAA,CAApBV,OAAO,CAACO,IAAI,kBACxCb,mBAAA,CAAgD,MAAhDiB,UAAgD,EAAAD,gBAAA,CAApBV,OAAO,CAACY,IAAI,kBACxClB,mBAAA,CAA6F,KAA7FmB,UAA6F,EAAAH,gBAAA,CAAjEZ,IAAA,CAAAgB,WAAW,CAAEd,OAAO,CAACe,QAAQ,QAASf,OAAO,CAACgB,MAAM,0BAChFtB,mBAAA,CAcO;MAdAuB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAhBrBC,cAAA,CAAAC,MAAA,IAgB+BtB,IAAA,CAAAuB,OAAO;MAAIhC,KAAK,EAAC;QACxCK,mBAAA,CAWM,OAXN4B,UAWM,G,gBAVJ5B,mBAAA,CAIE;MAHA6B,IAAI,EAAC,QAAQ;MAnBzB,uBAAAL,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAoBqBtB,IAAA,CAAA0B,IAAI,GAAAJ,MAAA;MACbK,WAAW,EAAC;mDADH3B,IAAA,CAAA0B,IAAI,E,mBAGf9B,mBAAA,CAIE;MAHF6B,IAAI,EAAC,QAAQ;MAxBvB,uBAAAL,MAAA,QAAAA,MAAA,MAAAE,MAAA,IAyBmBtB,IAAA,CAAA4B,SAAS,GAAAN,MAAA;MACjBO,KAAK,EAAE3B,OAAO,CAACE;4BA1B1B0B,UAAA,I,cAyBmB9B,IAAA,CAAA4B,SAAS,E,+BAIlBhC,mBAAA,CAA2D;MAAnD6B,IAAI,EAAC,QAAQ;MAAClC,KAAK,EAAC;OAAiB,OAAK,qB,4BAIpDK,mBAAA,CAAqF;MAA7EL,KAAK,EAAC,gBAAgB;MAAEwC,OAAK,EAAAT,MAAA,IAAEtB,IAAA,CAAAgC,SAAS,CAAC9B,OAAO;OAAG,mBAAiB,iBAjCpF+B,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}