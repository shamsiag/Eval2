{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport NavBar from '@/components/NavBar.vue';\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink')\n    };\n  },\n  async created() {\n    await this.fetchProductsFromDolibarr();\n    await this.initCart();\n  },\n  methods: {\n    async addNote() {\n      try {\n        const payload = {\n          idProduit: this.idProduit,\n          note: this.note\n        };\n        const url = `${this.apiLink}/products/${this.idProduit}/notes/{${this.note}`;\n        const response = await fetch(url, {\n          headers: {\n            DOLAPIKEY: this.apiKey\n          }\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          this.errorMessage = error.error || \"Erreur lors de la notation.\";\n          return;\n        }\n        const newClient = await response.json();\n        localStorage.setItem(\"clientId\", newClient.id);\n        localStorage.setItem(\"clientName\", newClient.name);\n        localStorage.setItem(\"apiKey\", \"ZxDsSBw0YVfy6vP534M9vSN6kf1Bt60f\");\n        localStorage.setItem(\"apiLink\", \"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php\");\n        this.$router.push(\"/login\");\n      } catch (error) {\n        console.error(\"Erreur inscription :\", error);\n        this.errorMessage = \"Erreur lors de l'inscription. Veuillez réessayer.\";\n      }\n    },\n    async fetchProductsFromDolibarr() {\n      try {\n        console.log('Tentative de récupération des produits depuis Dolibarr...');\n        if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const url = `${this.apiLink}/products`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const products = await response.json();\n\n        // Traiter chaque produit correctement\n        this.products = products.map(product => {\n          // Utiliser directement price_ttc s'il est disponible, sinon le calculer\n          //RESAKA TTC\n          // let priceTtc;\n          // if (product.price_ttc) {\n          //   priceTtc = parseFloat(product.price_ttc);\n          // } else if (product.price) {\n          //   const tvaRate = product.tva_tx / 100;\n          //   priceTtc = product.price * (1 + tvaRate);\n          // } else {\n          //   // Si ni price ni price_ttc n'est disponible, définir à 0\n          //   priceTtc = 0;\n          // }\n\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.url_photo ? `${this.apiLink}${product.url_photo}` : null,\n            price_ht: parseFloat(product.price || 0),\n            price_ttc: parseFloat(product.price * (1 + product.tva_tx / 100)),\n            tva_tx: parseFloat(product.tva_tx || 0),\n            label: product.label,\n            ref: product.ref,\n            weight: product.weight,\n            width: product.width,\n            length: product.length,\n            height: product.height\n          };\n        });\n        console.log('Produits récupérés et traités:', this.products);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\" + searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n    formatPrice(price) {\n      if (typeof price !== 'number') {\n        price = parseFloat(price) || 0;\n      }\n      return `${price.toFixed(2)} MGA`;\n    },\n    async addToCart(product) {\n      try {\n        console.log('Tentative d\\'ajout au panier pour le produit:', product);\n        const isLoggedIn = localStorage.getItem('authToken');\n        if (!isLoggedIn) {\n          alert('Vous devez être connecté pour ajouter des produits au panier.');\n          this.$router.push({\n            name: 'login'\n          });\n          return;\n        }\n\n        // S'assurer que le panier est initialisé\n        if (!this.cartId) {\n          await this.initCart();\n          if (!this.cartId) {\n            alert(\"Erreur : impossible d'initialiser le panier\");\n            return;\n          }\n        }\n\n        // Calculer le prix HT à partir du prix TTC si nécessaire\n        let priceHt = product.price_ht;\n        if (!priceHt && product.price_ttc) {\n          // Si price_ht n'est pas disponible, le calculer à partir du price_ttc\n          priceHt = product.price_ttc / (1 + product.tva_tx / 100);\n        }\n        const itemData = {\n          fk_product: product.id,\n          qty: 1,\n          subprice: priceHt,\n          tva_tx: product.tva_tx,\n          label: product.label,\n          product_desc: product.description || \"\",\n          product_ref: product.ref,\n          price: priceHt,\n          product_tobuy: 1,\n          product_tosell: 1,\n          weight: product.weight || 0,\n          width: product.width || 0,\n          length: product.length || 0,\n          height: product.height || 0,\n          localtax1_tx: \"0.0000\",\n          localtax2_tx: \"0.0000\",\n          total_ht: priceHt,\n          total_ttc: product.price_ttc\n        };\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          await this.fetchCartItems(this.cartId);\n          alert('Produit ajouté au panier !');\n        } else {\n          console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n          alert(\"Erreur lors de l'ajout au panier\");\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n        alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","name","components","data","products","cartItems","cartId","apiKey","localStorage","getItem","apiLink","created","fetchProductsFromDolibarr","initCart","methods","addNote","payload","idProduit","note","url","response","fetch","headers","DOLAPIKEY","ok","error","json","errorMessage","newClient","setItem","id","$router","push","console","log","Error","statusText","map","product","label","description","image","url_photo","price_ht","parseFloat","price","price_ttc","tva_tx","ref","weight","width","length","height","clientId","searchUrl","orders","Array","isArray","fetchCartItems","newOrderId","createDraftOrder","socid","date","Date","toISOString","split","status","lines","method","body","JSON","stringify","message","text","newOrder","formatPrice","toFixed","addToCart","isLoggedIn","alert","priceHt","itemData","fk_product","qty","subprice","product_desc","product_ref","product_tobuy","product_tosell","localtax1_tx","localtax2_tx","total_ht","total_ttc"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <section class=\"shop-section\">\n    <h2 class=\"section-title\">NOS</h2>\n    <h2 class=\"section-title\">PRODUITS</h2>\n\n    <div class=\"cards-container\">\n      <div \n        v-for=\"product in products\" \n        :key=\"product.id\" \n        class=\"product-card\"\n      >\n        <img :src=\"product.image || require('@/assets/item/default-product.png')\" :alt=\"product.name\" class=\"product-image\" />\n        <h3 class=\"product-name\">{{ product.name }}</h3>\n        <p class=\"product-price\">{{ formatPrice((product.price_ht) * (1 + product.tva_tx/100)) }}</p>\n        <form @submit.prevent=\"addNote\" class=\"form\">\n        <div class=\"input-group\">\n          <input\n            type=\"number\"\n            v-model=\"note\"\n            placeholder=\"Note\"\n          />\n        </div>\n          <input\n            type=\"hidden\"\n            v-model=\"idProduit\"\n            value= \"{{ product.id }}\"\n          />\n          <button type=\"submit\" class=\"product-button\">Noter</button>\n        </form>\n\n\n        <button class=\"product-button\" @click=\"addToCart(product)\">Ajouter au panier</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink'),\n    };\n  },\n  async created() {\n    await this.fetchProductsFromDolibarr();\n    await this.initCart();\n  },\n  methods: {\n    async addNote(){\n      try {\n          const payload = {\n            idProduit: this.idProduit,\n            note: this.note\n          };\n  \n          const url = `${this.apiLink}/products/${this.idProduit}/notes/{${this.note}`;\n          const response = await fetch(url, {\n          headers: { DOLAPIKEY: this.apiKey },\n          });\n  \n          if (!response.ok) {\n            const error = await response.json();\n            this.errorMessage = error.error || \"Erreur lors de la notation.\";\n            return;\n          }\n  \n          const newClient = await response.json();\n  \n          localStorage.setItem(\"clientId\", newClient.id);\n          localStorage.setItem(\"clientName\", newClient.name);\n          localStorage.setItem(\"apiKey\", \"ZxDsSBw0YVfy6vP534M9vSN6kf1Bt60f\");\n          localStorage.setItem(\"apiLink\", \"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php\");\n  \n          this.$router.push(\"/login\");\n        } catch (error) {\n          console.error(\"Erreur inscription :\", error);\n          this.errorMessage = \"Erreur lors de l'inscription. Veuillez réessayer.\";\n        }\n    },\n    async fetchProductsFromDolibarr() {\n  try {\n    console.log('Tentative de récupération des produits depuis Dolibarr...');\n    if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n    const url = `${this.apiLink}/products`;\n    const response = await fetch(url, {\n      headers: {\n        \"DOLAPIKEY\": this.apiKey\n      }\n    });\n\n    if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n    const products = await response.json();\n\n    // Traiter chaque produit correctement\n    this.products = products.map(product => {\n      // Utiliser directement price_ttc s'il est disponible, sinon le calculer\n      //RESAKA TTC\n      // let priceTtc;\n      // if (product.price_ttc) {\n      //   priceTtc = parseFloat(product.price_ttc);\n      // } else if (product.price) {\n      //   const tvaRate = product.tva_tx / 100;\n      //   priceTtc = product.price * (1 + tvaRate);\n      // } else {\n      //   // Si ni price ni price_ttc n'est disponible, définir à 0\n      //   priceTtc = 0;\n      // }\n\n      return {\n        id: product.id,\n        name: product.label,\n        description: product.description || 'Aucune description disponible.',\n        image: product.url_photo ? `${this.apiLink}${product.url_photo}` : null,\n        price_ht: parseFloat(product.price || 0),\n        price_ttc: parseFloat((product.price) * (1 + product.tva_tx/100)),\n        tva_tx: parseFloat(product.tva_tx || 0),\n        label: product.label,\n        ref: product.ref,\n        weight: product.weight,\n        width: product.width,\n        length: product.length,\n        height: product.height,\n      };\n    });\n    \n    console.log('Produits récupérés et traités:', this.products);\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des produits:\", error);\n  }\n},\n\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\"+searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n\n    formatPrice(price) {\n      if (typeof price !== 'number') {\n        price = parseFloat(price) || 0;\n      }\n      return `${price.toFixed(2)} MGA`;\n    },\n\n    async addToCart(product) {\n  try {\n    console.log('Tentative d\\'ajout au panier pour le produit:', product);\n    const isLoggedIn = localStorage.getItem('authToken');\n    if (!isLoggedIn) {\n      alert('Vous devez être connecté pour ajouter des produits au panier.');\n      this.$router.push({ name: 'login' });\n      return;\n    }\n\n    // S'assurer que le panier est initialisé\n    if (!this.cartId) {\n      await this.initCart();\n      if (!this.cartId) {\n        alert(\"Erreur : impossible d'initialiser le panier\");\n        return;\n      }\n    }\n\n    // Calculer le prix HT à partir du prix TTC si nécessaire\n    let priceHt = product.price_ht;\n    if (!priceHt && product.price_ttc) {\n      // Si price_ht n'est pas disponible, le calculer à partir du price_ttc\n      priceHt = product.price_ttc / (1 + (product.tva_tx / 100));\n    }\n\n    const itemData = {\n      fk_product: product.id,\n      qty: 1,\n      subprice: priceHt,\n      tva_tx: product.tva_tx,\n      label: product.label,\n      product_desc: product.description || \"\",\n      product_ref: product.ref,\n      price: priceHt,\n      product_tobuy: 1,\n      product_tosell: 1,\n      weight: product.weight || 0,\n      width: product.width || 0,\n      length: product.length || 0,\n      height: product.height || 0,\n      localtax1_tx: \"0.0000\",\n      localtax2_tx: \"0.0000\",\n      total_ht: priceHt,\n      total_ttc: product.price_ttc\n    };\n\n    const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n      method: 'POST',\n      headers: {\n        \"DOLAPIKEY\": this.apiKey,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(itemData)\n    });\n\n    if (response.ok) {\n      console.log('Ajout au panier réussi');\n      await this.fetchCartItems(this.cartId);\n      alert('Produit ajouté au panier !');\n    } else {\n      console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n      alert(\"Erreur lors de l'ajout au panier\");\n    }\n  } catch (error) {\n    console.error(\"Erreur fetch (addToCart):\", error);\n    alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n  }\n},\n  }\n};\n</script>\n\n<style scoped>\n/* Styles unifiés pour la section produits */\n.shop-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n.section-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  margin-left: 115px;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n/* Conteneur des cartes */\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* 3 produits par ligne */\n  gap: 50px;\n  max-width: 75%; /* Ajuste à la largeur du parent */\n  overflow-x: hidden; /* Empêche le scroll horizontal */\n  overflow-y: auto; /* Défilement vertical */\n  padding-bottom: 10px;\n  margin-left: 25%;\n  height: 100vh; /* Ajuste la hauteur pour voir le scroll vertical */\n}\n\n/* Style des cartes */\n.product-card {\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, color 0.3s ease;\n  text-align: left;\n  width: 100%;\n  height: 499px;\n  flex-shrink: 0; \n  flex-grow: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  color: #5AAAD8;\n}\n\n/* Image */\n.product-image {\n  width: 221px;\n  height: auto;\n  border-radius: 8px;\n  margin-left: 100px;\n}\n\n/* Nom du produit */\n.product-name {\n  font-size: 1.5em;\n  margin: 10px 0;\n  font-family: 'DAWBE';\n  color: #1E1E1E;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 0;\n}\n\n/* Description */\n.product-description {\n  margin-top: 0;\n  font-size: 1em;\n  color: #1E1E1E;\n  font-family: 'PP Formula', sans-serif;\n  margin-bottom: 10px;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  max-height: 120px;\n  overflow-y: auto;\n}\n\n/* Prix */\n.product-price {\n  font-size: 1.2em;\n  color: #1E1E1E;\n  margin-top: 10px;\n  font-family: 'PP Formula', sans-serif;\n  font-weight: bold;\n}\n\n/* Bouton */\n.product-button {\n  padding: 10px 15px;\n  border: none;\n  background-color: #0E100E;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  font-family: 'PP Formula', sans-serif;\n  margin-top: auto;\n  align-self: flex-end;\n}\n\n.product-card:hover .product-name,\n.product-card:hover .product-description {\n  color: #5AAAD8;\n}\n\n.product-button:hover {\n  background-color: #5AAAD8;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}