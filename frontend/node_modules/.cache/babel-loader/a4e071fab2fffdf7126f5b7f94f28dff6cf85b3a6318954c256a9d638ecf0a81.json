{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport NavBar from '@/components/NavBar.vue';\nimport ShopHeader from '@/components/ShopHeader.vue';\nimport ProductList from '@/components/ProductList.vue';\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar,\n    ShopHeader,\n    ProductList\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink')\n    };\n  },\n  async created() {\n    await this.fetchProductsFromDolibarr();\n    await this.initCart();\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        console.log('Tentative de récupération des produits depuis Dolibarr...');\n        if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const url = `${this.apiLink}/products`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const products = await response.json();\n        this.products = products.map(product => {\n          console.log(\"Produit récupéré:\", product);\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.url_photo ? `${this.apiLink}${product.url_photo}` : null,\n            price_ht: parseFloat(product.price || 0),\n            price_ttc: parseFloat(product.price * (1 + product.tva_tx / 100)),\n            tva_tx: parseFloat(product.tva_tx || 0),\n            label: product.label,\n            ref: product.ref,\n            weight: product.weight,\n            width: product.width,\n            length: product.length,\n            height: product.height,\n            note: product.array_options?.options_note || 'Aucune note disponible.'\n          };\n        });\n        console.log('Produits récupérés et traités:', this.products);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\" + searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n    async addNote(productId, noteInput, currentNote) {\n      try {\n        if (noteInput > 10 || noteInput < 0) {\n          alert(\"La note doit être comprise entre 0 et 10\");\n          return;\n        }\n        let newNote;\n        if (currentNote !== 'Aucune note disponible.') {\n          newNote = (parseFloat(currentNote) + parseFloat(noteInput)) / 2;\n        } else {\n          newNote = parseFloat(noteInput);\n        }\n        const noteData = {\n          array_options: {\n            options_note: newNote.toString()\n          }\n        };\n        const response = await fetch(`${this.apiLink}/products/${productId}`, {\n          method: 'PUT',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(noteData)\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la mise à jour de la note: ${response.status}`);\n        }\n        const productToUpdate = this.products.find(p => p.id === productId);\n        if (productToUpdate) {\n          productToUpdate.note = newNote;\n          productToUpdate.noteInput = '';\n        }\n        if (this.$toast) {\n          this.$toast.success(\"Note mise à jour avec succès!\");\n        } else {\n          alert(\"Note mise à jour avec succès!\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de la note:\", error);\n        if (this.$toast) {\n          this.$toast.error(\"Échec de la mise à jour de la note\");\n        } else {\n          alert(\"Échec de la mise à jour de la note\");\n        }\n      }\n    },\n    async addToCart(product) {\n      try {\n        console.log('Tentative d\\'ajout au panier pour le produit:', product);\n        const isLoggedIn = localStorage.getItem('authToken');\n        if (!isLoggedIn) {\n          alert('Vous devez être connecté pour ajouter des produits au panier.');\n          this.$router.push({\n            name: 'login'\n          });\n          return;\n        }\n\n        // S'assurer que le panier est initialisé\n        if (!this.cartId) {\n          await this.initCart();\n          if (!this.cartId) {\n            alert(\"Erreur : impossible d'initialiser le panier\");\n            return;\n          }\n        }\n\n        // Calculer le prix HT à partir du prix TTC si nécessaire\n        let priceHt = product.price_ht;\n        if (!priceHt && product.price_ttc) {\n          priceHt = product.price_ttc / (1 + product.tva_tx / 100);\n        }\n        const itemData = {\n          fk_product: product.id,\n          qty: 1,\n          subprice: priceHt,\n          tva_tx: product.tva_tx,\n          label: product.label,\n          product_desc: product.description || \"\",\n          product_ref: product.ref,\n          price: priceHt,\n          product_tobuy: 1,\n          product_tosell: 1,\n          weight: product.weight || 0,\n          width: product.width || 0,\n          length: product.length || 0,\n          height: product.height || 0,\n          localtax1_tx: \"0.0000\",\n          localtax2_tx: \"0.0000\",\n          total_ht: priceHt,\n          total_ttc: product.price_ttc\n        };\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          await this.fetchCartItems(this.cartId);\n          if (this.$toast) {\n            this.$toast.success('Produit ajouté au panier !');\n          } else {\n            alert('Produit ajouté au panier !');\n          }\n        } else {\n          console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n          alert(\"Erreur lors de l'ajout au panier\");\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n        alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","ShopHeader","ProductList","name","components","data","products","cartItems","cartId","apiKey","localStorage","getItem","apiLink","created","fetchProductsFromDolibarr","initCart","methods","console","log","Error","url","response","fetch","headers","ok","statusText","json","map","product","id","label","description","image","url_photo","price_ht","parseFloat","price","price_ttc","tva_tx","ref","weight","width","length","height","note","array_options","options_note","error","clientId","searchUrl","orders","Array","isArray","fetchCartItems","newOrderId","createDraftOrder","payload","socid","date","Date","toISOString","split","status","lines","method","body","JSON","stringify","message","text","newOrder","addNote","productId","noteInput","currentNote","alert","newNote","noteData","toString","productToUpdate","find","p","$toast","success","addToCart","isLoggedIn","$router","push","priceHt","itemData","fk_product","qty","subprice","product_desc","product_ref","product_tobuy","product_tosell","localtax1_tx","localtax2_tx","total_ht","total_ttc"],"sources":["/Users/macbookpro/Sham/S6/Eval2-1/frontend/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <div class=\"shop-container\">\n    <NavBar />\n    <ShopHeader title=\"NOS\" subtitle=\"PRODUITS\" />\n    <ProductList \n      :products=\"products\" \n      @add-to-cart=\"addToCart\" \n      @add-note=\"addNote\" \n    />\n  </div>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\nimport ShopHeader from '@/components/ShopHeader.vue';\nimport ProductList from '@/components/ProductList.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar,\n    ShopHeader,\n    ProductList\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink'),\n    };\n  },\n  async created() {\n    await this.fetchProductsFromDolibarr();\n    await this.initCart();\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        console.log('Tentative de récupération des produits depuis Dolibarr...');\n        if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n        const url = `${this.apiLink}/products`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const products = await response.json();\n\n        this.products = products.map(product => {\n          console.log(\"Produit récupéré:\", product);\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.url_photo ? `${this.apiLink}${product.url_photo}` : null,\n            price_ht: parseFloat(product.price || 0),\n            price_ttc: parseFloat((product.price) * (1 + product.tva_tx/100)),\n            tva_tx: parseFloat(product.tva_tx || 0),\n            label: product.label,\n            ref: product.ref,\n            weight: product.weight,\n            width: product.width,\n            length: product.length,\n            height: product.height,\n            note: product.array_options?.options_note || 'Aucune note disponible.',\n          };\n        });\n        \n        console.log('Produits récupérés et traités:', this.products);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\"+searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          await this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n\n    async createDraftOrder(clientId) {\n      try {\n        const payload = {\n          socid: clientId,\n          date: new Date().toISOString().split('T')[0],\n          status: 0,\n          lines: []\n        };\n\n        const response = await fetch(`${this.apiLink}/orders`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n\n        if (!response.ok) {\n          const message = await response.text();\n          throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n        }\n\n        const newOrder = await response.json();\n        console.log(\"Commande brouillon créée:\", newOrder);\n        return newOrder.id;\n      } catch (error) {\n        console.error(\"Erreur lors de la création de la commande:\", error);\n        return null;\n      }\n    },\n\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n        console.log(\"Articles du panier récupérés:\", this.cartItems);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n\n    async addNote(productId, noteInput, currentNote) {\n      try {\n        if(noteInput > 10 || noteInput < 0) {\n          alert(\"La note doit être comprise entre 0 et 10\");\n          return;\n        }\n        \n        let newNote;\n        \n        if (currentNote !== 'Aucune note disponible.') {\n          newNote = (parseFloat(currentNote) + parseFloat(noteInput)) / 2;\n        } else {\n          newNote = parseFloat(noteInput);\n        }\n        \n        const noteData = {\n          array_options: {\n            options_note: newNote.toString()\n          }\n        };\n        \n        const response = await fetch(`${this.apiLink}/products/${productId}`, {\n          method: 'PUT',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(noteData)\n        });\n        \n        if (!response.ok) {\n          throw new Error(`Erreur lors de la mise à jour de la note: ${response.status}`);\n        }\n        \n        const productToUpdate = this.products.find(p => p.id === productId);\n        if (productToUpdate) {\n          productToUpdate.note = newNote;\n          productToUpdate.noteInput = ''; \n        }\n        \n        if (this.$toast) {\n          this.$toast.success(\"Note mise à jour avec succès!\");\n        } else {\n          alert(\"Note mise à jour avec succès!\");\n        }\n        \n      } catch (error) {\n        console.error(\"Erreur lors de la mise à jour de la note:\", error);\n        if (this.$toast) {\n          this.$toast.error(\"Échec de la mise à jour de la note\");\n        } else {\n          alert(\"Échec de la mise à jour de la note\");\n        }\n      }\n    },\n\n    async addToCart(product) {\n      try {\n        console.log('Tentative d\\'ajout au panier pour le produit:', product);\n        const isLoggedIn = localStorage.getItem('authToken');\n        if (!isLoggedIn) {\n          alert('Vous devez être connecté pour ajouter des produits au panier.');\n          this.$router.push({ name: 'login' });\n          return;\n        }\n\n        // S'assurer que le panier est initialisé\n        if (!this.cartId) {\n          await this.initCart();\n          if (!this.cartId) {\n            alert(\"Erreur : impossible d'initialiser le panier\");\n            return;\n          }\n        }\n\n        // Calculer le prix HT à partir du prix TTC si nécessaire\n        let priceHt = product.price_ht;\n        if (!priceHt && product.price_ttc) {\n          priceHt = product.price_ttc / (1 + (product.tva_tx / 100));\n        }\n\n        const itemData = {\n          fk_product: product.id,\n          qty: 1,\n          subprice: priceHt,\n          tva_tx: product.tva_tx,\n          label: product.label,\n          product_desc: product.description || \"\",\n          product_ref: product.ref,\n          price: priceHt,\n          product_tobuy: 1,\n          product_tosell: 1,\n          weight: product.weight || 0,\n          width: product.width || 0,\n          length: product.length || 0,\n          height: product.height || 0,\n          localtax1_tx: \"0.0000\",\n          localtax2_tx: \"0.0000\",\n          total_ht: priceHt,\n          total_ttc: product.price_ttc\n        };\n\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          await this.fetchCartItems(this.cartId);\n          if (this.$toast) {\n            this.$toast.success('Produit ajouté au panier !');\n          } else {\n            alert('Produit ajouté au panier !');\n          }\n        } else {\n          console.error(\"Erreur lors de l'ajout au panier :\", await response.text());\n          alert(\"Erreur lors de l'ajout au panier\");\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n        alert(\"Une erreur s'est produite lors de l'ajout au panier\");\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.shop-container {\n  width: 100%;\n  min-height: 100vh;\n  background-color: #111;\n  overflow-x: hidden;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}