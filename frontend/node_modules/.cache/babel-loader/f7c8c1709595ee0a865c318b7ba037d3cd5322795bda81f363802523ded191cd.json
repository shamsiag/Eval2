{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = \"\";\n      try {\n        const response = await fetch(\"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php/thirdparties\", {\n          headers: {\n            \"DOLAPIKEY\": \"ZxDsSBw0YVfy6vP534M9vSN6kf1Bt60f\",\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const clients = await response.json();\n\n        // Recherche du client par email\n        const client = clients.find(c => c.email && c.email.toLowerCase() === this.email.toLowerCase());\n        if (client) {\n          // Ici, au lieu de l'ID, on suppose qu'un token est renvoyé\n          localStorage.setItem(\"authToken\", \"ZxDsSBw0YVfy6vP534M9vSN6kf1Bt60f\"); // Exemple d'API Key comme token\n          localStorage.setItem(\"clientId\", client.id);\n          localStorage.setItem(\"clientName\", client.name);\n\n          // Redirige vers le shop\n          this.$router.push(\"/shop\");\n        } else {\n          this.errorMessage = \"Email non trouvé. Veuillez vérifier votre saisie.\";\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la connexion :\", error);\n        this.errorMessage = \"Erreur de connexion. Veuillez réessayer plus tard.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","email","password","errorMessage","methods","handleLogin","response","fetch","headers","clients","json","client","find","c","toLowerCase","localStorage","setItem","id","$router","push","error","console"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"left-section\">\n      <h1 class=\"login-title\">Connexion</h1>\n\n      <form @submit.prevent=\"handleLogin\" class=\"login-form\">\n        <div class=\"input-group\">\n          <label for=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            v-model=\"email\"\n            placeholder=\"Entrez votre email\"\n            required\n          />\n        </div>\n\n        <div class=\"input-group\">\n          <label for=\"password\">Mot de passe</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            v-model=\"password\"\n            placeholder=\"Entrez votre mot de passe\"\n            required\n          />\n        </div>\n\n        <div class=\"form-footer\">\n          <button type=\"submit\" class=\"login-button\">Se connecter</button>\n          <p class=\"signup-link\">\n            Pas de compte ?\n            <router-link to=\"/signup\">Inscrivez-vous ici</router-link>\n          </p>\n        </div>\n      </form>\n\n      <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\n    </div>\n\n    <div class=\"right-section\">\n      <img src=\"@/assets/item/login-illustration.jpg\" alt=\"Illustration\" class=\"login-image\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      errorMessage: \"\",\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = \"\";\n\n      try {\n        const response = await fetch(\"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php/thirdparties\", {\n          headers: {\n            \"DOLAPIKEY\": \"ZxDsSBw0YVfy6vP534M9vSN6kf1Bt60f\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        const clients = await response.json();\n\n        // Recherche du client par email\n        const client = clients.find(c => c.email && c.email.toLowerCase() === this.email.toLowerCase());\n\n        if (client) {\n          // Ici, au lieu de l'ID, on suppose qu'un token est renvoyé\n          localStorage.setItem(\"authToken\", \"ZxDsSBw0YVfy6vP534M9vSN6kf1Bt60f\"); // Exemple d'API Key comme token\n          localStorage.setItem(\"clientId\", client.id);\n          localStorage.setItem(\"clientName\", client.name);\n\n          // Redirige vers le shop\n          this.$router.push(\"/shop\");\n        } else {\n          this.errorMessage = \"Email non trouvé. Veuillez vérifier votre saisie.\";\n        }\n\n      } catch (error) {\n        console.error(\"Erreur lors de la connexion :\", error);\n        this.errorMessage = \"Erreur de connexion. Veuillez réessayer plus tard.\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n.login-page {\n  display: flex;\n  height: 100vh;\n  background-color: #0e100e;\n  color: #f7f7f7;\n  font-family: 'PP Formula', sans-serif;\n}\n\n.left-section {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  text-align: left;\n}\n\n.right-section {\n  flex: 1;\n  background-color: #1e1e1e;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.login-image {\n  max-width: 90%;\n  height: auto;\n  border-radius: 10px;\n}\n\n.login-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  margin-bottom: 40px;\n}\n\n.login-form {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.input-group label {\n  margin-bottom: 5px;\n  font-weight: bold;\n}\n\n.input-group input {\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  font-size: 1em;\n}\n\n.form-footer {\n  margin-top: 20px;\n}\n\n.login-button {\n  padding: 10px 20px;\n  background-color: #5aaad8;\n  border: none;\n  border-radius: 5px;\n  color: white;\n  font-family: 'PP Formula', sans-serif;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.login-button:hover {\n  background-color: #3e8cbf;\n}\n\n.signup-link {\n  margin-top: 15px;\n  font-size: 0.9em;\n}\n\n.signup-link a {\n  color: #5aaad8;\n  text-decoration: underline;\n}\n\n.error-message {\n  margin-top: 15px;\n  color: red;\n}\n</style>\n"],"mappings":";;;AA+CA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,YAAW,GAAI,EAAE;MAEtB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAAC,yEAAyE,EAAE;UACtGC,OAAO,EAAE;YACP,WAAW,EAAE,kCAAkC;YAC/C,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,MAAMC,OAAM,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;;QAErC;QACA,MAAMC,MAAK,GAAIF,OAAO,CAACG,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACZ,KAAI,IAAKY,CAAC,CAACZ,KAAK,CAACa,WAAW,CAAC,MAAM,IAAI,CAACb,KAAK,CAACa,WAAW,CAAC,CAAC,CAAC;QAE/F,IAAIH,MAAM,EAAE;UACV;UACAI,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,kCAAkC,CAAC,EAAE;UACvED,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,MAAM,CAACM,EAAE,CAAC;UAC3CF,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,MAAM,CAACZ,IAAI,CAAC;;UAE/C;UACA,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;QAC5B,OAAO;UACL,IAAI,CAAChB,YAAW,GAAI,mDAAmD;QACzE;MAEF,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAI,CAACjB,YAAW,GAAI,oDAAoD;MAC1E;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}