{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orders-page\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"href\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Mes Commandes\", -1 /* HOISTED */)), $data.orders.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Référence\"), _createElementVNode(\"th\", null, \"Date\"), _createElementVNode(\"th\", null, \"Total TTC\"), _createElementVNode(\"th\", null, \"Statut\"), _createElementVNode(\"th\", null, \"Payée\"), _createElementVNode(\"th\", null, \"Facture\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.ref || order.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(order.date_creation)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatCurrency(order.total_ttc)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getStatusText(order)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.isPaid ? 'Oui' : 'Non'), 1 /* TEXT */), _createElementVNode(\"td\", null, [order.invoiceUrl ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      href: order.invoiceUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, \" Voir la facture \", 8 /* PROPS */, _hoisted_3)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"Aucune\"))])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Aucune commande trouvée.\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","orders","length","_hoisted_2","_Fragment","_renderList","order","id","_toDisplayString","ref","$options","formatDate","date_creation","formatCurrency","total_ttc","getStatusText","isPaid","invoiceUrl","href","target","rel","_hoisted_3","_hoisted_4","_hoisted_5"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/OrdersPage.vue"],"sourcesContent":["<template>\n  <div class=\"orders-page\">\n    <h1>Mes Commandes</h1>\n    <table v-if=\"orders.length\">\n      <thead>\n        <tr>\n          <th>Référence</th>\n          <th>Date</th>\n          <th>Total TTC</th>\n          <th>Statut</th>\n          <th>Payée</th>\n          <th>Facture</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order.id\">\n          <td>{{ order.ref || order.id }}</td>\n          <td>{{ formatDate(order.date_creation) }}</td>\n          <td>{{ formatCurrency(order.total_ttc) }}</td>\n          <td>{{ getStatusText(order) }}</td>\n          <td>{{ order.isPaid ? 'Oui' : 'Non' }}</td>\n          <td>\n            <a\n              v-if=\"order.invoiceUrl\"\n              :href=\"order.invoiceUrl\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Voir la facture\n            </a>\n            <span v-else>Aucune</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>Aucune commande trouvée.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MesCommandes\",\n  data() {\n    return {\n      orders: [],\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\"),\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      const clientId = localStorage.getItem(\"clientId\");\n      try {\n        if (!this.apiKey || !this.apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        const url = `${this.apiLink}/orders?sqlfilters=(fk_soc:=:${clientId})`;\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            DOLAPIKEY: this.apiKey,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n\n        const rawOrders = await response.json();\n\n        // Pour chaque commande, récupérer son statut de paiement et le lien vers la facture\n        const ordersWithExtras = await Promise.all(\n          rawOrders.map(async (order) => {\n            const invoiceData = await this.getInvoiceData(order.id);\n            return {\n              ...order,\n              isPaid: invoiceData.isPaid,\n              invoiceUrl: invoiceData.invoiceUrl,\n            };\n          })\n        );\n\n        this.orders = ordersWithExtras;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des commandes:\", error);\n      }\n    },\n\n    async getInvoiceData(orderId) {\n      try {\n        const url = `${this.apiLink}/invoices?sqlfilters=(fk_commande:=:${orderId})`;\n        cons\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            DOLAPIKEY: this.apiKey,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la récupération des factures pour la commande ${orderId}`);\n        }\n\n        const invoices = await response.json();\n\n        if (!invoices.length) {\n          return { isPaid: false, invoiceUrl: null };\n        }\n\n        const firstInvoice = invoices[0];\n        const isPaid = invoices.some((inv) => inv.paye === \"1\" || inv.paye === 1);\n        const invoiceUrl = `${this.apiLink}/documents/facture/${firstInvoice.id}/pdf`;\n\n        return { isPaid, invoiceUrl };\n      } catch (error) {\n        console.error(\"Erreur facture commande\", orderId, error);\n        return { isPaid: false, invoiceUrl: null };\n      }\n    },\n\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n\n    formatDate(timestamp) {\n      if (!timestamp) return \"Inconnue\";\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n\n    getStatusText(order) {\n      switch (order.status) {\n        case \"0\":\n          return \"Commande créée\";\n        case \"1\":\n          return order.billed && (order.billed === true || order.billed === \"1\")\n            ? \"Validé-Facturé\"\n            : \"Validé\";\n        case \"2\":\n          return \"Facturée\";\n        case \"3\":\n          return \"Livrée\";\n        case \"4\":\n          return \"Traitée\";\n        case \"-1\":\n          return \"Annulée\";\n        default:\n          return \"Statut inconnu\";\n      }\n    },\n  },\n};\n</script>\n  \n  <style scoped>\n  .orders-page {\n    padding: 40px 20px;\n    background-color: #0e100e;\n    color: #f7f7f7;\n    font-family: 'PP Formula', sans-serif;\n  }\n  \n  h1 {\n    font-family: 'DAWBE';\n    font-size: 48px;\n    margin-bottom: 30px;\n    text-align: center;\n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    color: #1e1e1e;\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  th, td {\n    padding: 12px 15px;\n    border: 1px solid #ddd;\n  }\n  \n  th {\n    background-color: #5aaad8;\n    color: white;\n    text-align: left;\n  }\n  \n  tbody tr:nth-child(even) {\n    background-color: #f3f3f3;\n  }\n  </style>\n  "],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAD1BC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCJC,mBAAA,CAAsB,YAAlB,eAAa,sBACJC,KAAA,CAAAC,MAAM,CAACC,MAAM,I,cAA1BL,mBAAA,CA+BQ,SAlCZM,UAAA,G,0BAIMJ,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAmBQ,iB,kBAlBNF,mBAAA,CAiBKO,SAAA,QAhCbC,WAAA,CAe4BL,KAAA,CAAAC,MAAM,EAAfK,KAAK;yBAAhBT,mBAAA,CAiBK;MAjBwBD,GAAG,EAAEU,KAAK,CAACC;QACtCR,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BF,KAAK,CAACG,GAAG,IAAIH,KAAK,CAACC,EAAE,kBAC5BR,mBAAA,CAA8C,YAAAS,gBAAA,CAAvCE,QAAA,CAAAC,UAAU,CAACL,KAAK,CAACM,aAAa,mBACrCb,mBAAA,CAA8C,YAAAS,gBAAA,CAAvCE,QAAA,CAAAG,cAAc,CAACP,KAAK,CAACQ,SAAS,mBACrCf,mBAAA,CAAmC,YAAAS,gBAAA,CAA5BE,QAAA,CAAAK,aAAa,CAACT,KAAK,mBAC1BP,mBAAA,CAA2C,YAAAS,gBAAA,CAApCF,KAAK,CAACU,MAAM,kCACnBjB,mBAAA,CAUK,aARKO,KAAK,CAACW,UAAU,I,cADxBpB,mBAAA,CAOI;MA7BhBD,GAAA;MAwBesB,IAAI,EAAEZ,KAAK,CAACW,UAAU;MACvBE,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC;OACL,mBAED,iBA7BZC,UAAA,M,cA8BYxB,mBAAA,CAA0B,QA9BtCyB,UAAA,EA8ByB,QAAM,G;uDAK3BzB,mBAAA,CAAsC,KAnC1C0B,UAAA,EAmCc,0BAAwB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}