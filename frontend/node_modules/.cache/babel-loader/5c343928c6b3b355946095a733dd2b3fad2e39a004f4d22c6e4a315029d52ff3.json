{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"shop-section\"\n};\nconst _hoisted_2 = {\n  class: \"cards-container\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  class: \"product-name\"\n};\nconst _hoisted_5 = {\n  class: \"product-description\"\n};\nconst _hoisted_6 = {\n  class: \"product-price\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _createElementVNode(\"section\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"section-title\"\n  }, \"NOS\", -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"section-title\"\n  }, \"PRODUITS\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, (product, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"product-card\"\n    }, [_createElementVNode(\"img\", {\n      src: product.image || require('@/assets/item/default-product.png'),\n      alt: product.name,\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"h3\", _hoisted_4, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(product.description), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($options.formatPrice(product.price_ttc)), 1 /* TEXT */), _createElementVNode(\"button\", {\n      class: \"product-button\",\n      onClick: $event => $options.addToCart(product)\n    }, \"Ajouter au panier\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_NavBar","_createElementVNode","_hoisted_1","_hoisted_2","_renderList","$data","products","product","index","key","src","image","require","alt","name","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","description","_hoisted_6","$options","formatPrice","price_ttc","onClick","$event","addToCart","_hoisted_7"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <section class=\"shop-section\">\n    <h2 class=\"section-title\">NOS</h2>\n    <h2 class=\"section-title\">PRODUITS</h2>\n\n    <div class=\"cards-container\">\n      <div \n        v-for=\"(product, index) in products\" \n        :key=\"index\" \n        class=\"product-card\"\n      >\n        <img :src=\"product.image || require('@/assets/item/default-product.png')\" :alt=\"product.name\" class=\"product-image\" />\n        <h3 class=\"product-name\">{{ product.name }}</h3>\n        <p class=\"product-description\">{{ product.description }}</p>\n        <p class=\"product-price\">{{ formatPrice(product.price_ttc) }}</p>\n        <button class=\"product-button\" @click=\"addToCart(product)\">Ajouter au panier</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [] // On commence avec un tableau vide\n    };\n  },\n  created() {\n    this.fetchProductsFromDolibarr(); // Récupérer les produits au moment de la création du composant\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiKey || !apiLink) {\n          throw new Error(\"API Key ou API Link manquant\");\n        }\n\n        const url = `${apiLink}/products`; // URL de l'API Dolibarr pour récupérer les produits\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n\n        const products = await response.json();\n        console.log(\"Produits récupérés de Dolibarr:\", products);\n\n        this.products = products.map(product => {\n          // Calcul du prix TTC\n          const tvaRate = product.tva_rate / 100; // Conversion de la TVA en pourcentage\n          const priceTtc = product.price_ht * (1 + tvaRate);\n\n          console.log('Prix HT:', product.price_ht);\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.fk_photo ? `${apiLink}/product/photos/${product.fk_photo}` : null, // Vérification de l'image\n            price_ht: product.price_ht,\n            price_ttc: priceTtc.toFixed(2), // Arrondir à 2 décimales\n          };\n        });\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits depuis Dolibarr:\", error);\n      }\n    },\n\n    formatPrice(price) {\n      return `${price} €`; // Formatage du prix avec l'euro\n    },\n\n    async addToCart(product) {\n      // Vérification de la connexion\n      const isLoggedIn = localStorage.getItem('authToken'); // Vérifier un token ou état d'authentification\n\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({ name: 'login' });\n        return;\n      }\n\n      // Mise à jour du panier en localStorage\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\n      const existingProductIndex = cart.findIndex(item => item.name === product.name);\n      if (existingProductIndex !== -1) {\n        cart[existingProductIndex].quantity += 1;\n      } else {\n        product.quantity = 1;\n        cart.push(product);\n      }\n      localStorage.setItem('cart', JSON.stringify(cart));\n\n      // Récupérer ou créer la commande brouillon côté Dolibarr\n      const orderId = await this.getOrCreateDraftOrder();\n      if (!orderId) {\n        alert('Erreur lors de la récupération ou de la création du panier Dolibarr.');\n        return;\n      }\n\n      // Ajouter le produit à la commande côté Dolibarr\n      await this.addProductToDolibarrCart(product, orderId);\n\n      alert(`Produit ajouté au panier : ${product.name}`);\n    },\n\n    // Méthodes pour gérer le panier et la commande dans Dolibarr\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: { \"DOLAPIKEY\": apiKey }\n        });\n        const existingOrders = await searchRes.json();\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          return existingOrders[0].id;\n        }\n\n        // Créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        return newOrder.id || null;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération ou création de la commande:\", error);\n        return null;\n      }\n    },\n\n    async addProductToDolibarrCart(product, orderId) {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiLink || !apiKey) {\n          throw new Error('API Key ou API Link manquant');\n        }\n\n        const orderLine = {\n          fk_product: product.id,\n          qty: product.quantity,\n          subprice: product.price_ht\n        };\n\n        const response = await fetch(`${apiLink}/orders/${orderId}/lines`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'DOLAPIKEY': apiKey,\n          },\n          body: JSON.stringify(orderLine),\n        });\n\n        if (response.ok) {\n          console.log('Produit ajouté à la commande Dolibarr');\n        } else {\n          const errorData = await response.json();\n          console.error('Erreur lors de l\\'ajout du produit à Dolibarr', errorData);\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit à Dolibarr:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Optionnel : modifications spécifiques à la page Shop */\n.shop-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n.section-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  margin-left: 115px;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n/* Section globale */\n.products-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n/* Titre */\n.section-title {\n  font-size: 56px;\n  margin-left: 115px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  text-align: left;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n/* Conteneur des cartes */\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* 3 produits par ligne */\n  gap: 50px;\n  max-width: 75%; /* Ajuste à la largeur du parent */\n  overflow-x: hidden; /* Empêche le scroll horizontal */\n  overflow-y: auto; /* Défilement vertical */\n  padding-bottom: 10px;\n  margin-left: 25%;\n  height: 100vh; /* Ajuste la hauteur pour voir le scroll vertical */\n}\n\n/* Style des cartes */\n.product-card {\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, color 0.3s ease;\n  text-align: left;\n  width: 100%;\n  height: 499px;\n  flex-shrink: 0; \n  flex-grow: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  color: #5AAAD8;\n}\n\n/* Image */\n.product-image {\n  width: 221px;\n  height: auto;\n  border-radius: 8px;\n  margin-left: 100px;\n}\n\n/* Nom du produit */\n.product-name {\n  font-size: 1.5em;\n  margin: 10px 0;\n  font-family: 'DAWBE';\n  color: #1E1E1E;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 0;\n}\n\n/* Description */\n.product-description {\n  margin-top: 0;\n  font-size: 1em;\n  color: #1E1E1E;\n  font-family: 'PP Formula', sans-serif;\n  margin-bottom: 10px;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n}\n\n/* Bouton */\n.product-button {\n  padding: 10px 15px;\n  border: none;\n  background-color: #0E100E;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  font-family: 'PP Formula', sans-serif;\n  margin-top: auto;\n  align-self: flex-end;\n}\n\n.product-card:hover .product-name,\n.product-card:hover .product-description {\n  color: #5AAAD8;\n}\n\n.product-button:hover {\n  background-color: #5AAAD8;\n}\n.product-price {\n  font-size: 1.2em;\n  color: #1E1E1E;\n  margin-top: 10px;\n  font-family: 'PP Formula', sans-serif;\n}\n</style>\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAc;;EAItBA,KAAK,EAAC;AAAiB;mBANhC;;EAaYA,KAAK,EAAC;AAAc;;EACrBA,KAAK,EAAC;AAAqB;;EAC3BA,KAAK,EAAC;AAAe;mBAfhC;;;uBAAAC,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAiBU,WAjBVC,UAiBU,G,0BAhBRD,mBAAA,CAAkC;IAA9BL,KAAK,EAAC;EAAe,GAAC,KAAG,sB,0BAC7BK,mBAAA,CAAuC;IAAnCL,KAAK,EAAC;EAAe,GAAC,UAAQ,sBAElCK,mBAAA,CAYM,OAZNE,UAYM,I,kBAXJN,mBAAA,CAUMC,SAAA,QAjBZM,WAAA,CAQmCC,KAAA,CAAAC,QAAQ,EAR3C,CAQgBC,OAAO,EAAEC,KAAK;yBADxBX,mBAAA,CAUM;MARHY,GAAG,EAAED,KAAK;MACXZ,KAAK,EAAC;QAENK,mBAAA,CAAsH;MAAhHS,GAAG,EAAEH,OAAO,CAACI,KAAK,IAAIC,OAAO;MAAwCC,GAAG,EAAEN,OAAO,CAACO,IAAI;MAAElB,KAAK,EAAC;4BAZ5GmB,UAAA,GAaQd,mBAAA,CAAgD,MAAhDe,UAAgD,EAAAC,gBAAA,CAApBV,OAAO,CAACO,IAAI,kBACxCb,mBAAA,CAA4D,KAA5DiB,UAA4D,EAAAD,gBAAA,CAA1BV,OAAO,CAACY,WAAW,kBACrDlB,mBAAA,CAAiE,KAAjEmB,UAAiE,EAAAH,gBAAA,CAArCI,QAAA,CAAAC,WAAW,CAACf,OAAO,CAACgB,SAAS,mBACzDtB,mBAAA,CAAqF;MAA7EL,KAAK,EAAC,gBAAgB;MAAE4B,OAAK,EAAAC,MAAA,IAAEJ,QAAA,CAAAK,SAAS,CAACnB,OAAO;OAAG,mBAAiB,iBAhBpFoB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}