{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"item-details\"\n};\nconst _hoisted_6 = {\n  class: \"total\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Mon panier\", -1 /* HOISTED */)), $data.cartItems.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", null, \"Votre panier est vide.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"item\"\n    }, [_createElementVNode(\"img\", {\n      src: item.image,\n      alt: \"Produit\",\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(item.description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Quantité : \" + _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Prix TTC : \" + _toDisplayString($options.formatCurrency(item.priceTtc)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"p\", _hoisted_6, \"Total : \" + _toDisplayString($options.formatCurrency($data.totalPrice)), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.validateOrder && $options.validateOrder(...args)),\n    class: \"validate-button\"\n  }, \"Valider la commande\")]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","cartItems","length","_hoisted_2","_cache","_hoisted_3","_Fragment","_renderList","item","id","src","image","alt","_hoisted_4","_hoisted_5","_toDisplayString","name","description","quantity","$options","formatCurrency","priceTtc","_hoisted_6","totalPrice","onClick","args","validateOrder"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Mon panier</h1>\n    <div v-if=\"cartItems.length === 0\">\n      <p>Votre panier est vide.</p>\n    </div>\n    <div v-else>\n      <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"item\">\n        <img :src=\"item.image\" alt=\"Produit\" class=\"product-image\" />\n        <div class=\"item-details\">\n          <h2>{{ item.name }}</h2>\n          <p>{{ item.description }}</p>\n          <p>Quantité : {{ item.quantity }}</p>\n          <p>Prix TTC : {{ formatCurrency(item.priceTtc) }}</p>\n        </div>\n      </div>\n      <p class=\"total\">Total : {{ formatCurrency(totalPrice) }}</p>\n      <button @click=\"validateOrder\" class=\"validate-button\">Valider la commande</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      cartId: localStorage.getItem('cartId'),\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink'),\n    };\n  },\n  created() {\n    this.fetchCartItems();\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    async fetchCartItems() {\n      if (!this.apiKey || !this.apiLink || !this.cartId) {\n        console.error(\"Informations manquantes pour récupérer le panier.\");\n        return;\n      }\n\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Accept': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur réseau: ${response.statusText}`);\n        }\n\n        const items = await response.json();\n\n        this.cartItems = items.map(item => ({\n          id: item.id,\n          name: item.label,\n          description: item.product_desc,\n          quantity: item.qty,\n          priceTtc: item.total_ttc,\n          image: item.fk_product\n            ? `${this.apiLink}/product/photos/${item.fk_product}`\n            : require('@/assets/item/default-product.png'),\n        }));\n\n        this.totalPrice = this.cartItems.reduce(\n          (sum, item) => sum + item.priceTtc,\n          0\n        );\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier :\", error);\n      }\n    },\n    async validateOrder() {\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/validate`, {\n          method: 'POST',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Accept': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la validation : ${response.statusText}`);\n        }\n\n        const result = await response.json();\n        alert(\"Commande validée avec succès !\");\n        this.cartItems = [];\n        this.totalPrice = 0;\n        localStorage.removeItem('cartId');\n      } catch (error) {\n        console.error(\"Erreur lors de la validation de la commande :\", error);\n        alert(\"Une erreur est survenue lors de la validation.\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding: 20px;\n}\n\n.item {\n  display: flex;\n  margin-bottom: 20px;\n  align-items: center;\n}\n\n.product-image {\n  width: 100px;\n  height: auto;\n  margin-right: 20px;\n}\n\n.item-details h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.item-details p {\n  margin: 4px 0;\n}\n\n.total {\n  font-weight: bold;\n  font-size: 18px;\n  margin-top: 20px;\n}\n\n.validate-button {\n  background-color: #4caf50;\n  color: white;\n  padding: 12px 20px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n  margin-top: 10px;\n  border-radius: 8px;\n}\n\n.validate-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EADxBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;mBAAA;;EASaD,KAAK,EAAC;AAAc;;EAOxBA,KAAK,EAAC;AAAO;;uBAfpBE,mBAAA,CAkBM,OAlBNC,UAkBM,G,0BAjBJC,mBAAA,CAAmB,YAAf,YAAU,sBACHC,KAAA,CAAAC,SAAS,CAACC,MAAM,U,cAA3BL,mBAAA,CAEM,OALVM,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAIML,mBAAA,CAA6B,WAA1B,wBAAsB,oB,qBAE3BF,mBAAA,CAYM,OAlBVQ,UAAA,I,kBAOMR,mBAAA,CAQMS,SAAA,QAfZC,WAAA,CAO0BP,KAAA,CAAAC,SAAS,EAAjBO,IAAI;yBAAhBX,mBAAA,CAQM;MAR0BD,GAAG,EAAEY,IAAI,CAACC,EAAE;MAAEd,KAAK,EAAC;QAClDI,mBAAA,CAA6D;MAAvDW,GAAG,EAAEF,IAAI,CAACG,KAAK;MAAEC,GAAG,EAAC,SAAS;MAACjB,KAAK,EAAC;4BARnDkB,UAAA,GASQd,mBAAA,CAKM,OALNe,UAKM,GAJJf,mBAAA,CAAwB,YAAAgB,gBAAA,CAAjBP,IAAI,CAACQ,IAAI,kBAChBjB,mBAAA,CAA6B,WAAAgB,gBAAA,CAAvBP,IAAI,CAACS,WAAW,kBACtBlB,mBAAA,CAAqC,WAAlC,aAAW,GAAAgB,gBAAA,CAAGP,IAAI,CAACU,QAAQ,kBAC9BnB,mBAAA,CAAqD,WAAlD,aAAW,GAAAgB,gBAAA,CAAGI,QAAA,CAAAC,cAAc,CAACZ,IAAI,CAACa,QAAQ,kB;kCAGjDtB,mBAAA,CAA6D,KAA7DuB,UAA6D,EAA5C,UAAQ,GAAAP,gBAAA,CAAGI,QAAA,CAAAC,cAAc,CAACpB,KAAA,CAAAuB,UAAU,mBACrDxB,mBAAA,CAAmF;IAA1EyB,OAAK,EAAApB,MAAA,QAAAA,MAAA,UAAAqB,IAAA,KAAEN,QAAA,CAAAO,aAAA,IAAAP,QAAA,CAAAO,aAAA,IAAAD,IAAA,CAAa;IAAE9B,KAAK,EAAC;KAAkB,qBAAmB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}