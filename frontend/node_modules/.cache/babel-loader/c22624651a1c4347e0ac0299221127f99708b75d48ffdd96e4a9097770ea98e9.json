{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from '@/components/NavBar.vue';\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [{\n        image: require('@/assets/item/Frame 7.png'),\n        name: 'Selle Brooks B17',\n        description: 'Conçue pour épouser parfaitement la posture du cycliste.',\n        id: 1,\n        price: 120.00\n      }, {\n        image: require('@/assets/item/Frame 71.png'),\n        name: 'Kit Sport Vélo',\n        description: 'Un kit complet pour les passionnés de vélo.',\n        id: 2,\n        price: 150.00\n      }, {\n        image: require('@/assets/item/Frame 72.png'),\n        name: 'Éclairages LED',\n        description: 'Des éclairages puissants pour une visibilité optimale.',\n        id: 3,\n        price: 30.00\n      }, {\n        image: require('@/assets/item/Frame 73.png'),\n        name: 'Casque Bern Watts 2.0',\n        description: 'Un casque léger et résistant, conçu pour le confort.',\n        id: 4,\n        price: 80.00\n      }]\n    };\n  },\n  methods: {\n    async addToCart(product) {\n      // Vérification de la connexion\n      const isLoggedIn = localStorage.getItem('authToken'); // Vérifier un token ou état d'authentification\n\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({\n          name: 'login'\n        });\n        return;\n      }\n\n      // Mise à jour du panier en localStorage\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\n      const existingProductIndex = cart.findIndex(item => item.name === product.name);\n      if (existingProductIndex !== -1) {\n        cart[existingProductIndex].quantity += 1;\n      } else {\n        product.quantity = 1;\n        cart.push(product);\n      }\n      localStorage.setItem('cart', JSON.stringify(cart));\n\n      // Récupérer ou créer la commande brouillon côté Dolibarr\n      const orderId = await this.getOrCreateDraftOrder();\n      if (!orderId) {\n        alert('Erreur lors de la récupération ou de la création du panier Dolibarr.');\n        return;\n      }\n\n      // Ajouter le produit à la commande côté Dolibarr\n      await this.addProductToDolibarrCart(product, orderId);\n      alert(`Produit ajouté au panier : ${product.name}`);\n    },\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink'); // Par exemple \"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php\"\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const existingOrders = await searchRes.json();\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          return existingOrderId;\n        }\n\n        // Sinon, créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        if (newOrder.id) {\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la création de la commande brouillon\", newOrder);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur dans getOrCreateDraftOrder :\", error);\n        return null;\n      }\n    },\n    async addProductToDolibarrCart(product, orderId) {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiLink) {\n          throw new Error('API Link manquant');\n        }\n        if (!apiKey) {\n          throw new Error('API Key manquante');\n        }\n\n        // Créer l'objet de données à envoyer (vérifie que les noms de champs correspondent à ce qui est attendu par Dolibarr)\n        const orderLine = {\n          fk_product: product.id,\n          // ID produit côté Dolibarr\n          qty: product.quantity,\n          // Quantité\n          subprice: product.price // Prix HT (peut être \"price\" ou \"subprice\" selon l'API)\n        };\n        const response = await fetch(`${apiLink}/orders/${orderId}/lines`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'DOLAPIKEY': apiKey\n          },\n          body: JSON.stringify(orderLine)\n        });\n        if (response.ok) {\n          console.log('Produit ajouté à la commande Dolibarr');\n        } else {\n          const errorData = await response.json();\n          console.error('Erreur lors de l\\'ajout du produit à la commande Dolibarr', errorData);\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit à Dolibarr:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","name","components","data","products","image","require","description","id","price","methods","addToCart","product","isLoggedIn","localStorage","getItem","alert","$router","push","cart","JSON","parse","existingProductIndex","findIndex","item","quantity","setItem","stringify","orderId","getOrCreateDraftOrder","addProductToDolibarrCart","apiKey","apiLink","clientId","Error","searchUrl","searchRes","fetch","headers","existingOrders","json","Array","isArray","length","existingOrderId","createUrl","today","Date","toISOString","split","createRes","method","body","socid","date","status","newOrder","console","error","orderLine","fk_product","qty","subprice","response","ok","log","errorData"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <section class=\"shop-section\">\n    <h2 class=\"section-title\">NOS</h2>\n    <h2 class=\"section-title\">PRODUITS</h2>\n\n    <div class=\"cards-container\">\n      <div \n        v-for=\"(product, index) in products\" \n        :key=\"index\" \n        class=\"product-card\"\n      >\n        <img :src=\"product.image\" :alt=\"product.name\" class=\"product-image\" />\n        <h3 class=\"product-name\">{{ product.name }}</h3>\n        <p class=\"product-description\">{{ product.description }}</p>\n        <button class=\"product-button\" @click=\"addToCart(product)\">Ajouter au panier</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [\n        {\n          image: require('@/assets/item/Frame 7.png'),\n          name: 'Selle Brooks B17',\n          description: 'Conçue pour épouser parfaitement la posture du cycliste.',\n          id: 1,\n          price: 120.00\n        },\n        {\n          image: require('@/assets/item/Frame 71.png'),\n          name: 'Kit Sport Vélo',\n          description: 'Un kit complet pour les passionnés de vélo.',\n          id: 2,\n          price: 150.00\n        },\n        {\n          image: require('@/assets/item/Frame 72.png'),\n          name: 'Éclairages LED',\n          description: 'Des éclairages puissants pour une visibilité optimale.',\n          id: 3,\n          price: 30.00\n        },\n        {\n          image: require('@/assets/item/Frame 73.png'),\n          name: 'Casque Bern Watts 2.0',\n          description: 'Un casque léger et résistant, conçu pour le confort.',\n          id: 4,\n          price: 80.00\n        }\n      ]\n    };\n  },\n  methods: {\n    async addToCart(product) {\n      // Vérification de la connexion\n      const isLoggedIn = localStorage.getItem('authToken'); // Vérifier un token ou état d'authentification\n\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({ name: 'login' });\n        return;\n      }\n\n      // Mise à jour du panier en localStorage\n      let cart = JSON.parse(localStorage.getItem('cart')) || [];\n      const existingProductIndex = cart.findIndex(item => item.name === product.name);\n      if (existingProductIndex !== -1) {\n        cart[existingProductIndex].quantity += 1;\n      } else {\n        product.quantity = 1;\n        cart.push(product);\n      }\n      localStorage.setItem('cart', JSON.stringify(cart));\n\n      // Récupérer ou créer la commande brouillon côté Dolibarr\n      const orderId = await this.getOrCreateDraftOrder();\n      if (!orderId) {\n        alert('Erreur lors de la récupération ou de la création du panier Dolibarr.');\n        return;\n      }\n\n      // Ajouter le produit à la commande côté Dolibarr\n      await this.addProductToDolibarrCart(product, orderId);\n\n      alert(`Produit ajouté au panier : ${product.name}`);\n    },\n\n    async getOrCreateDraftOrder() {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink'); // Par exemple \"http://localhost:8888/dolibarr-21.0.0/htdocs/api/index.php\"\n        const clientId = localStorage.getItem('clientId');\n        if (!apiKey || !apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        // Recherche d'une commande brouillon existante pour ce client\n        const searchUrl = `${apiLink}/orders?fk_soc=${clientId}&status=0`;\n        const searchRes = await fetch(searchUrl, {\n          headers: { \"DOLAPIKEY\": apiKey }\n        });\n        const existingOrders = await searchRes.json();\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          return existingOrderId;\n        }\n\n        // Sinon, créer une nouvelle commande brouillon\n        const createUrl = `${apiLink}/orders`;\n        const today = new Date().toISOString().split(\"T\")[0];\n        const createRes = await fetch(createUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: today,\n            status: 0 // Brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        if (newOrder.id) {\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la création de la commande brouillon\", newOrder);\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur dans getOrCreateDraftOrder :\", error);\n        return null;\n      }\n    },\n\n    async addProductToDolibarrCart(product, orderId) {\n      try {\n        const apiKey = localStorage.getItem('apiKey');\n        const apiLink = localStorage.getItem('apiLink');\n        if (!apiLink) {\n          throw new Error('API Link manquant');\n        }\n        if (!apiKey) {\n          throw new Error('API Key manquante');\n        }\n\n        // Créer l'objet de données à envoyer (vérifie que les noms de champs correspondent à ce qui est attendu par Dolibarr)\n        const orderLine = {\n          fk_product: product.id,  // ID produit côté Dolibarr\n          qty: product.quantity,   // Quantité\n          subprice: product.price  // Prix HT (peut être \"price\" ou \"subprice\" selon l'API)\n        };\n\n        const response = await fetch(`${apiLink}/orders/${orderId}/lines`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'DOLAPIKEY': apiKey,\n            \n          },\n          \n          body: JSON.stringify(orderLine),\n        });\n\n        if (response.ok) {\n          console.log('Produit ajouté à la commande Dolibarr');\n        } else {\n          const errorData = await response.json();\n          console.error('Erreur lors de l\\'ajout du produit à la commande Dolibarr', errorData);\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit à Dolibarr:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Optionnel : modifications spécifiques à la page Shop */\n.shop-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n.section-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  margin-left: 115px;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n/* Section globale */\n.products-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n/* Titre */\n.section-title {\n  font-size: 56px;\n  margin-left: 115px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  text-align: left;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n/* Conteneur des cartes */\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* 3 produits par ligne */\n  gap: 50px;\n  max-width: 75%; /* Ajuste à la largeur du parent */\n  overflow-x: hidden; /* Empêche le scroll horizontal */\n  overflow-y: auto; /* Défilement vertical */\n  padding-bottom: 10px;\n  margin-left: 25%;\n  height: 100vh; /* Ajuste la hauteur pour voir le scroll vertical */\n}\n\n/* Style des cartes */\n.product-card {\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, color 0.3s ease;\n  text-align: left;\n  width: 100%;\n  height: 499px;\n  flex-shrink: 0; \n  flex-grow: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  color: #5AAAD8;\n}\n\n/* Image */\n.product-image {\n  width: 221px;\n  height: auto;\n  border-radius: 8px;\n  margin-left: 100px;\n}\n\n/* Nom du produit */\n.product-name {\n  font-size: 1.5em;\n  margin: 10px 0;\n  font-family: 'DAWBE';\n  color: #1E1E1E;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 0;\n}\n\n/* Description */\n.product-description {\n  margin-top: 0;\n  font-size: 1em;\n  color: #1E1E1E;\n  font-family: 'PP Formula', sans-serif;\n  margin-bottom: 10px;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n}\n\n/* Bouton */\n.product-button {\n  padding: 10px 15px;\n  border: none;\n  background-color: #0E100E;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  font-family: 'PP Formula', sans-serif;\n  margin-top: auto;\n  align-self: flex-end;\n}\n\n.product-card:hover .product-name,\n.product-card:hover .product-description {\n  color: #5AAAD8;\n}\n\n.product-button:hover {\n  background-color: #5AAAD8;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}