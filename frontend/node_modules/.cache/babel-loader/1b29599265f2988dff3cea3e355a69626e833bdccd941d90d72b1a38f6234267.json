{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport NavBar from '@/components/NavBar.vue';\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink')\n    };\n  },\n  created() {\n    this.fetchProductsFromDolibarr();\n    this.initCart();\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        console.log('Tentative de récupération des produits depuis Dolibarr...');\n        if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n        const url = `${this.apiLink}/products`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const products = await response.json();\n        this.products = products.map(product => {\n          const tvaRate = product.tva_tx / 100;\n          const priceTtc = product.price * (1 + tvaRate);\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.fk_photo ? `${this.apiLink}/product/photos/${product.fk_photo}` : null,\n            price_ht: product.price,\n            price_ttc: priceTtc.toFixed(2),\n            tva_tx: product.tva_tx,\n            label: product.label,\n            ref: product.ref,\n            weight: product.weight,\n            width: product.width,\n            length: product.length,\n            height: product.height\n          };\n        });\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\" + searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n    },\n    async createDraftOrder(clientId) {\n      const payload = {\n        socid: clientId,\n        date: new Date().toISOString().split('T')[0],\n        status: 0,\n        lines: []\n      };\n      const response = await fetch(`${this.apiLink}/orders`, {\n        method: 'POST',\n        headers: {\n          \"DOLAPIKEY\": this.apiKey,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const message = await response.text();\n        throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n      }\n      const newOrder = await response.json();\n      console.log(\"Commande brouillon créée:\", newOrder);\n      return newOrder.id;\n    },\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n    formatPrice(price) {\n      return `${price} MGA`;\n    },\n    async addToCart(product) {\n      this.initCart();\n      console.log('Tentative d\\'ajout au panier pour le produit:', product);\n      const isLoggedIn = localStorage.getItem('authToken');\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({\n          name: 'login'\n        });\n        return;\n      }\n      if (!this.cartId) {\n        alert(\"Erreur : panier non initialisé\");\n        return;\n      }\n      const itemData = {\n        fk_product: product.id,\n        qty: 1,\n        subprice: product.price_ht,\n        tva_tx: product.tva_tx,\n        label: product.label,\n        product_desc: product.description || \"\",\n        product_ref: product.ref,\n        price: product.price_ht,\n        product_tobuy: 1,\n        product_tosell: 1,\n        weight: product.weight || 0,\n        width: product.width || 0,\n        length: product.length || 0,\n        height: product.height || 0,\n        localtax1_tx: \"0.0000\",\n        localtax2_tx: \"0.0000\",\n        total_ht: product.price_ht,\n        total_ttc: (product.price_ht * (1 + product.tva_tx / 100)).toFixed(2)\n      };\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          this.fetchCartItems(this.cartId);\n        } else {\n          console.error(\"Erreur lors de l’ajout au panier :\", await response.text());\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","name","components","data","products","cartItems","cartId","apiKey","localStorage","getItem","apiLink","created","fetchProductsFromDolibarr","initCart","methods","console","log","Error","url","response","fetch","headers","ok","statusText","json","map","product","tvaRate","tva_tx","priceTtc","price","id","label","description","image","fk_photo","price_ht","price_ttc","toFixed","ref","weight","width","length","height","error","clientId","searchUrl","orders","Array","isArray","fetchCartItems","newOrderId","createDraftOrder","payload","socid","date","Date","toISOString","split","status","lines","method","body","JSON","stringify","message","text","newOrder","formatPrice","addToCart","isLoggedIn","alert","$router","push","itemData","fk_product","qty","subprice","product_desc","product_ref","product_tobuy","product_tosell","localtax1_tx","localtax2_tx","total_ht","total_ttc"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/ShopPage.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <section class=\"shop-section\">\n    <h2 class=\"section-title\">NOS</h2>\n    <h2 class=\"section-title\">PRODUITS</h2>\n\n    <div class=\"cards-container\">\n      <div \n        v-for=\"(product, index) in products\" \n        :key=\"index\" \n        class=\"product-card\"\n      >\n        <img :src=\"product.image || require('@/assets/item/default-product.png')\" :alt=\"product.name\" class=\"product-image\" />\n        <h3 class=\"product-name\">{{ product.name }}</h3>\n        <p class=\"product-description\">{{ product.description }}</p>\n        <p class=\"product-price\">{{ formatPrice(product.price_ttc) }}</p>\n        <button class=\"product-button\" @click=\"addToCart(product)\">Ajouter au panier</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport NavBar from '@/components/NavBar.vue';\n\nexport default {\n  name: 'ShopPage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      products: [],\n      cartItems: [],\n      cartId: null,\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink'),\n    };\n  },\n  created() {\n    this.fetchProductsFromDolibarr();\n    this.initCart();\n  },\n  methods: {\n    async fetchProductsFromDolibarr() {\n      try {\n        console.log('Tentative de récupération des produits depuis Dolibarr...');\n        if (!this.apiKey || !this.apiLink) throw new Error(\"API Key ou API Link manquant\");\n\n        const url = `${this.apiLink}/products`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const products = await response.json();\n\n        this.products = products.map(product => {\n          const tvaRate = product.tva_tx / 100;\n          const priceTtc = product.price * (1 + tvaRate);\n\n          return {\n            id: product.id,\n            name: product.label,\n            description: product.description || 'Aucune description disponible.',\n            image: product.fk_photo ? `${this.apiLink}/product/photos/${product.fk_photo}` : null,\n            price_ht: product.price,\n            price_ttc: priceTtc.toFixed(2),\n            tva_tx: product.tva_tx,\n            label: product.label,\n            ref: product.ref,\n            weight: product.weight,\n            width: product.width,\n            length: product.length,\n            height: product.height,\n          };\n        });\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des produits:\", error);\n      }\n    },\n\n    async initCart() {\n      try {\n        const clientId = localStorage.getItem('clientId');\n        if (!clientId || !this.apiKey || !this.apiLink) throw new Error(\"Données manquantes (ClientId, API Key ou API Link)\");\n\n        const searchUrl = `${this.apiLink}/orders?sqlfilters=(fk_statut:=:0)and(fk_soc:=:${clientId})`;\n        console.log(\"Lien url commande:\"+searchUrl);\n        const response = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const orders = await response.json();\n        console.log(\"Commandes brouillon récupérées:\", orders);\n\n        if (Array.isArray(orders) && orders.length > 0) {\n          const cartId = orders[0].id;\n          this.cartId = cartId;\n          this.fetchCartItems(cartId);\n        } else {\n          console.log(\"Aucune commande brouillon trouvée. Création d'une nouvelle...\");\n          const newOrderId = await this.createDraftOrder(clientId);\n          this.cartId = newOrderId;\n          this.cartItems = [];\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'initialisation du panier:\", error);\n      }\n      \n    },\n\n    async createDraftOrder(clientId) {\n      const payload = {\n        socid: clientId,\n        date: new Date().toISOString().split('T')[0],\n        status: 0,\n        lines: []\n      };\n\n      const response = await fetch(`${this.apiLink}/orders`, {\n        method: 'POST',\n        headers: {\n          \"DOLAPIKEY\": this.apiKey,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        const message = await response.text();\n        throw new Error(`Erreur lors de la création de la commande brouillon: ${message}`);\n      }\n\n      const newOrder = await response.json();\n      console.log(\"Commande brouillon créée:\", newOrder);\n      return newOrder.id;\n    },\n\n    async fetchCartItems(cartId) {\n      try {\n        console.log(`Récupération des articles pour le panier ID: ${cartId}...`);\n        const url = `${this.apiLink}/orders/${cartId}/lines`;\n        const response = await fetch(url, {\n          headers: {\n            \"DOLAPIKEY\": this.apiKey\n          }\n        });\n\n        if (!response.ok) throw new Error(`Erreur réseau: ${response.statusText}`);\n        const cartItems = await response.json();\n        this.cartItems = cartItems;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier:\", error);\n      }\n    },\n\n    formatPrice(price) {\n      return `${price} MGA`;\n    },\n\n    async addToCart(product) {\n      this.initCart();\n      console.log('Tentative d\\'ajout au panier pour le produit:', product);\n      const isLoggedIn = localStorage.getItem('authToken');\n      if (!isLoggedIn) {\n        alert('Vous devez être connecté pour ajouter des produits au panier.');\n        this.$router.push({ name: 'login' });\n        return;\n      }\n\n      if (!this.cartId) {\n        alert(\"Erreur : panier non initialisé\");\n        return;\n      }\n\n      const itemData = {\n        fk_product: product.id,\n        qty: 1,\n        subprice: product.price_ht,\n        tva_tx: product.tva_tx,\n        label: product.label,\n        product_desc: product.description || \"\",\n        product_ref: product.ref,\n        price: product.price_ht,\n        product_tobuy: 1,\n        product_tosell: 1,\n        weight: product.weight || 0,\n        width: product.width || 0,\n        length: product.length || 0,\n        height: product.height || 0,\n        localtax1_tx: \"0.0000\",\n        localtax2_tx: \"0.0000\",\n        total_ht: product.price_ht,\n        total_ttc: (product.price_ht * (1 + product.tva_tx / 100)).toFixed(2),\n      };\n\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          method: 'POST',\n          headers: {\n            \"DOLAPIKEY\": this.apiKey,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(itemData)\n        });\n\n        if (response.ok) {\n          console.log('Ajout au panier réussi');\n          this.fetchCartItems(this.cartId);\n        } else {\n          console.error(\"Erreur lors de l’ajout au panier :\", await response.text());\n        }\n      } catch (error) {\n        console.error(\"Erreur fetch (addToCart):\", error);\n      }\n    },\n  }\n};\n</script>\n\n\n<style scoped>\n/* Optionnel : modifications spécifiques à la page Shop */\n.shop-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n.section-title {\n  font-size: 56px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  margin-left: 115px;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n@font-face {\n  font-family: 'PP Formula';\n  src: url('@/assets/fonts/PPFormula-NarrowRegular.otf') format('opentype');\n  font-weight: medium;\n}\n\n@font-face {\n  font-family: 'DAWBE';\n  src: url('@/assets/fonts/dawbe.otf') format('opentype');\n  font-weight: bold;\n}\n\n/* Section globale */\n.products-section {\n  text-align: left;\n  padding: 40px 20px;\n}\n\n/* Titre */\n.section-title {\n  font-size: 56px;\n  margin-left: 115px;\n  font-family: 'DAWBE';\n  color: #F7F7F7;\n  text-align: left;\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n/* Conteneur des cartes */\n.cards-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); /* 3 produits par ligne */\n  gap: 50px;\n  max-width: 75%; /* Ajuste à la largeur du parent */\n  overflow-x: hidden; /* Empêche le scroll horizontal */\n  overflow-y: auto; /* Défilement vertical */\n  padding-bottom: 10px;\n  margin-left: 25%;\n  height: 100vh; /* Ajuste la hauteur pour voir le scroll vertical */\n}\n\n/* Style des cartes */\n.product-card {\n  background-color: white;\n  padding: 15px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, color 0.3s ease;\n  text-align: left;\n  width: 100%;\n  height: 499px;\n  flex-shrink: 0; \n  flex-grow: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-card:hover {\n  transform: scale(1.05);\n  color: #5AAAD8;\n}\n\n/* Image */\n.product-image {\n  width: 221px;\n  height: auto;\n  border-radius: 8px;\n  margin-left: 100px;\n}\n\n/* Nom du produit */\n.product-name {\n  font-size: 1.5em;\n  margin: 10px 0;\n  font-family: 'DAWBE';\n  color: #1E1E1E;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n  margin-bottom: 0;\n}\n\n/* Description */\n.product-description {\n  margin-top: 0;\n  font-size: 1em;\n  color: #1E1E1E;\n  font-family: 'PP Formula', sans-serif;\n  margin-bottom: 10px;\n  max-width: 250px;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  white-space: normal;\n}\n\n/* Bouton */\n.product-button {\n  padding: 10px 15px;\n  border: none;\n  background-color: #0E100E;\n  color: white;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n  font-family: 'PP Formula', sans-serif;\n  margin-top: auto;\n  align-self: flex-end;\n}\n\n.product-card:hover .product-name,\n.product-card:hover .product-description {\n  color: #5AAAD8;\n}\n\n.product-button:hover {\n  background-color: #5AAAD8;\n}\n.product-price {\n  font-size: 1.2em;\n  color: #1E1E1E;\n  margin-top: 10px;\n  font-family: 'PP Formula', sans-serif;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}