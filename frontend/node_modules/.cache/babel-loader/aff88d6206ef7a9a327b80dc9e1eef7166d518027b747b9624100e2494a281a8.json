{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      // Le panier commence vide\n      cartItems: [],\n      totalPrice: 0\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    validateOrder() {\n      alert(\"Commande valid√©e !\");\n    },\n    async getOrCreateDraftOrder() {\n      const clientId = localStorage.getItem(\"clientId\");\n      const apiKey = localStorage.getItem(\"apiKey\");\n      if (!clientId || !apiKey) {\n        console.error(\"Client ID ou API Key manquant !\");\n        return;\n      }\n      let orderId = localStorage.getItem(\"orderId\");\n      if (orderId) {\n        console.log(\"Commande brouillon d√©j√† stock√©e :\", orderId);\n        return orderId;\n      }\n      try {\n        // 1. V√©rifier s'il existe une commande brouillon\n        const searchUrl = `https://votre-url-dolibarr/api/index.php/orders?fk_soc=${clientId}&status=0`;\n        const res = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey\n          }\n        });\n        const existingOrders = await res.json();\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          localStorage.setItem(\"orderId\", existingOrderId);\n          console.log(\"Commande existante trouv√©e :\", existingOrderId);\n          return existingOrderId;\n        }\n\n        // 2. Sinon, cr√©er une nouvelle commande\n        const createRes = await fetch(`https://votre-url-dolibarr/api/index.php/orders`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: new Date().toISOString().split(\"T\")[0],\n            status: 0 // brouillon\n          })\n        });\n        const newOrder = await createRes.json();\n        if (newOrder.id) {\n          localStorage.setItem(\"orderId\", newOrder.id);\n          console.log(\"Nouvelle commande cr√©√©e :\", newOrder.id);\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la cr√©ation de la commande\");\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la r√©cup√©ration/cr√©ation de la commande :\", error);\n      }\n    }\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.updateTotal();\n    this.getOrCreateDraftOrder(); // üìå C‚Äôest ici qu‚Äôon lance la r√©cup√©ration\n  }\n};","map":{"version":3,"names":["name","data","cartItems","totalPrice","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","updateTotal","reduce","sum","product","price","quantity","validateOrder","alert","getOrCreateDraftOrder","clientId","localStorage","getItem","apiKey","console","error","orderId","log","searchUrl","res","fetch","headers","existingOrders","json","Array","isArray","length","existingOrderId","id","setItem","createRes","method","body","JSON","stringify","socid","date","Date","toISOString","split","status","newOrder","watch","handler","deep","mounted"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"cart-page\">\n    <h1>Votre Panier</h1>\n\n    <!-- Affichage des produits dans le panier, si le panier n'est pas vide -->\n    <div class=\"cart-items\" v-if=\"cartItems.length\">\n      <div v-for=\"(product, index) in cartItems\" :key=\"index\" class=\"cart-item\">\n        <div class=\"cart-item-info\">\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"cart-item-image\" />\n          <div class=\"cart-item-details\">\n            <h3 class=\"cart-item-name\">{{ product.name }}</h3>\n            <p class=\"cart-item-description\">{{ product.description }}</p>\n          </div>\n        </div>\n        \n        <div class=\"cart-item-quantity\">\n          <input\n            type=\"number\"\n            v-model.number=\"product.quantity\"\n            min=\"1\"\n            @change=\"updateTotal()\"\n            class=\"quantity-input\"\n          />\n        </div>\n\n        <div class=\"cart-item-price\">\n          <span class=\"product-unit-price\">{{ formatCurrency(product.price) }}</span>\n          <span class=\"product-total-price\">{{ formatCurrency(product.price * product.quantity) }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Message si le panier est vide -->\n    <p v-else class=\"empty-message\">Votre panier est vide.</p>\n\n    <!-- R√©sum√© du panier et bouton de commande -->\n    <div class=\"cart-summary\" v-if=\"cartItems.length\">\n      <div class=\"total\">\n        <p>Total : <span>{{ formatCurrency(totalPrice) }}</span></p>\n      </div>\n      <button class=\"checkout-button\" @click=\"validateOrder\">\n        Valider la commande\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      // Le panier commence vide\n      cartItems: [],\n      totalPrice: 0,\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    validateOrder() {\n      alert(\"Commande valid√©e !\");\n    },\n\n    async getOrCreateDraftOrder() {\n      const clientId = localStorage.getItem(\"clientId\");\n      const apiKey = localStorage.getItem(\"apiKey\");\n      \n\n      if (!clientId || !apiKey) {\n        console.error(\"Client ID ou API Key manquant !\");\n        return;\n      }\n\n      let orderId = localStorage.getItem(\"orderId\");\n      if (orderId) {\n        console.log(\"Commande brouillon d√©j√† stock√©e :\", orderId);\n        return orderId;\n      }\n\n      try {\n        // 1. V√©rifier s'il existe une commande brouillon\n        const searchUrl = `https://votre-url-dolibarr/api/index.php/orders?fk_soc=${clientId}&status=0`;\n        const res = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n\n        const existingOrders = await res.json();\n\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          localStorage.setItem(\"orderId\", existingOrderId);\n          console.log(\"Commande existante trouv√©e :\", existingOrderId);\n          return existingOrderId;\n        }\n\n        // 2. Sinon, cr√©er une nouvelle commande\n        const createRes = await fetch(`https://votre-url-dolibarr/api/index.php/orders`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: new Date().toISOString().split(\"T\")[0],\n            status: 0, // brouillon\n          }),\n        });\n\n        const newOrder = await createRes.json();\n\n        if (newOrder.id) {\n          localStorage.setItem(\"orderId\", newOrder.id);\n          console.log(\"Nouvelle commande cr√©√©e :\", newOrder.id);\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la cr√©ation de la commande\");\n        }\n\n      } catch (error) {\n        console.error(\"Erreur lors de la r√©cup√©ration/cr√©ation de la commande :\", error);\n      }\n    }\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.updateTotal();\n    this.getOrCreateDraftOrder(); // üìå C‚Äôest ici qu‚Äôon lance la r√©cup√©ration\n  },\n};\n</script>\n\n<style scoped>\n/* Conteneur de la page du panier */\n.cart-page {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Titre */\nh1 {\n  font-size: 32px;\n  color: #0e100e;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n/* Liste des produits dans le panier */\n.cart-items {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n/* Chaque produit du panier */\n.cart-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  background-color: #f7f7f7;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* D√©tails du produit */\n.cart-item-info {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n/* Image du produit */\n.cart-item-image {\n  width: 80px;\n  height: auto;\n  border-radius: 5px;\n}\n\n/* Nom et description du produit */\n.cart-item-details {\n  max-width: 400px;\n}\n\n/* Quantit√© */\n.cart-item-quantity input {\n  width: 50px;\n  padding: 5px;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* Prix unitaire et prix total */\n.cart-item-price {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.product-unit-price,\n.product-total-price {\n  font-size: 18px;\n  color: #0e100e;\n}\n\n.product-total-price {\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n/* R√©sum√© du panier et bouton de commande */\n.cart-summary {\n  margin-top: 30px;\n  text-align: right;\n}\n\n.total {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.checkout-button {\n  padding: 10px 30px;\n  background-color: #5aaad8;\n  color: white;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.checkout-button:hover {\n  background-color: #0e100e;\n}\n\n/* Message quand le panier est vide */\n.empty-message {\n  text-align: center;\n  font-size: 20px;\n  color: #888;\n  margin-top: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}