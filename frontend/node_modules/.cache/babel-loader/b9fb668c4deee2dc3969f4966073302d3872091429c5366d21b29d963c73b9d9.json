{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [{\n        name: \"Produit 1\",\n        description: \"Description du produit 1\",\n        image: \"@/assets/product1.jpg\",\n        price: 29.99,\n        quantity: 1\n      }, {\n        name: \"Produit 2\",\n        description: \"Description du produit 2\",\n        image: \"@/assets/product2.jpg\",\n        price: 49.99,\n        quantity: 2\n      }\n      // D'autres produits peuvent être ajoutés ici\n      ],\n      totalPrice: 0\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    validateOrder() {\n      // Logique pour valider la commande (redirection, appel API, etc.)\n      alert(\"Commande validée !\");\n    }\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.updateTotal();\n  }\n};","map":{"version":3,"names":["name","data","cartItems","description","image","price","quantity","totalPrice","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","updateTotal","reduce","sum","product","validateOrder","alert","watch","handler","deep","mounted"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"cart-page\">\n    <h1>Votre Panier</h1>\n\n    <div class=\"cart-items\">\n      <div v-for=\"(product, index) in cartItems\" :key=\"index\" class=\"cart-item\">\n        <div class=\"cart-item-info\">\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"cart-item-image\" />\n          <div class=\"cart-item-details\">\n            <h3 class=\"cart-item-name\">{{ product.name }}</h3>\n            <p class=\"cart-item-description\">{{ product.description }}</p>\n          </div>\n        </div>\n        \n        <div class=\"cart-item-quantity\">\n          <input\n            type=\"number\"\n            v-model.number=\"product.quantity\"\n            min=\"1\"\n            @change=\"updateTotal()\"\n            class=\"quantity-input\"\n          />\n        </div>\n\n        <div class=\"cart-item-price\">\n          <span class=\"product-unit-price\">{{ formatCurrency(product.price) }}</span>\n          <span class=\"product-total-price\">{{ formatCurrency(product.price * product.quantity) }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"cart-summary\">\n      <div class=\"total\">\n        <p>Total : <span>{{ formatCurrency(totalPrice) }}</span></p>\n      </div>\n      <button class=\"checkout-button\" @click=\"validateOrder\">\n        Valider la commande\n      </button>\n    </div>\n  </div>\n</template>\n  \n  <script>\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [\n        {\n          name: \"Produit 1\",\n          description: \"Description du produit 1\",\n          image: \"@/assets/product1.jpg\",\n          price: 29.99,\n          quantity: 1,\n        },\n        {\n          name: \"Produit 2\",\n          description: \"Description du produit 2\",\n          image: \"@/assets/product2.jpg\",\n          price: 49.99,\n          quantity: 2,\n        },\n        // D'autres produits peuvent être ajoutés ici\n      ],\n      totalPrice: 0,\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat('fr-FR', {\n        style: 'currency',\n        currency: 'EUR',\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    validateOrder() {\n      // Logique pour valider la commande (redirection, appel API, etc.)\n      alert(\"Commande validée !\");\n    },\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.updateTotal();\n  },\n};\n</script>\n\n  <style scoped>\n  /* Conteneur de la page du panier */\n  .cart-page {\n    padding: 20px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  /* Titre */\n  h1 {\n    font-size: 32px;\n    color: #0e100e;\n    text-align: center;\n    margin-bottom: 30px;\n  }\n  \n  /* Liste des produits dans le panier */\n  .cart-items {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n  }\n  \n  /* Chaque produit du panier */\n  .cart-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px;\n    background-color: #f7f7f7;\n    border-radius: 10px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  }\n  \n  /* Détails du produit */\n  .cart-item-info {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n  }\n  \n  /* Image du produit */\n  .cart-item-image {\n    width: 80px;\n    height: auto;\n    border-radius: 5px;\n  }\n  \n  /* Nom et description du produit */\n  .cart-item-details {\n    max-width: 400px;\n  }\n  \n  /* Quantité */\n  .cart-item-quantity input {\n    width: 50px;\n    padding: 5px;\n    font-size: 16px;\n    text-align: center;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n  }\n  \n  /* Prix unitaire et prix total */\n  .cart-item-price {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n  \n  .product-unit-price,\n  .product-total-price {\n    font-size: 18px;\n    color: #0e100e;\n  }\n  \n  .product-total-price {\n    font-weight: bold;\n    margin-top: 10px;\n  }\n  \n  /* Résumé du panier et bouton de commande */\n  .cart-summary {\n    margin-top: 30px;\n    text-align: right;\n  }\n  \n  .total {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 20px;\n  }\n  \n  .checkout-button {\n    padding: 10px 30px;\n    background-color: #5aaad8;\n    color: white;\n    font-size: 18px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n  }\n  \n  .checkout-button:hover {\n    background-color: #0e100e;\n  }\n  </style>\n  "],"mappings":";;AA2CA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CACT;QACEF,IAAI,EAAE,WAAW;QACjBG,WAAW,EAAE,0BAA0B;QACvCC,KAAK,EAAE,uBAAuB;QAC9BC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEN,IAAI,EAAE,WAAW;QACjBG,WAAW,EAAE,0BAA0B;QACvCC,KAAK,EAAE,uBAAuB;QAC9BC,KAAK,EAAE,KAAK;QACZC,QAAQ,EAAE;MACZ;MACA;MAAA,CACD;MACDC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;QACpCC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;IAClB,CAAC;IACDM,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACT,UAAS,GAAI,IAAI,CAACL,SAAS,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACxD,OAAOD,GAAE,GAAIC,OAAO,CAACd,KAAI,GAAIc,OAAO,CAACb,QAAQ;MAC/C,CAAC,EAAE,CAAC,CAAC;IACP,CAAC;IACDc,aAAaA,CAAA,EAAG;MACd;MACAC,KAAK,CAAC,oBAAoB,CAAC;IAC7B;EACF,CAAC;EACDC,KAAK,EAAE;IACLpB,SAAS,EAAE;MACTqB,OAAOA,CAAA,EAAG;QACR,IAAI,CAACP,WAAW,CAAC,CAAC;MACpB,CAAC;MACDQ,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}