{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  name: \"MesCommandes\",\n  data() {\n    return {\n      orders: [],\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\")\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      const clientId = localStorage.getItem(\"clientId\");\n      try {\n        if (!this.apiKey || !this.apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n        const url = `${this.apiLink}/orders?sqlfilters=(fk_soc:=:${clientId})`;\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            DOLAPIKEY: this.apiKey\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n        const rawOrders = await response.json();\n\n        // Pour chaque commande, récupérer son statut de paiement et le lien vers la facture\n        const ordersWithExtras = await Promise.all(rawOrders.map(async order => {\n          const invoiceData = await this.getInvoiceData(order.id);\n          return {\n            ...order,\n            isPaid: invoiceData.isPaid,\n            invoiceUrl: invoiceData.invoiceUrl\n          };\n        }));\n        this.orders = ordersWithExtras;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des commandes:\", error);\n      }\n    },\n    async getInvoiceData(orderId) {\n      try {\n        const url = `${this.apiLink}/invoices?sqlfilters=(fk_commande:=:${orderId})`;\n        console;\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            DOLAPIKEY: this.apiKey\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la récupération des factures pour la commande ${orderId}`);\n        }\n        const invoices = await response.json();\n        if (!invoices.length) {\n          return {\n            isPaid: false,\n            invoiceUrl: null\n          };\n        }\n        const firstInvoice = invoices[0];\n        const isPaid = invoices.some(inv => inv.paye === \"1\" || inv.paye === 1);\n        const invoiceUrl = `${this.apiLink}/documents/facture/${firstInvoice.id}/pdf`;\n        return {\n          isPaid,\n          invoiceUrl\n        };\n      } catch (error) {\n        console.error(\"Erreur facture commande\", orderId, error);\n        return {\n          isPaid: false,\n          invoiceUrl: null\n        };\n      }\n    },\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    formatDate(timestamp) {\n      if (!timestamp) return \"Inconnue\";\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n    getStatusText(order) {\n      switch (order.status) {\n        case \"0\":\n          return \"Commande créée\";\n        case \"1\":\n          return order.billed && (order.billed === true || order.billed === \"1\") ? \"Validé-Facturé\" : \"Validé\";\n        case \"2\":\n          return \"Facturée\";\n        case \"3\":\n          return \"Livrée\";\n        case \"4\":\n          return \"Traitée\";\n        case \"-1\":\n          return \"Annulée\";\n        default:\n          return \"Statut inconnu\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","orders","apiKey","localStorage","getItem","apiLink","clientId","created","fetchOrders","methods","Error","url","response","fetch","method","headers","DOLAPIKEY","ok","status","rawOrders","json","ordersWithExtras","Promise","all","map","order","invoiceData","getInvoiceData","id","isPaid","invoiceUrl","error","console","orderId","invoices","length","firstInvoice","some","inv","paye","formatCurrency","value","Intl","NumberFormat","style","currency","format","formatDate","timestamp","date","Date","toLocaleDateString","getStatusText","billed"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/OrdersPage.vue"],"sourcesContent":["<template>\n  <div class=\"orders-page\">\n    <h1>Mes Commandes</h1>\n    <table v-if=\"orders.length\">\n      <thead>\n        <tr>\n          <th>Référence</th>\n          <th>Date</th>\n          <th>Total TTC</th>\n          <th>Statut</th>\n          <th>Payée</th>\n          <th>Facture</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order.id\">\n          <td>{{ order.ref || order.id }}</td>\n          <td>{{ formatDate(order.date_creation) }}</td>\n          <td>{{ formatCurrency(order.total_ttc) }}</td>\n          <td>{{ getStatusText(order) }}</td>\n          <td>{{ order.isPaid ? 'Oui' : 'Non' }}</td>\n          <td>\n            <a\n              v-if=\"order.invoiceUrl\"\n              :href=\"order.invoiceUrl\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Voir la facture\n            </a>\n            <span v-else>Aucune</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>Aucune commande trouvée.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MesCommandes\",\n  data() {\n    return {\n      orders: [],\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\"),\n    };\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      const clientId = localStorage.getItem(\"clientId\");\n      try {\n        if (!this.apiKey || !this.apiLink || !clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        const url = `${this.apiLink}/orders?sqlfilters=(fk_soc:=:${clientId})`;\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            DOLAPIKEY: this.apiKey,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n\n        const rawOrders = await response.json();\n\n        // Pour chaque commande, récupérer son statut de paiement et le lien vers la facture\n        const ordersWithExtras = await Promise.all(\n          rawOrders.map(async (order) => {\n            const invoiceData = await this.getInvoiceData(order.id);\n            return {\n              ...order,\n              isPaid: invoiceData.isPaid,\n              invoiceUrl: invoiceData.invoiceUrl,\n            };\n          })\n        );\n\n        this.orders = ordersWithExtras;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des commandes:\", error);\n      }\n    },\n\n    async getInvoiceData(orderId) {\n      try {\n        const url = `${this.apiLink}/invoices?sqlfilters=(fk_commande:=:${orderId})`;\n        console\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            DOLAPIKEY: this.apiKey,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la récupération des factures pour la commande ${orderId}`);\n        }\n\n        const invoices = await response.json();\n\n        if (!invoices.length) {\n          return { isPaid: false, invoiceUrl: null };\n        }\n\n        const firstInvoice = invoices[0];\n        const isPaid = invoices.some((inv) => inv.paye === \"1\" || inv.paye === 1);\n        const invoiceUrl = `${this.apiLink}/documents/facture/${firstInvoice.id}/pdf`;\n\n        return { isPaid, invoiceUrl };\n      } catch (error) {\n        console.error(\"Erreur facture commande\", orderId, error);\n        return { isPaid: false, invoiceUrl: null };\n      }\n    },\n\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n\n    formatDate(timestamp) {\n      if (!timestamp) return \"Inconnue\";\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n\n    getStatusText(order) {\n      switch (order.status) {\n        case \"0\":\n          return \"Commande créée\";\n        case \"1\":\n          return order.billed && (order.billed === true || order.billed === \"1\")\n            ? \"Validé-Facturé\"\n            : \"Validé\";\n        case \"2\":\n          return \"Facturée\";\n        case \"3\":\n          return \"Livrée\";\n        case \"4\":\n          return \"Traitée\";\n        case \"-1\":\n          return \"Annulée\";\n        default:\n          return \"Statut inconnu\";\n      }\n    },\n  },\n};\n</script>\n  \n  <style scoped>\n  .orders-page {\n    padding: 40px 20px;\n    background-color: #0e100e;\n    color: #f7f7f7;\n    font-family: 'PP Formula', sans-serif;\n  }\n  \n  h1 {\n    font-family: 'DAWBE';\n    font-size: 48px;\n    margin-bottom: 30px;\n    text-align: center;\n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    color: #1e1e1e;\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  th, td {\n    padding: 12px 15px;\n    border: 1px solid #ddd;\n  }\n  \n  th {\n    background-color: #5aaad8;\n    color: white;\n    text-align: left;\n  }\n  \n  tbody tr:nth-child(even) {\n    background-color: #f3f3f3;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}