{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cart-page\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"cart-items\"\n};\nconst _hoisted_3 = {\n  class: \"cart-item-info\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"cart-item-details\"\n};\nconst _hoisted_6 = {\n  class: \"cart-item-name\"\n};\nconst _hoisted_7 = {\n  class: \"cart-item-description\"\n};\nconst _hoisted_8 = {\n  class: \"cart-item-quantity\"\n};\nconst _hoisted_9 = [\"onUpdate:modelValue\"];\nconst _hoisted_10 = {\n  class: \"cart-item-price\"\n};\nconst _hoisted_11 = {\n  class: \"product-unit-price\"\n};\nconst _hoisted_12 = {\n  class: \"product-total-price\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  class: \"cart-summary\"\n};\nconst _hoisted_14 = {\n  class: \"total\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Votre Panier\", -1 /* HOISTED */)), _createCommentVNode(\" Affichage des produits dans le panier, si le panier n'est pas vide \"), $data.cartItems.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cartItems, (product, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"cart-item\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      src: product.image,\n      alt: \"Product Image\",\n      class: \"cart-item-image\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", _hoisted_6, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_7, _toDisplayString(product.description), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => product.quantity = $event,\n      min: \"1\",\n      onChange: _cache[0] || (_cache[0] = $event => $options.updateTotal()),\n      class: \"quantity-input\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9), [[_vModelText, product.quantity, void 0, {\n      number: true\n    }]])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString($options.formatCurrency(product.price)), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($options.formatCurrency(product.price * product.quantity)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Message si le panier est vide \"), _cache[2] || (_cache[2] = _createElementVNode(\"p\", {\n    class: \"empty-message\"\n  }, \"Votre panier est vide.\", -1 /* HOISTED */))], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" R√©sum√© du panier et bouton de commande \"), $data.cartItems.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createTextVNode(\"Total : \")), _createElementVNode(\"span\", null, _toDisplayString($options.formatCurrency($data.totalPrice)), 1 /* TEXT */)])]), _createElementVNode(\"button\", {\n    class: \"checkout-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.validateOrder && $options.validateOrder(...args))\n  }, \" Valider la commande \")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","cartItems","length","_hoisted_2","_Fragment","_renderList","product","index","_hoisted_3","src","image","alt","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","name","_hoisted_7","description","_hoisted_8","type","$event","quantity","min","onChange","_cache","$options","updateTotal","_hoisted_9","number","_hoisted_10","_hoisted_11","formatCurrency","price","_hoisted_12","_hoisted_13","_hoisted_14","_createTextVNode","totalPrice","onClick","args","validateOrder"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"cart-page\">\n    <h1>Votre Panier</h1>\n\n    <!-- Affichage des produits dans le panier, si le panier n'est pas vide -->\n    <div class=\"cart-items\" v-if=\"cartItems.length\">\n      <div v-for=\"(product, index) in cartItems\" :key=\"index\" class=\"cart-item\">\n        <div class=\"cart-item-info\">\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"cart-item-image\" />\n          <div class=\"cart-item-details\">\n            <h3 class=\"cart-item-name\">{{ product.name }}</h3>\n            <p class=\"cart-item-description\">{{ product.description }}</p>\n          </div>\n        </div>\n        \n        <div class=\"cart-item-quantity\">\n          <input\n            type=\"number\"\n            v-model.number=\"product.quantity\"\n            min=\"1\"\n            @change=\"updateTotal()\"\n            class=\"quantity-input\"\n          />\n        </div>\n\n        <div class=\"cart-item-price\">\n          <span class=\"product-unit-price\">{{ formatCurrency(product.price) }}</span>\n          <span class=\"product-total-price\">{{ formatCurrency(product.price * product.quantity) }}</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Message si le panier est vide -->\n    <p v-else class=\"empty-message\">Votre panier est vide.</p>\n\n    <!-- R√©sum√© du panier et bouton de commande -->\n    <div class=\"cart-summary\" v-if=\"cartItems.length\">\n      <div class=\"total\">\n        <p>Total : <span>{{ formatCurrency(totalPrice) }}</span></p>\n      </div>\n      <button class=\"checkout-button\" @click=\"validateOrder\">\n        Valider la commande\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      // Le panier commence vide\n      cartItems: [],\n      totalPrice: 0,\n    };\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    updateTotal() {\n      this.totalPrice = this.cartItems.reduce((sum, product) => {\n        return sum + product.price * product.quantity;\n      }, 0);\n    },\n    validateOrder() {\n      alert(\"Commande valid√©e !\");\n    },\n\n    async getOrCreateDraftOrder() {\n      const clientId = localStorage.getItem(\"clientId\");\n      const apiKey = localStorage.getItem(\"apiKey\");\n\n      if (!clientId || !apiKey) {\n        console.error(\"Client ID ou API Key manquant !\");\n        return;\n      }\n\n      let orderId = localStorage.getItem(\"orderId\");\n      if (orderId) {\n        console.log(\"Commande brouillon d√©j√† stock√©e :\", orderId);\n        return orderId;\n      }\n\n      try {\n        // 1. V√©rifier s'il existe une commande brouillon\n        const searchUrl = `https://votre-url-dolibarr/api/index.php/orders?fk_soc=${clientId}&status=0`;\n        const res = await fetch(searchUrl, {\n          headers: {\n            \"DOLAPIKEY\": apiKey,\n          },\n        });\n\n        const existingOrders = await res.json();\n\n        if (Array.isArray(existingOrders) && existingOrders.length > 0) {\n          const existingOrderId = existingOrders[0].id;\n          localStorage.setItem(\"orderId\", existingOrderId);\n          console.log(\"Commande existante trouv√©e :\", existingOrderId);\n          return existingOrderId;\n        }\n\n        // 2. Sinon, cr√©er une nouvelle commande\n        const createRes = await fetch(`https://votre-url-dolibarr/api/index.php/orders`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"DOLAPIKEY\": apiKey,\n          },\n          body: JSON.stringify({\n            socid: clientId,\n            date: new Date().toISOString().split(\"T\")[0],\n            status: 0, // brouillon\n          }),\n        });\n\n        const newOrder = await createRes.json();\n\n        if (newOrder.id) {\n          localStorage.setItem(\"orderId\", newOrder.id);\n          console.log(\"Nouvelle commande cr√©√©e :\", newOrder.id);\n          return newOrder.id;\n        } else {\n          console.error(\"Erreur lors de la cr√©ation de la commande\");\n        }\n\n      } catch (error) {\n        console.error(\"Erreur lors de la r√©cup√©ration/cr√©ation de la commande :\", error);\n      }\n    }\n  },\n  watch: {\n    cartItems: {\n      handler() {\n        this.updateTotal();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.updateTotal();\n    this.getOrCreateDraftOrder(); // üìå C‚Äôest ici qu‚Äôon lance la r√©cup√©ration\n  },\n};\n</script>\n\n<style scoped>\n/* Conteneur de la page du panier */\n.cart-page {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n/* Titre */\nh1 {\n  font-size: 32px;\n  color: #0e100e;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n/* Liste des produits dans le panier */\n.cart-items {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n/* Chaque produit du panier */\n.cart-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  background-color: #f7f7f7;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n/* D√©tails du produit */\n.cart-item-info {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n/* Image du produit */\n.cart-item-image {\n  width: 80px;\n  height: auto;\n  border-radius: 5px;\n}\n\n/* Nom et description du produit */\n.cart-item-details {\n  max-width: 400px;\n}\n\n/* Quantit√© */\n.cart-item-quantity input {\n  width: 50px;\n  padding: 5px;\n  font-size: 16px;\n  text-align: center;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* Prix unitaire et prix total */\n.cart-item-price {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.product-unit-price,\n.product-total-price {\n  font-size: 18px;\n  color: #0e100e;\n}\n\n.product-total-price {\n  font-weight: bold;\n  margin-top: 10px;\n}\n\n/* R√©sum√© du panier et bouton de commande */\n.cart-summary {\n  margin-top: 30px;\n  text-align: right;\n}\n\n.total {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.checkout-button {\n  padding: 10px 30px;\n  background-color: #5aaad8;\n  color: white;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.checkout-button:hover {\n  background-color: #0e100e;\n}\n\n/* Message quand le panier est vide */\n.empty-message {\n  text-align: center;\n  font-size: 20px;\n  color: #888;\n  margin-top: 50px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}