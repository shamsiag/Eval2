{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport NavBar from \"@/components/NavBar.vue\";\nexport default {\n  name: \"MesCommandes\",\n  data() {\n    return {\n      orders: [],\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\")\n    };\n  },\n  props: {\n    URLdlbr: {\n      type: String,\n      default: 'http://localhost/dolibarr-21.0.0/htdocs'\n    }\n  },\n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async showInvoice(orderId) {\n      // if (!this.apiKey || !this.apiLink || !this.clientId) {\n      //   throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n      // }\n      // const url = `${this.apiLink}/orders/${orderId}/invoices`;\n      // const response = await fetch(url, {\n      //   headers: { \"Content-Type\": \"application/json\",\n      //     DOLAPIKEY: this.apiKey },\n      // });\n\n      // if (!response.ok) {\n      //   throw new Error(`Erreur HTTP: ${response.status}`);\n      // }\n      // console.log(\"url\",url);\n      // const objinvoiceId = await response.json();\n      // console.log(\"response:\", objinvoiceId);\n\n      // const invoice_ref = objinvoiceId.id;\n      // console.log(\"id avant local storage\", invoice_ref);\n      this.fetchInvoiceForOrder(orderId);\n      var inv;\n      localStorage.setItem(\"invoiceId\", invoice_ref);\n      //this.$router.push(\"/invoice\");\n    },\n    async fetchOrders() {\n      try {\n        if (!this.apiKey || !this.apiLink || !this.clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n        const url = `${this.apiLink}/orders?sqlfilters=(fk_soc:=:${this.clientId})`;\n        const response = await fetch(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            DOLAPIKEY: this.apiKey\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n        const rawOrders = await response.json();\n        const ordersWithInvoices = await Promise.all(rawOrders.map(async order => {\n          const invoice = await this.fetchInvoiceForOrder(order.id);\n          return {\n            ...order,\n            invoice,\n            isPaid: invoice ? invoice.paye === \"1\" || invoice.paye === 1 : false\n          };\n        }));\n        this.orders = ordersWithInvoices;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des commandes:\", error);\n      }\n    },\n    async fetchInvoiceForOrder(orderId) {\n      try {\n        const url = `${this.apiLink}/orders/${orderId}/invoices`;\n        const response = await fetch(url, {\n          headers: {\n            DOLAPIKEY: this.apiKey\n          }\n        });\n        if (!response.ok) {\n          console.warn(`Pas de facture pour la commande ${orderId}`);\n          return null;\n        }\n        const invoices = await response.json();\n        return invoices.length > 0 ? invoices[0] : null;\n      } catch (error) {\n        console.error(\"Erreur de récupération de facture pour commande\", orderId, error);\n        return null;\n      }\n    },\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    formatDate(timestamp) {\n      if (!timestamp) return \"Inconnue\";\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n    getStatusText(order) {\n      switch (order.status) {\n        case \"0\":\n          return \"Commande créée\";\n        case \"1\":\n          if (order.billed && (order.billed === true || order.billed === \"1\")) {\n            return \"Validé-Facturé\";\n          } else if (order.invoice) {\n            return \"Validé-Facture créée\";\n          } else {\n            return \"Validé\";\n          }\n        case \"2\":\n          return \"Facturée\";\n        case \"3\":\n          return \"Livrée\";\n        case \"4\":\n          return \"Traitée\";\n        case \"-1\":\n          return \"Annulée\";\n        default:\n          return \"Statut inconnu\";\n      }\n    }\n  },\n  components: {\n    NavBar\n  }\n};","map":{"version":3,"names":["NavBar","name","data","orders","apiKey","localStorage","getItem","apiLink","clientId","props","URLdlbr","type","String","default","created","fetchOrders","methods","showInvoice","orderId","fetchInvoiceForOrder","inv","setItem","invoice_ref","Error","url","response","fetch","headers","DOLAPIKEY","ok","status","rawOrders","json","ordersWithInvoices","Promise","all","map","order","invoice","id","isPaid","paye","error","console","warn","invoices","length","formatCurrency","value","Intl","NumberFormat","style","currency","format","formatDate","timestamp","date","Date","toLocaleDateString","getStatusText","billed","components"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/OrdersPage.vue"],"sourcesContent":["<template>\n  <NavBar/>\n  <div class=\"orders-page\">\n    <h1>Mes Commandes</h1>\n    <table v-if=\"orders.length\">\n      <thead>\n        <tr>\n          <th>Référence</th>\n          <th>Date</th>\n          <th>Total TTC</th>\n          <th>Statut</th>\n          <th>Payée</th>\n          <th>Facture</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"order in orders\" :key=\"order.id\">\n          <td>{{ order.ref || order.id }}</td>\n          <td>{{ formatDate(order.date_creation) }}</td>\n          <td>{{ formatCurrency(order.total_ttc) }}</td>\n          <td>{{ getStatusText(order) }}</td>\n          <td>{{ order.isPaid ? 'Oui' : 'Non' }}</td>\n          <td>\n            <button v-if=\"order.invoice\" \n            class=\"product-button\" @click=\"showInvoice(order.invoice.id)\">Facture</button> \n            <span v-else>Aucune</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else>Aucune commande trouvée.</p>\n  </div>\n</template>\n\n<script>\nimport NavBar from \"@/components/NavBar.vue\";\nexport default {\n  name: \"MesCommandes\",\n  data() {\n    return {\n      orders: [],\n      apiKey: localStorage.getItem(\"apiKey\"),\n      apiLink: localStorage.getItem(\"apiLink\"),\n      clientId: localStorage.getItem(\"clientId\"),\n    };\n  },\n  props: {\n    URLdlbr: {\n      type: String,\n      default: 'http://localhost/dolibarr-21.0.0/htdocs',\n    },\n  },\n  \n  created() {\n    this.fetchOrders();\n  },\n  methods: {\n    async showInvoice(orderId)\n    {\n        // if (!this.apiKey || !this.apiLink || !this.clientId) {\n        //   throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        // }\n        // const url = `${this.apiLink}/orders/${orderId}/invoices`;\n        // const response = await fetch(url, {\n        //   headers: { \"Content-Type\": \"application/json\",\n        //     DOLAPIKEY: this.apiKey },\n        // });\n\n        // if (!response.ok) {\n        //   throw new Error(`Erreur HTTP: ${response.status}`);\n        // }\n        // console.log(\"url\",url);\n        // const objinvoiceId = await response.json();\n        // console.log(\"response:\", objinvoiceId);\n\n        // const invoice_ref = objinvoiceId.id;\n        // console.log(\"id avant local storage\", invoice_ref);\n        this.fetchInvoiceForOrder(orderId);\n        var inv\n        localStorage.setItem(\"invoiceId\", invoice_ref);\n        //this.$router.push(\"/invoice\");\n    },\n    async fetchOrders() {\n      try {\n        if (!this.apiKey || !this.apiLink || !this.clientId) {\n          throw new Error(\"Données manquantes (API Key, API Link ou ClientId)\");\n        }\n\n        const url = `${this.apiLink}/orders?sqlfilters=(fk_soc:=:${this.clientId})`;\n        const response = await fetch(url, {\n          headers: { \"Content-Type\": \"application/json\",\n            DOLAPIKEY: this.apiKey },\n          \n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur HTTP: ${response.status}`);\n        }\n\n        const rawOrders = await response.json();\n\n        const ordersWithInvoices = await Promise.all(\n          rawOrders.map(async (order) => {\n            const invoice = await this.fetchInvoiceForOrder(order.id);\n            return {\n              ...order,\n              invoice,\n              isPaid: invoice ? invoice.paye === \"1\" || invoice.paye === 1 : false,\n            };\n          })\n        );\n\n        this.orders = ordersWithInvoices;\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des commandes:\", error);\n      }\n    },\n\n    async fetchInvoiceForOrder(orderId) {\n      try {\n        const url = `${this.apiLink}/orders/${orderId}/invoices`;\n        const response = await fetch(url, {\n          headers: { DOLAPIKEY: this.apiKey },\n        });\n\n        if (!response.ok) {\n          console.warn(`Pas de facture pour la commande ${orderId}`);\n          return null;\n        }\n\n        const invoices = await response.json();\n        return invoices.length > 0 ? invoices[0] : null;\n      } catch (error) {\n        console.error(\"Erreur de récupération de facture pour commande\", orderId, error);\n        return null;\n      }\n    },\n\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n\n    formatDate(timestamp) {\n      if (!timestamp) return \"Inconnue\";\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString(\"fr-FR\");\n    },\n\n    getStatusText(order) {\n  switch (order.status) {\n    case \"0\":\n      return \"Commande créée\";\n    case \"1\":\n      if (order.billed && (order.billed === true || order.billed === \"1\")) {\n        return \"Validé-Facturé\";\n      } else if (order.invoice) {\n        return \"Validé-Facture créée\";\n      } else {\n        return \"Validé\";\n      }\n    case \"2\":\n      return \"Facturée\";\n    case \"3\":\n      return \"Livrée\";\n    case \"4\":\n      return \"Traitée\";\n    case \"-1\":\n      return \"Annulée\";\n    default:\n      return \"Statut inconnu\";\n  }\n},\n  },\n  components: {\n    NavBar,\n  },\n};\n</script>\n  \n  <style scoped>\n  .orders-page {\n    padding: 40px 20px;\n    background-color: #0e100e;\n    color: #f7f7f7;\n    font-family: 'PP Formula', sans-serif;\n  }\n  \n  h1 {\n    font-family: 'DAWBE';\n    font-size: 48px;\n    margin-bottom: 30px;\n    text-align: center;\n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    background: white;\n    color: #1e1e1e;\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  th, td {\n    padding: 12px 15px;\n    border: 1px solid #ddd;\n  }\n  \n  th {\n    background-color: #5aaad8;\n    color: white;\n    text-align: left;\n  }\n  \n  tbody tr:nth-child(even) {\n    background-color: #f3f3f3;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}