{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      cartId: localStorage.getItem('cartId'),\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink')\n    };\n  },\n  created() {\n    this.fetchCartItems();\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\"\n      }).format(value);\n    },\n    async fetchCartItems() {\n      if (!this.apiKey || !this.apiLink || !this.cartId) {\n        console.error(\"Informations manquantes pour récupérer le panier.\");\n        return;\n      }\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur réseau: ${response.statusText}`);\n        }\n        const items = await response.json();\n        this.cartItems = items.map(item => ({\n          id: item.id,\n          name: item.label,\n          description: item.product_desc,\n          quantity: item.qty,\n          priceTtc: item.total_ttc,\n          image: item.fk_product ? `${this.apiLink}/product/photos/${item.fk_product}` : require('@/assets/item/default-product.png')\n        }));\n        this.totalPrice = this.cartItems.reduce((sum, item) => sum + item.priceTtc, 0);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier :\", error);\n      }\n    },\n    async validateOrder() {\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/validate`, {\n          method: 'POST',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la validation : ${response.statusText}`);\n        }\n        const result = await response.json();\n        alert(\"Commande validée avec succès !\");\n        this.cartItems = [];\n        this.totalPrice = 0;\n        localStorage.removeItem('cartId');\n      } catch (error) {\n        console.error(\"Erreur lors de la validation de la commande :\", error);\n        alert(\"Une erreur est survenue lors de la validation.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cartItems","totalPrice","cartId","localStorage","getItem","apiKey","apiLink","created","fetchCartItems","methods","formatCurrency","value","Intl","NumberFormat","style","currency","format","console","error","response","fetch","headers","ok","Error","statusText","items","json","map","item","id","name","label","description","product_desc","quantity","qty","priceTtc","total_ttc","image","fk_product","require","reduce","sum","validateOrder","method","result","alert","removeItem"],"sources":["/Users/macbookpro/Sham/S6/stellarz-web/stellarz-b/stellar-web/src/views/CartPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Mon panier</h1>\n    <div v-if=\"cartItems.length === 0\">\n      <p>Votre panier est vide.</p>\n    </div>\n    <div v-else>\n      <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"item\">\n        <img :src=\"item.image\" alt=\"Produit\" class=\"product-image\" />\n        <div class=\"item-details\">\n          <h2>{{ item.name }}</h2>\n          <p>{{ item.description }}</p>\n          <p>Quantité : {{ item.quantity }}</p>\n          <p>Prix TTC : {{ formatCurrency(item.priceTtc) }}</p>\n        </div>\n      </div>\n      <p class=\"total\">Total : {{ formatCurrency(totalPrice) }}</p>\n      <button @click=\"validateOrder\" class=\"validate-button\">Valider la commande</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      totalPrice: 0,\n      cartId: localStorage.getItem('cartId'),\n      apiKey: localStorage.getItem('apiKey'),\n      apiLink: localStorage.getItem('apiLink'),\n    };\n  },\n  created() {\n    this.fetchCartItems();\n  },\n  methods: {\n    formatCurrency(value) {\n      return new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"EUR\",\n      }).format(value);\n    },\n    async fetchCartItems() {\n      if (!this.apiKey || !this.apiLink || !this.cartId) {\n        console.error(\"Informations manquantes pour récupérer le panier.\");\n        return;\n      }\n\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/lines`, {\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Accept': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur réseau: ${response.statusText}`);\n        }\n\n        const items = await response.json();\n\n        this.cartItems = items.map(item => ({\n          id: item.id,\n          name: item.label,\n          description: item.product_desc,\n          quantity: item.qty,\n          priceTtc: item.total_ttc,\n          image: item.fk_product\n            ? `${this.apiLink}/product/photos/${item.fk_product}`\n            : require('@/assets/item/default-product.png'),\n        }));\n\n        this.totalPrice = this.cartItems.reduce(\n          (sum, item) => sum + item.priceTtc,\n          0\n        );\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des articles du panier :\", error);\n      }\n    },\n    async validateOrder() {\n      try {\n        const response = await fetch(`${this.apiLink}/orders/${this.cartId}/validate`, {\n          method: 'POST',\n          headers: {\n            'DOLAPIKEY': this.apiKey,\n            'Accept': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la validation : ${response.statusText}`);\n        }\n\n        const result = await response.json();\n        alert(\"Commande validée avec succès !\");\n        this.cartItems = [];\n        this.totalPrice = 0;\n        localStorage.removeItem('cartId');\n      } catch (error) {\n        console.error(\"Erreur lors de la validation de la commande :\", error);\n        alert(\"Une erreur est survenue lors de la validation.\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding: 20px;\n}\n\n.item {\n  display: flex;\n  margin-bottom: 20px;\n  align-items: center;\n}\n\n.product-image {\n  width: 100px;\n  height: auto;\n  margin-right: 20px;\n}\n\n.item-details h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.item-details p {\n  margin: 4px 0;\n}\n\n.total {\n  font-weight: bold;\n  font-size: 18px;\n  margin-top: 20px;\n}\n\n.validate-button {\n  background-color: #4caf50;\n  color: white;\n  padding: 12px 20px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n  margin-top: 10px;\n  border-radius: 8px;\n}\n\n.validate-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}